class SingletonLock {
	static bool locked;

	atomic static void acquire () {
		select { wait (!locked) -> locked = true; }
	}

	atomic static void release () {
		locked = false;
	}
};


class BoolProg {
	static bool locked;
	atomic static bool schoose(bool pos,bool neg){
		bool s;
		if (pos)
			return true;
		else if (neg)
			return false;
		else {s = choose (bool); return s; }}

	activate static void main() {

		goto L9;
L9:;
	atomic {
		trace ("c2bp_b_9");
		trace ("c2bp_i_9_1");
		trace ("c2bp_stmt_9_1");
	}
	atomic {
		trace ("c2bpcall_9_1");
		trace ("c2bpcallrtb_7");
	}
		__init1_1();;
	atomic {
		trace ("c2bpreturnpt_9_2");
	}
		goto L7;
L7:;
	atomic {
		trace ("c2bp_b_7");
		trace ("c2bp_i_7_1");
		trace ("c2bpnext_b_6"); goto L6;
	}
L6:;
	atomic {
		trace ("c2bp_b_6");
		trace ("c2bp_i_6_1");
		trace ("c2bpnext_i_6_2");
		trace ("c2bp_stmt_6_1");
		trace ("C_48_6_1");
	}
	atomic {
		trace ("c2bp_i_6_2");
		trace ("c2bpnext_i_6_3");
		trace ("c2bp_stmt_6_2");
		trace ("C_49_6_2");
	}
	atomic {
		trace ("c2bp_i_6_3");
		trace ("c2bpnext_b_5"); goto L5;
	}
L5:;
	atomic {
		trace ("c2bp_b_5");
		trace ("ASYNC_1");
		trace ("c2bp_i_5_1");
		trace ("c2bp_stmt_5_1");
	}
	atomic {
		trace ("c2bpcall_5_1");
		trace ("C_52_5_1");
	}
		async p1_1();;
	atomic {
		trace ("c2bpreturnpt_5_2");
	}
		goto L3;
L3:;
	atomic {
		trace ("c2bp_b_3");
		trace ("ASYNC_2");
		trace ("c2bp_i_3_1");
		trace ("c2bp_stmt_3_1");
	}
	atomic {
		trace ("c2bpcall_3_1");
		trace ("C_53_3_1");
	}
		async p2_1();;
	atomic {
		trace ("c2bpreturnpt_3_2");
	}
		goto L1;
L1:;
	atomic {
		trace ("c2bp_b_1");
		trace ("c2bp_i_1_1");
		trace ("c2bpreturnstmt");
		return;
	}
	}

	static void assert_1() {

		goto L8;
L10:;
	atomic {
		trace ("c2bp_b_10");
		trace ("c2bp_i_10_1");
		trace ("c2bpnext_b_1"); goto L1;
	}
L8:;
	atomic {
		trace ("c2bp_b_8");
		trace ("c2bp_i_8_1");
		trace ("c2bpnext_b_7"); goto L7;
	}
L7:;
	atomic {
		trace ("c2bp_b_7");
		trace ("c2bp_i_7_1");
		trace ("C_6_7_1");
		select {
				wait(true) -> { assume (true); trace ("c2bpnext_b_4"); goto L4; }
				wait(true) -> { assume (true); trace ("c2bpnext_b_10"); goto L10; }
			}
	}
L4:;
	atomic {
		trace ("c2bp_b_4");
		trace ("SLIC_ERROR"); assert (false);
		trace ("c2bp_i_4_1");
		trace ("c2bpnext_b_3"); goto L3;
	}
L3:;
	atomic {
		trace ("c2bp_b_3");
		trace ("c2bp_i_3_1");
		trace ("c2bpnext_b_2"); goto L2;
	}
L2:;
	atomic {
		trace ("c2bp_b_2");
		trace ("c2bp_i_2_1");
		trace ("c2bpnext_b_1"); goto L1;
	}
L1:;
	atomic {
		trace ("c2bp_b_1");
		trace ("c2bp_i_1_1");
		trace ("c2bpreturnstmt");
		return;
	}
	}

	static void __init1_1() {

		goto L3;
L3:;
	atomic {
		trace ("c2bp_b_3");
		trace ("c2bp_i_3_1");
		trace ("c2bpnext_b_2"); goto L2;
	}
L2:;
	atomic {
		trace ("c2bp_b_2");
		trace ("c2bp_i_2_1");
		trace ("c2bpnext_b_1"); goto L1;
	}
L1:;
	atomic {
		trace ("c2bp_b_1");
		trace ("c2bp_i_1_1");
		trace ("c2bpreturnstmt");
		return;
	}
	}

	static void p1_1() {

		goto L9;
L13:;
	atomic {
		trace ("c2bp_b_13");
		trace ("c2bp_i_13_1");
		trace ("c2bpnext_b_7"); goto L7;
	}
L12:;
	atomic {
		trace ("c2bp_b_12");
		trace ("c2bp_i_12_1");
		trace ("c2bpnext_b_3"); goto L3;
	}
L11:;
	atomic {
		trace ("c2bp_b_11");
		trace ("c2bp_i_11_1");
		trace ("c2bpnext_b_3"); goto L3;
	}
L9:;
	atomic {
		trace ("c2bp_b_9");
		trace ("c2bp_i_9_1");
		trace ("c2bpnext_b_8"); goto L8;
	}
L8:;
	atomic {
		trace ("c2bp_b_8");
		trace ("c2bp_i_8_1");
		trace ("c2bpnext_i_8_2");
		trace ("c2bp_stmt_8_1");
		trace ("C_18_8_1");
	}
	atomic {
		trace ("c2bp_i_8_2");
		trace ("c2bpnext_i_8_3");
		trace ("c2bp_stmt_8_2");
		trace ("C_19_8_2");
	}
	atomic {
		trace ("c2bp_i_8_3");
		trace ("c2bpnext_b_7"); goto L7;
	}
L7:;
	atomic {
		trace ("c2bp_b_7");
		trace ("c2bp_i_7_1");
		trace ("C_20_7_1");
		select {
				wait(true) -> { assume (true); trace ("c2bpnext_b_11"); goto L11; }
				wait(true) -> { assume (true); trace ("c2bpnext_b_6"); goto L6; }
			}
	}
L6:;
	atomic {
		trace ("c2bp_b_6");
		trace ("c2bp_i_6_1");
		trace ("C_20_6_1");
		select {
				wait(true) -> { assume (true); trace ("c2bpnext_b_12"); goto L12; }
				wait(true) -> { assume (true); trace ("c2bpnext_b_13"); goto L13; }
			}
	}
L3:;
	atomic {
		trace ("c2bp_b_3");
		trace ("c2bp_i_3_1");
		trace ("c2bpnext_i_3_2");
		trace ("c2bp_stmt_3_1");
		trace ("C_23_3_1");
	}
	atomic {
		trace ("c2bp_i_3_2");
		trace ("c2bp_stmt_3_2");
	}
	atomic {
		trace ("c2bpcall_3_2");
		trace ("C_24_3_2");
		trace ("c2bpcallrtb_2");
	}
		assert_1();;
	atomic {
		trace ("c2bpreturnpt_3_3");
	}
		goto L2;
L2:;
	atomic {
		trace ("c2bp_b_2");
		trace ("c2bp_i_2_1");
		trace ("c2bpnext_i_2_2");
		trace ("c2bp_stmt_2_1");
		trace ("C_28_2_1");
	}
	atomic {
		trace ("c2bp_i_2_2");
		trace ("c2bpnext_i_2_3");
		trace ("c2bp_stmt_2_2");
		trace ("C_29_2_2");
	}
	atomic {
		trace ("c2bp_i_2_3");
		trace ("c2bpnext_b_1"); goto L1;
	}
L1:;
	atomic {
		trace ("c2bp_b_1");
		trace ("c2bp_i_1_1");
		trace ("c2bpreturnstmt");
		return;
	}
	}

	static void p2_1() {

		goto L9;
L13:;
	atomic {
		trace ("c2bp_b_13");
		trace ("c2bp_i_13_1");
		trace ("c2bpnext_b_7"); goto L7;
	}
L12:;
	atomic {
		trace ("c2bp_b_12");
		trace ("c2bp_i_12_1");
		trace ("c2bpnext_b_3"); goto L3;
	}
L11:;
	atomic {
		trace ("c2bp_b_11");
		trace ("c2bp_i_11_1");
		trace ("c2bpnext_b_3"); goto L3;
	}
L9:;
	atomic {
		trace ("c2bp_b_9");
		trace ("c2bp_i_9_1");
		trace ("c2bpnext_b_8"); goto L8;
	}
L8:;
	atomic {
		trace ("c2bp_b_8");
		trace ("c2bp_i_8_1");
		trace ("c2bpnext_i_8_2");
		trace ("c2bp_stmt_8_1");
		trace ("C_34_8_1");
	}
	atomic {
		trace ("c2bp_i_8_2");
		trace ("c2bpnext_i_8_3");
		trace ("c2bp_stmt_8_2");
		trace ("C_35_8_2");
	}
	atomic {
		trace ("c2bp_i_8_3");
		trace ("c2bpnext_b_7"); goto L7;
	}
L7:;
	atomic {
		trace ("c2bp_b_7");
		trace ("c2bp_i_7_1");
		trace ("C_36_7_1");
		select {
				wait(true) -> { assume (true); trace ("c2bpnext_b_11"); goto L11; }
				wait(true) -> { assume (true); trace ("c2bpnext_b_6"); goto L6; }
			}
	}
L6:;
	atomic {
		trace ("c2bp_b_6");
		trace ("c2bp_i_6_1");
		trace ("C_36_6_1");
		select {
				wait(true) -> { assume (true); trace ("c2bpnext_b_12"); goto L12; }
				wait(true) -> { assume (true); trace ("c2bpnext_b_13"); goto L13; }
			}
	}
L3:;
	atomic {
		trace ("c2bp_b_3");
		trace ("c2bp_i_3_1");
		trace ("c2bpnext_i_3_2");
		trace ("c2bp_stmt_3_1");
		trace ("C_39_3_1");
	}
	atomic {
		trace ("c2bp_i_3_2");
		trace ("c2bp_stmt_3_2");
	}
	atomic {
		trace ("c2bpcall_3_2");
		trace ("C_40_3_2");
		trace ("c2bpcallrtb_2");
	}
		assert_1();;
	atomic {
		trace ("c2bpreturnpt_3_3");
	}
		goto L2;
L2:;
	atomic {
		trace ("c2bp_b_2");
		trace ("c2bp_i_2_1");
		trace ("c2bpnext_i_2_2");
		trace ("c2bp_stmt_2_1");
		trace ("C_41_2_1");
	}
	atomic {
		trace ("c2bp_i_2_2");
		trace ("c2bpnext_i_2_3");
		trace ("c2bp_stmt_2_2");
		trace ("C_44_2_2");
	}
	atomic {
		trace ("c2bp_i_2_3");
		trace ("c2bpnext_b_1"); goto L1;
	}
L1:;
	atomic {
		trace ("c2bp_b_1");
		trace ("c2bp_i_1_1");
		trace ("c2bpreturnstmt");
		return;
	}
	}

};
