class bakeryAlgo
{
	static bool choosing1;
	static bool choosing2;
	static bool choosing3;
	static int number1;
	static int number2;
	static int number3;
	static bool p1InCS;
	static bool p2InCS;
	static bool p3InCS;

	static void p1()
	{
		int max=0;
		choosing1 = true;
		if(number2 > max)
			max = number2;
		if(number3 > max)
			max = number3;
		number1 = max+1;
		choosing1 = false;
		while(choosing2);
		while((number2 != 0) && (number2 < number1));
		while(choosing3);
		while((number3 != 0) && (number3 < number1));
		
		//CS begins here
		p1InCS = true;
		assert(!p2InCS);
		assert(!p3InCS);
		
		p1InCS = false;
		//CS ends here

		number1 = 0;
	}

	static void p2()
	{
		int max=0;
		choosing2 = true;
		if(number1 > max)
			max = number1;
		if(number3 > max)
			max = number3;
		number2 = max+1;
		choosing2 = false;
		while(choosing1);
		while((number1 != 0) && (number1 <= number2));
		while(choosing3);
		while((number3 != 0) && (number3 < number2));
	
		//CS begins here
		p2InCS = true;
		assert(!p1InCS);
		assert(!p3InCS);
		
		p2InCS = false;
		//CS ends here

		number2 = 0;
	}

	static void p3()
	{
		int max=0;
		choosing3 = true;
		if(number1 > max)
			max = number1;
		if(number2 > max)
			max = number2;
		number3 = max+1;
		choosing3 = false;
		while(choosing1);
		while((number1 != 0) && (number1 <= number3));
		while(choosing2);
		while((number2 != 0) && (number2 <= number3));

		//CS begins here
		p3InCS = true;
		assert(!p2InCS);
		assert(!p1InCS);
		
		p3InCS = false;
		//CS ends here

		number3 = 0;
	}

	activate static void main()
	{
		choosing1 = false;
		choosing2 = false;
		choosing3 = false;

		number1 = 0;			
		number2 = 0;
		number3 = 0;

		async p1();
		async p2();
		async p3();
	}
};