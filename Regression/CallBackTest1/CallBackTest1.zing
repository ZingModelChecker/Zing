range MyRange 0..10;

class Any 
{
	int value;
};

array AnyArray [] Any;

class MyClass {
	object Run(object o)
	{
		AnyArray arr = o;
		int sum = 0;
		foreach (Any a in arr)
		{
			sum = sum + a.value;
		}
		Any result = new Any;
		result.value = sum;
		return result;
	}
};

class user {
	
	static activate void main()
	{
		Virtualizer virtualizer;		
		MyClass my;
		int n;
		int i;
	    object o;
	    							
		my = new MyClass;
		virtualizer = new Virtualizer;		
		
		n = choose(MyRange);
		
		AnyArray par = new AnyArray[n];
		i = 0;
		while (i < n)
		{
			par[i] = new Any;
			par[i].value = i;
			i = i + 1;
		}
				
		// Classic call		
		Any result1;
		result1 = my.Run(par);
		assert(result1.value == (n-1)*n/2);
		
		// Delegate call
		Any result2;
		o = my;		
		virtualizer.DoVirtualCall(o, "Run", par);
		result2 = virtualizer.GetResultForVirtualCall();
		assert(result2.value == (n-1)*n/2);
						
		assert(n != 10);
	}
};
