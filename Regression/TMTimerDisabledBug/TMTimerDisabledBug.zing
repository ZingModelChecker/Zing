class ___X_Routines {
  bool ____locked = false;
  
  bool ____signal = false;
  
  int ____waitCount = 0;
  
  static bool ___nondet_choice() {
			atomic {
				select {
					wait(true) -> return true ;
					wait(true) -> return false;
				}
			}
  }
  
  static void ___skip() {
  }
  
  static void ___Assert_Boolean(bool ___b) { assert(___b);
  }
  
  static void ___Assume_Boolean(bool ___b) { assume(___b);
  }
  
  void ___Routines_ctor() {
  }
};

class ___X_MyAutoResetEvent {
  bool ____locked = false;
  
  bool ____signal = false;
  
  int ____waitCount = 0;
  
  bool ___b;
  
  void ___MyAutoResetEvent_ctor(bool ___c) {
    trace(@"#line", 0, 42, 36, 42, 45);
    
    this.___b = ___c;

  }
  
  void ___Set() {
    trace(@"#line", 0, 43, 22, 43, 34);
    
    this.___b = true;

  }
  
  void ___WaitOne() {
			atomic {
				select {
				    wait(this.___b) -> this.___b = false;
			    }
			}
  }
};

class ___X_MyManualResetEvent {
  bool ____locked = false;
  
  bool ____signal = false;
  
  int ____waitCount = 0;
  
  bool ___b;
  
  void ___MyManualResetEvent_ctor(bool ___c) {
    trace(@"#line", 0, 58, 38, 58, 47);
    
    this.___b = ___c;

  }
  
  void ___Set() {
    trace(@"#line", 0, 59, 22, 59, 34);
    
    this.___b = true;

  }
  
  void ___WaitOne() {
			atomic {
				select {
					wait(this.___b) -> ;
				}
			}

  }
};

class ___X_Init {
  static int count;
  bool ____locked = false;
  
  bool ____signal = false;
  
  int ____waitCount = 0;
  
  static ___X_TransactionTable ___tx_table;
  
  static ___X_LightweightTransaction ___CreateTransaction() {
    ___X_LightweightTransaction ___tx;
    atomic {
      trace(@"#line", 0, 77, 35, 77, 67);
      
      ___tx = new ___X_LightweightTransaction;

      ___tx.___LightweightTransaction_ctor0();
    }
    trace(@"#line", 0, 78, 3, 78, 38);
    ___X_Init.___tx_table.___Add_LtmInternalTransaction(___tx.___internalTransaction);
    atomic {
      trace(@"#line", 0, 79, 3, 79, 12);
      goto _____G_0;
    }
    _____G_0:
 {
    }
    atomic {
      trace(@"#line", 0, 77, 35, 79, 12);
      return ___tx;
    }
  }
  
  static activate void ___Main() {
    atomic {
      trace(@"#file", 0, @"C:\t-mnaik\Indigo\tx-initial\System.Transactions\tx.cs");
      trace(@"#line", 0, 82, 2, 91, 14);
      ____namespace.____InitStatics();
    }
    ___X_IVENotification ___VRM;
    ___X_LightweightTransaction ___tx2;
    ___X_VolatileEnlistment ____any0;
    ___X_LtmInternalTransaction tx1;

    trace(@"#line", 0, 85, 3, 85, 21);

    trace(@"#line", 0, 86, 26, 86, 50);

    atomic {
      trace(@"#line", 0, 88, 19, 88, 45);
      
      ___VRM = new ___X_IVENotification;

      ___VRM.___IVENotification_ctor();
    }
    
    tx1 = new ___X_LtmInternalTransaction;
    atomic {
    ___X_Init.___tx_table.___Add_LtmInternalTransaction(tx1);
    }
    atomic {
    ___X_Init.___tx_table.___Remove_LtmInternalTransaction(tx1);
    }


    ___tx2 = ___X_Init.___CreateTransaction();

    trace(@"#line", 0, 90, 3, 90, 38);
    
    ____any0 = ___tx2.___VolatileEnlist_IVENotification_Boolean_VN(___VRM, true, ___X_VN.___TP);

    trace(@"#line", 0, 91, 3, 91, 14);
    ___tx2.___Commit();



  }
  
  void ___Init_ctor() {
  }
};

class ___X_TransactionTable {
  bool ____locked = false;
  
  bool ____signal = false;
  
  int ____waitCount = 0;
  
  bool ___timerEnabled;
  
  ___PrimitiveArray_L_TransactionList_R ___transactionLists;
  
  bool ___transactionsAdded;
  
  int ___TransactionListCount;
  
  void ___RunTimer() {
      while (true) {
          if (!this.___timerEnabled)
              goto XXX;
          select {
              wait(true) -> ;
              wait(true) -> ___threadTimer();
          }
      }
XXX: ;
  }
  
  void ___TransactionTable_ctor() {
 {
      trace(@"#line", 0, 100, 43, 100, 43);
      
      this.___TransactionListCount = 2;

    }
    int ___i;
    bool _____flt0;
    trace(@"#line", 0, 123, 3, 123, 27);
    
    this.___timerEnabled = false;

    atomic {
      trace(@"#line", 0, 125, 3, 129, 3);
      assume((this.___TransactionListCount <= 32));
      
      this.___transactionLists = new ___PrimitiveArray_L_TransactionList_R;

      
      this.___transactionLists.repr = new  ______PrimitiveArray_L_TransactionList_R_zarray;

      
      this.___transactionLists.leng = this.___TransactionListCount;

      
      ___i = 0;

      
      _____flt0 = (___i < this.___TransactionListCount);

      while (_____flt0) {
        assert(((___i >= 0) && (___i < this.___transactionLists.leng)), @"array index out of bound");
        
        this.___transactionLists.repr[___i] = new ___X_TransactionList;

        this.___transactionLists.repr[___i].___TransactionList_ctor();
        
        ___i = (___i + 1);

        
        _____flt0 = (___i < this.___TransactionListCount);

      }
    }
  }
  
  void ___Add_LtmInternalTransaction(___X_LtmInternalTransaction ___txNew) {
    int ___listForTx;
    ___X_TransactionList _____flt0;
    bool _____flt1;
    atomic {
      trace(@"#line", 0, 134, 7, 135, 34);
      
      ___listForTx = (___txNew.___TransactionHash % this.___TransactionListCount);

      assert(((___listForTx >= 0) && (___listForTx < this.___transactionLists.leng)), @"array index out of bound");
      
      _____flt0 = this.___transactionLists.repr[___listForTx];

    }
    trace(@"#line", 0, 135, 3, 135, 47);
    _____flt0.___Add_LtmInternalTransaction(___txNew);
    atomic {
      trace(@"#line", 0, 137, 7, 137, 24);
      
      _____flt1 = !this.___timerEnabled;

    }
    trace(@"#line", 0, 137, 3, 146, 3);
    if (_____flt1) {
      bool _____flt2;
      atomic {
        select first {
          wait (!this.____locked) ->
            
            this.____locked = true;

        }
        trace(@"#line", 0, 139, 10, 141, 26);
        
        _____flt2 = !this.___timerEnabled;

      }
      trace(@"#line", 0, 141, 5, 144, 5);
      if (_____flt2) {
        trace(@"#line", 0, 143, 6, 143, 29);
        assume(___X_Init.count == 0);        
        ___X_Init.count = ___X_Init.count + 1;
        this.___timerEnabled = true;
        async ___X_Init.___tx_table.___RunTimer();

      }
      else {
      }
      atomic {
        trace(@"#line", 0, 139, 10, 139, 13);
        
        this.____locked = false;

      }
    }
    else {
    }
    trace(@"#line", 0, 148, 3, 148, 31);
    
    this.___transactionsAdded = true;

  }
  
  void ___Remove_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    bool _____flt0;
    int ___listForTx;
    ___X_TransactionList _____flt1;
    atomic {
      trace(@"#line", 0, 153, 3, 156, 34);
      
      _____flt0 = !___tx.___inTimerList;

      if (_____flt0) {
        goto _____G_0;
      }
      else {
      }
    }      
      ___listForTx = (___tx.___TransactionHash % this.___TransactionListCount);

      assert(((___listForTx >= 0) && (___listForTx < this.___transactionLists.leng)), @"array index out of bound");
      
      _____flt1 = this.___transactionLists.repr[___listForTx];


    trace(@"#line", 0, 156, 3, 156, 47);
    _____flt1.___Remove_LtmInternalTransaction(___tx);
    _____G_0:
 {
    }
  }
  
  void ___threadTimer() {
    bool _____flt0;
    bool ___transactionsRemain;
    int ___i;
    bool _____flt1;
    bool _____flt4;
    atomic {
      trace(@"#line", 0, 161, 3, 164, 3);
      
      _____flt0 = !this.___timerEnabled;

      if (_____flt0) {
        goto _____G_0;
      }
      else {
      }
    }
    trace(@"#line", 0, 166, 3, 166, 32);
    
    this.___transactionsAdded = false;

    atomic {
      trace(@"#line", 0, 168, 8, 170, 42);
      
      ___transactionsRemain = false;

      
      ___i = 0;

      
      _____flt1 = (___i < this.___TransactionListCount);

    }
    trace(@"#line", 0, 170, 3, 174, 3);
    while (_____flt1) {
      ___X_TransactionList _____flt2;
      bool ___b;
      atomic {
        trace(@"#line", 0, 172, 13, 172, 36);
        assert(((___i >= 0) && (___i < this.___transactionLists.leng)), @"array index out of bound");
        
        _____flt2 = this.___transactionLists.repr[___i];

      }
      trace(@"#line", 0, 172, 9, 172, 50);
      
      ___b = _____flt2.___ProcessList();

      atomic {
        trace(@"#line", 0, 170, 19, 173, 27);
        
        ___transactionsRemain = (___transactionsRemain || !___b);

        
        ___i = (___i + 1);

        
        _____flt1 = (___i < this.___TransactionListCount);

      }
    }
    atomic {
      trace(@"#line", 0, 175, 7, 175, 52);
      if (!___transactionsRemain) {
        bool _____flt7;
        
        _____flt7 = !this.___transactionsAdded;

        
        _____flt4 = _____flt7;

      }
      else {
        
        _____flt4 = false;

      }
    }
    trace(@"#line", 0, 175, 3, 186, 3);
    if (_____flt4) {
      bool _____flt5;
      atomic {
        select first {
          wait (!this.____locked) ->
            
            this.____locked = true;

        }
        trace(@"#line", 0, 177, 10, 179, 31);
        
        _____flt5 = !this.___transactionsAdded;

      }
      trace(@"#line", 0, 179, 5, 184, 5);
      if (_____flt5) {
        trace(@"#line", 0, 183, 6, 183, 30);
        
        this.___timerEnabled = false;

      }
      else {
      }
      atomic {
        trace(@"#line", 0, 177, 10, 177, 13);
        
        this.____locked = false;

      }
    }
    else {
    }
    _____G_0:
 {
    }
  }
};

class ___X_TransactionList {
  bool ____locked = false;
  
  bool ____signal = false;
  
  int ____waitCount = 0;
  
  ___X_LtmInternalTransaction ___timeoutListHead;
  
  ___X_LtmInternalTransaction ___timeoutListTail;
  
  void ___TransactionList_ctor() {
  }
  
  void ___Add_LtmInternalTransaction(___X_LtmInternalTransaction ___txNew) {
    bool _____flt0;
    atomic {
      select first {
        wait (!this.____locked) ->
          
          this.____locked = true;

      }
      trace(@"#line", 0, 198, 9, 200, 35);
      
      _____flt0 = (this.___timeoutListTail == null);

    }
    trace(@"#line", 0, 200, 4, 238, 4);
    if (_____flt0) {
      bool _____flt1;
      atomic {
        trace(@"#line", 0, 203, 22, 203, 49);
        
        _____flt1 = (this.___timeoutListHead == null);

      }
      trace(@"#line", 0, 203, 5, 203, 51);
      ___X_Routines.___Assert_Boolean(_____flt1);
      trace(@"#line", 0, 204, 5, 204, 32);
      
      this.___timeoutListTail = ___txNew;

      trace(@"#line", 0, 205, 5, 205, 32);
      
      this.___timeoutListHead = ___txNew;

    }
    else {
      ___X_LtmInternalTransaction ___txCurrent;
      ___X_LtmInternalTransaction ___txLast;
      bool _____flt3;
      bool _____flt2;
      atomic {
        trace(@"#line", 0, 209, 28, 211, 28);
        
        ___txCurrent = this.___timeoutListTail;

        
        ___txLast = null;

        
        _____flt3 = (___txCurrent != null);

      }
      trace(@"#line", 0, 211, 12, 211, 56);
      if (_____flt3) {
        bool _____flt4;
        trace(@"#line", 0, 211, 33, 211, 56);
        
        _____flt4 = ___X_Routines.___nondet_choice();

        atomic {
          trace(@"#line", 0, 211, 33, 211, 56);
          
          _____flt2 = _____flt4;

        }
      }
      else {
        trace(@"#line", 0, 211, 12, 211, 56);
        
        _____flt2 = false;

      }
      trace(@"#line", 0, 211, 5, 215, 5);
      while (_____flt2) {
        bool _____flt5;
        atomic {
          trace(@"#line", 0, 211, 12, 214, 35);
          
          ___txLast = ___txCurrent;

          
          ___txCurrent = ___txCurrent.___prevLink;

          
          _____flt5 = (___txCurrent != null);

        }
        trace(@"#line", 0, 211, 12, 211, 56);
        if (_____flt5) {
          bool _____flt6;
          trace(@"#line", 0, 211, 33, 211, 56);
          
          _____flt6 = ___X_Routines.___nondet_choice();

          atomic {
            trace(@"#line", 0, 211, 33, 211, 56);
            
            _____flt2 = _____flt6;

          }
        }
        else {
          trace(@"#line", 0, 211, 12, 211, 56);
          
          _____flt2 = false;

        }
      }
      trace(@"#line", 0, 217, 5, 237, 5);
      if ((___txCurrent == null)) {
        trace(@"#line", 0, 220, 6, 220, 33);
        
        this.___timeoutListHead = ___txNew;

        trace(@"#line", 0, 221, 6, 221, 28);
        
        ___txNew.___nextLink = ___txLast;

        trace(@"#line", 0, 222, 6, 222, 28);
        
        ___txLast.___prevLink = ___txNew;

      }
      else {
        trace(@"#line", 0, 226, 6, 226, 31);
        
        ___txCurrent.___nextLink = ___txNew;

        trace(@"#line", 0, 227, 6, 227, 31);
        
        ___txNew.___prevLink = ___txCurrent;

        trace(@"#line", 0, 228, 6, 236, 6);
        if ((___txLast == null)) {
          trace(@"#line", 0, 230, 7, 230, 34);
          
          this.___timeoutListTail = ___txNew;

        }
        else {
          trace(@"#line", 0, 234, 7, 234, 29);
          
          ___txLast.___prevLink = ___txNew;

          trace(@"#line", 0, 235, 7, 235, 29);
          
          ___txNew.___nextLink = ___txLast;

        }
      }
    }
    trace(@"#line", 0, 240, 4, 240, 27);
    
    ___txNew.___inTimerList = true;

    atomic {
      trace(@"#line", 0, 198, 9, 198, 12);
      
      this.____locked = false;

    }
  }
  
  void ___Remove_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    bool _____flt0;
    bool _____flt1;
    bool _____flt2;
    bool _____flt3;
    bool _____flt4;
    atomic {
      trace(@"#line", 0, 247, 3, 252, 26);
      
      _____flt0 = !___tx.___inTimerList;

      if (_____flt0) {
        goto _____G_0;
      }
      else {
      }
    }
    atomic {
      select first {
        wait (!this.____locked) ->
          
          this.____locked = true;

      }
    }      
      _____flt1 = (___tx.___nextLink != null);


    trace(@"#line", 0, 252, 4, 255, 4);
    if (_____flt1) {
      trace(@"#line", 0, 254, 5, 254, 38);
      
      ___tx.___nextLink.___prevLink = ___tx.___prevLink;

    }
    else {
    }
    atomic {
      trace(@"#line", 0, 257, 8, 257, 26);
      
      _____flt2 = (___tx.___prevLink != null);

    }
    trace(@"#line", 0, 257, 4, 260, 4);
    if (_____flt2) {
      trace(@"#line", 0, 259, 5, 259, 38);
      
      ___tx.___prevLink.___nextLink = ___tx.___nextLink;

    }
    else {
    }
    atomic {
      trace(@"#line", 0, 262, 8, 262, 33);
      
      _____flt3 = (___tx == this.___timeoutListHead);

    }
    trace(@"#line", 0, 262, 4, 265, 4);
    if (_____flt3) {
      trace(@"#line", 0, 264, 5, 264, 38);
      
      this.___timeoutListHead = ___tx.___nextLink;

    }
    else {
    }
    atomic {
      trace(@"#line", 0, 267, 8, 267, 33);
      
      _____flt4 = (___tx == this.___timeoutListTail);

    }
    trace(@"#line", 0, 267, 4, 270, 4);
    if (_____flt4) {
      trace(@"#line", 0, 269, 5, 269, 38);
      
      this.___timeoutListTail = ___tx.___prevLink;

    }
    else {
    }
    trace(@"#line", 0, 272, 4, 272, 21);
    
    ___tx.___nextLink = null;

    trace(@"#line", 0, 273, 4, 273, 21);
    
    ___tx.___prevLink = null;

    atomic {
      trace(@"#line", 0, 250, 9, 250, 12);
      
      this.____locked = false;

    }
    _____G_0:
 {
    }
  }
  
  bool ___ProcessList() {
    bool ___listEmpty;
    bool ___flag;
    ___X_LtmInternalTransaction ___tx;
    atomic {
      trace(@"#line", 0, 280, 8, 282, 34);
      
      ___listEmpty = false;

      
      ___flag = true;

      
      ___tx = null;

    }
    trace(@"#line", 0, 284, 3, 332, 3);
    while (___flag) {
      bool _____flt0;
      bool _____flt7;
      bool _____flt4;
      bool _____flt3;
      bool _____flt9;
      atomic {
        trace(@"#line", 0, 286, 4, 289, 36);
        
        ___tx = null;
      }
      atomic {
        select first {
          wait (!this.____locked) ->
            
            this.____locked = true;

        }
     }   
        _____flt0 = (this.___timeoutListHead != null);


      trace(@"#line", 0, 289, 5, 313, 5);
      if (_____flt0) {
        bool _____flt1;
        trace(@"#line", 0, 291, 10, 291, 33);
        
        _____flt1 = ___X_Routines.___nondet_choice();

        trace(@"#line", 0, 291, 6, 308, 6);
        if (_____flt1) {
          bool _____flt2;
          atomic {
            trace(@"#line", 0, 293, 7, 293, 31);
            
            ___tx = this.___timeoutListHead;

          }
          trace(@"#line", 0, 295, 7, 295, 40);
          
          this.___timeoutListHead = ___tx.___nextLink;

          atomic {
            trace(@"#line", 0, 296, 11, 296, 38);
            
            _____flt2 = (this.___timeoutListHead != null);

          }
          trace(@"#line", 0, 296, 7, 303, 7);
          if (_____flt2) {
            trace(@"#line", 0, 298, 8, 298, 43);
            
            this.___timeoutListHead.___prevLink = null;

          }
          else {
            trace(@"#line", 0, 302, 8, 302, 34);
            
            this.___timeoutListTail = null;

          }
        }
        else {
        }
      }
      else {
        trace(@"#line", 0, 312, 6, 312, 21);
        
        ___listEmpty = true;

      }
      atomic {
        trace(@"#line", 0, 314, 22, 315, 67);
        
        _____flt7 = (this.___timeoutListTail == null);

        if (_____flt7) {
          bool _____flt8;
          
          _____flt8 = (this.___timeoutListHead == null);

          
          _____flt4 = _____flt8;

        }
        else {
          
          _____flt4 = false;

        }
        if (_____flt4) {
          
          _____flt3 = true;

        }
        else {
          bool _____flt5;
          
          _____flt5 = (this.___timeoutListTail != null);

          if (_____flt5) {
            bool _____flt6;
            
            _____flt6 = (this.___timeoutListHead != null);

            
            _____flt3 = _____flt6;

          }
          else {
            
            _____flt3 = false;

          }
        }
      }
      trace(@"#line", 0, 314, 5, 315, 69);
      ___X_Routines.___Assert_Boolean(_____flt3);
      atomic {
        trace(@"#line", 0, 287, 10, 317, 17);
        


        
        _____flt9 = (___tx != null);

      }
      trace(@"#line", 0, 317, 4, 330, 4);
      if (_____flt9) {
        trace(@"#line", 0, 319, 5, 319, 22);
        
        ___tx.___prevLink = null;

        trace(@"#line", 0, 320, 5, 320, 22);
        
        ___tx.___nextLink = null;

        trace(@"#line", 0, 321, 5, 321, 26);
        
        ___tx.___inTimerList = false;

      }
      this.____locked = false;
      if (_____flt9) {
        atomic {
          select first {
            wait (!___tx.____locked) ->
              
              ___tx.____locked = true;

          }
          trace(@"#line", 0, 326, 11, 326, 12);
        }
        trace(@"#line", 0, 328, 6, 328, 27);
        ___tx.___State.___Timeout_LtmInternalTransaction(___tx);
        atomic {
          trace(@"#line", 0, 326, 11, 326, 12);
          
          ___tx.____locked = false;

        }
      }
      else {
      }
      atomic {
        trace(@"#line", 0, 331, 4, 331, 34);
        if ((___tx == null)) {
          
          ___flag = false;

        }
        else {
        }
      }
    }
    atomic {
      trace(@"#line", 0, 334, 3, 334, 19);
      goto _____G_0;
    }
    _____G_0:
 {
    }
    atomic {
      trace(@"#line", 0, 280, 8, 334, 19);
      return ___listEmpty;
    }
  }
};

class ___X_IDENotification {
  bool ____locked = false;
  
  bool ____signal = false;
  
  int ____waitCount = 0;
  
  void ___IDENotification_ctor() {
  }
  
  void ___SinglePhaseCommit_DurableEnlistment(___X_DurableEnlistment ___e) {
        select {
	      wait(true)  -> ;
	      wait(false) -> ;
	      wait(true)  -> ___e.___Committed();
	      wait(true)  -> ___e.___Aborted();
	      wait(true)  -> ___e.___InDoubt();
	      wait(true)  -> ___e.___EnlistmentDone();
        }
  }
  
  void ___Rollback_DurableEnlistment(___X_DurableEnlistment ___e) {
        select {
	      wait(true)  -> ;
	      wait(false) -> ;
	      wait(true)  -> ___e.___EnlistmentDone();
        }
  }
};

class ___X_IVENotification {
  bool ____locked = false;
  
  bool ____signal = false;
  
  int ____waitCount = 0;
  
  void ___IVENotification_ctor() {
  }
  
  void ___SinglePhaseCommit_VolatileEnlistment(___X_VolatileEnlistment ___e)  {
        select {
          wait(true)  -> ;
	      wait(false) -> ;
	      wait(true)  -> ___e.___Committed();
	      wait(true)  -> ___e.___Aborted();
	      wait(true)  -> ___e.___InDoubt();
              wait(true)  -> ___e.___EnlistmentDone();
        }
  }
  
  void ___Prepare_VolatileEnlistment(___X_VolatileEnlistment ___e) {
        select {
	      wait(true)  -> ;
        }
  }
  
  void ___Commit_VolatileEnlistment(___X_VolatileEnlistment ___e) {
        select {
          wait(true)  -> ;
        }
  }
  
  void ___Rollback_VolatileEnlistment(___X_VolatileEnlistment ___e) {
        select {
          wait(true)  -> ; 
          wait(false) -> ; 
          wait(true)  -> ___e.___EnlistmentDone();
        }
  }
  
  void ___InDoubt() {
        select {
          wait(true)  -> ;
          wait(false) -> ;
        }
  }
};

class ___X_LtmInternalTransaction {
  bool ____locked = false;
  
  bool ____signal = false;
  
  int ____waitCount = 0;
  
  ___X_TransactionState ___State;
  
  int ___TransactionHash;
  
  ___X_DurableEnlistment ___durableEnlistment;
  
  ___X_VolatileEnlistmentSet ___phase0Volatiles;
  
  ___X_VolatileEnlistmentSet ___phase1Volatiles;
  
  int ___phase0VolatileWaveCount;
  
  ___X_LightweightTransaction ___committableTransaction;
  
  ___X_LtmInternalTransaction ___nextLink;
  
  ___X_LtmInternalTransaction ___prevLink;
  
  bool ___inTimerList;
  
  ___X_MyAutoResetEvent ___TransactionCompletionEvent;
  
  bool ___completionEventSet;
  
  static ___X_MyAutoResetEvent ___ThreadTransactionCompletionEvent;
  
  void ___LtmInternalTransaction_ctor1(___X_LightweightTransaction ___committableTransaction) {
 {
      trace(@"#line", 0, 447, 57, 447, 60);
      
      this.___TransactionCompletionEvent = null;

      trace(@"#line", 0, 448, 37, 448, 41);
      
      this.___completionEventSet = false;

    }
    trace(@"#line", 0, 454, 3, 454, 55);
    
    this.___State = ___X_TransactionState.____TransactionStateActive;

    trace(@"#line", 0, 456, 3, 456, 26);
    
    this.___TransactionHash = 0;

    trace(@"#line", 0, 459, 3, 459, 54);
    
    this.___committableTransaction = ___committableTransaction;

    atomic {
      trace(@"#line", 0, 461, 3, 462, 52);
      
      this.___phase0Volatiles = new ___X_VolatileEnlistmentSet;

      this.___phase0Volatiles.___VolatileEnlistmentSet_ctor();
      
      this.___phase1Volatiles = new ___X_VolatileEnlistmentSet;

      this.___phase1Volatiles.___VolatileEnlistmentSet_ctor();
    }
    trace(@"#line", 0, 462, 3, 462, 52);
    
    this.___committableTransaction = ___committableTransaction;

  }
  
  void ___WaitForOutcome() {
    bool _____flt0;
    atomic {
      trace(@"#line", 0, 467, 7, 467, 45);
      
      _____flt0 = (this.___TransactionCompletionEvent == null);

    }
    trace(@"#line", 0, 467, 3, 470, 3);
    if (_____flt0) {
      trace(@"#line", 0, 469, 4, 469, 69);
      
      this.___TransactionCompletionEvent = ___X_LtmInternalTransaction.___ThreadTransactionCompletionEvent;

    }
    else {
    }
  }
  
  void ___SynchronousOutcome() {
    bool _____flt0;
    atomic {
      trace(@"#line", 0, 475, 7, 475, 30);
      
      _____flt0 = !this.___completionEventSet;

    }
    trace(@"#line", 0, 475, 3, 478, 3);
    if (_____flt0) {
      trace(@"#line", 0, 477, 4, 477, 41);
      
      this.___TransactionCompletionEvent = null;

    }
    else {
    }
    trace(@"#line", 0, 479, 3, 479, 59);
    
    this.___committableTransaction.___completedSynchronously = true;

  }
  
  void ___SignalCompletion() {
    bool _____flt0;
    atomic {
      trace(@"#line", 0, 484, 7, 484, 45);
      
      _____flt0 = (this.___TransactionCompletionEvent != null);

    }
    trace(@"#line", 0, 484, 3, 489, 3);
    if (_____flt0) {
      bool _____flt1;
      atomic {
        trace(@"#line", 0, 486, 21, 486, 44);
        
        _____flt1 = !this.___completionEventSet;

      }
      trace(@"#line", 0, 486, 4, 486, 46);
      ___X_Routines.___Assert_Boolean(_____flt1);
      trace(@"#line", 0, 487, 4, 487, 40);
      this.___TransactionCompletionEvent.___Set();
      trace(@"#line", 0, 488, 4, 488, 33);
      
      this.___completionEventSet = true;

    }
    else {
    }
  }
};

class ___X_LightweightTransaction {
  bool ____locked = false;
  
  bool ____signal = false;
  
  int ____waitCount = 0;
  
  ___X_LtmInternalTransaction ___internalTransaction;
  
  bool ___blocking;
  
  bool ___complete;
  
  bool ___completedSynchronously;
  
  void ___LightweightTransaction_ctor0() {
 {
      trace(@"#line", 0, 496, 27, 496, 31);
      
      this.___complete = false;

      trace(@"#line", 0, 497, 41, 497, 45);
      
      this.___completedSynchronously = false;

    }
    trace(@"#line", 0, 502, 3, 502, 61);
    
    this.___internalTransaction = new ___X_LtmInternalTransaction;

    this.___internalTransaction.___LtmInternalTransaction_ctor1(this);
  }
  
  void ___LightweightTransaction_ctor1(___X_LtmInternalTransaction ___tx) {
 {
      trace(@"#line", 0, 496, 27, 496, 31);
      
      this.___complete = false;

      trace(@"#line", 0, 497, 41, 497, 45);
      
      this.___completedSynchronously = false;

    }
    trace(@"#line", 0, 506, 3, 506, 31);
    
    this.___internalTransaction = ___tx;

  }
  
  void ___LightweightTransaction_ctor2(___X_LtmInternalTransaction ___tx, bool ___blocking) {
 {
      trace(@"#line", 0, 496, 27, 496, 31);
      
      this.___complete = false;

      trace(@"#line", 0, 497, 41, 497, 45);
      
      this.___completedSynchronously = false;

    }
    trace(@"#line", 0, 510, 3, 510, 31);
    
    this.___internalTransaction = ___tx;

    trace(@"#line", 0, 511, 3, 511, 26);
    
    this.___blocking = ___blocking;

    atomic {
      select first {
        wait (!this.___internalTransaction.____locked) ->
          
          this.___internalTransaction.____locked = true;

      }
      trace(@"#line", 0, 513, 9, 513, 32);
    }
    trace(@"#line", 0, 515, 4, 522, 4);
    if (___blocking) {
      trace(@"#line", 0, 517, 5, 517, 82);
      this.___internalTransaction.___State.___CreateBlockingClone_LtmInternalTransaction(this.___internalTransaction);
    }
    else {
      trace(@"#line", 0, 521, 5, 521, 82);
      this.___internalTransaction.___State.___CreateAbortingClone_LtmInternalTransaction(this.___internalTransaction);
    }
    atomic {
      trace(@"#line", 0, 513, 9, 513, 32);
      
      this.___internalTransaction.____locked = false;

    }
    trace(@"#line", 0, 513, 3, 523, 3);
    
    this.___blocking = ___blocking;

  }
  
  void ___Complete() {
    bool _____flt0;
    trace(@"#line", 0, 527, 3, 527, 17);
    ___X_Routines.___skip();
    atomic {
      select first {
        wait (!this.___internalTransaction.____locked) ->
          
          this.___internalTransaction.____locked = true;

      }
      trace(@"#line", 0, 529, 9, 531, 34);
      
      _____flt0 = !this.___complete;

    }
    trace(@"#line", 0, 531, 4, 531, 36);
    ___X_Routines.___Assert_Boolean(_____flt0);
    trace(@"#line", 0, 533, 4, 533, 23);
    
    this.___complete = true;

    trace(@"#line", 0, 535, 4, 542, 4);
    if (this.___blocking) {
      trace(@"#line", 0, 537, 5, 537, 84);
      this.___internalTransaction.___State.___CompleteBlockingClone_LtmInternalTransaction(this.___internalTransaction);
    }
    else {
      trace(@"#line", 0, 541, 5, 541, 84);
      this.___internalTransaction.___State.___CompleteAbortingClone_LtmInternalTransaction(this.___internalTransaction);
    }
    atomic {
      trace(@"#line", 0, 529, 9, 529, 32);
      
      this.___internalTransaction.____locked = false;

    }
    trace(@"#line", 0, 545, 3, 545, 17);
    ___X_Routines.___skip();
  }
  
  ___X_DurableEnlistment ___DurableEnlist_IDENotification(___X_IDENotification ___enlistmentNotification) {
    bool _____flt0;
    ___X_DurableEnlistment ___enlistment;
    trace(@"#line", 0, 552, 3, 552, 17);
    ___X_Routines.___skip();
    atomic {
      trace(@"#line", 0, 554, 20, 554, 49);
      
      _____flt0 = (___enlistmentNotification != null);

    }
    trace(@"#line", 0, 554, 3, 554, 51);
    ___X_Routines.___Assert_Boolean(_____flt0);
    atomic {
      select first {
        wait (!this.___internalTransaction.____locked) ->
          
          this.___internalTransaction.____locked = true;

      }
      trace(@"#line", 0, 556, 18, 556, 41);
    }
    trace(@"#line", 0, 558, 21, 559, 33);
    
    ___enlistment = this.___internalTransaction.___State.___DurableEnlist_LtmInternalTransaction_IDENotification_LightweightTransaction(this.___internalTransaction, ___enlistmentNotification, this);

    trace(@"#line", 0, 561, 3, 561, 17);
    ___X_Routines.___skip();
    atomic {
      trace(@"#line", 0, 563, 17, 565, 20);
      
      this.___internalTransaction.____locked = false;

      goto _____G_0;
    }
    _____G_0:
 {
    }
    atomic {
      trace(@"#line", 0, 552, 3, 565, 20);
      return ___enlistment;
    }
  }
  
  void ___Rollback() {
    bool _____flt0;
    trace(@"#line", 0, 570, 3, 570, 17);
    ___X_Routines.___skip();
    atomic {
      select first {
        wait (!this.___internalTransaction.____locked) ->
          
          this.___internalTransaction.____locked = true;

      }
      trace(@"#line", 0, 572, 9, 574, 58);
      
      _____flt0 = (this.___internalTransaction.___State != null);

    }
    trace(@"#line", 0, 574, 4, 574, 60);
    ___X_Routines.___Assert_Boolean(_____flt0);
    trace(@"#line", 0, 576, 4, 576, 70);
    this.___internalTransaction.___State.___Rollback_LtmInternalTransaction(this.___internalTransaction);
    atomic {
      trace(@"#line", 0, 572, 9, 572, 32);
      
      this.___internalTransaction.____locked = false;

    }
    trace(@"#line", 0, 579, 3, 579, 17);
    ___X_Routines.___skip();
  }
  
  ___X_VolatileEnlistment ___VolatileEnlist_IVENotification_Boolean_VN(___X_IVENotification ___enlistmentNotification, bool ___enlistDuringPrepareRequired, ___X_VN ___vn) {
    bool _____flt0;
    ___X_VolatileEnlistment ___enlistment;
    trace(@"#line", 0, 588, 3, 588, 17);
    ___X_Routines.___skip();
    atomic {
      trace(@"#line", 0, 590, 20, 590, 49);
      
      _____flt0 = (___enlistmentNotification != null);

    }
    trace(@"#line", 0, 590, 3, 590, 51);
    ___X_Routines.___Assert_Boolean(_____flt0);
    atomic {
      select first {
        wait (!this.___internalTransaction.____locked) ->
          
          this.___internalTransaction.____locked = true;

      }
      trace(@"#line", 0, 592, 18, 592, 41);
    }
    trace(@"#line", 0, 594, 22, 595, 66);
    
    ___enlistment = this.___internalTransaction.___State.___VolatileEnlist_LtmInternalTransaction_IVENotification_Boolean_VN_LightweightTransaction(this.___internalTransaction, ___enlistmentNotification, ___enlistDuringPrepareRequired, ___vn, this);

    trace(@"#line", 0, 597, 3, 597, 17);
    ___X_Routines.___skip();
    atomic {
      trace(@"#line", 0, 599, 17, 601, 20);
      
      this.___internalTransaction.____locked = false;

      goto _____G_0;
    }
    _____G_0:
 {
    }
    atomic {
      trace(@"#line", 0, 588, 3, 601, 20);
      return ___enlistment;
    }
  }
  
  void ___Commit() {
    bool ___completionEventPreSet;
    ___X_MyAutoResetEvent ___completionEvent;
    bool _____flt0;
    bool _____flt1;
    bool _____flt2;
    trace(@"#line", 0, 608, 3, 608, 17);
    ___X_Routines.___skip();
    atomic {
      trace(@"#line", 0, 610, 8, 623, 34);
      
      ___completionEventPreSet = false;
    }
      
      ___completionEvent = null;
 
    atomic {
      select first {
        wait (!this.___internalTransaction.____locked) ->
          
          this.___internalTransaction.____locked = true;

      }
    }
      _____flt0 = (this.___internalTransaction.___TransactionCompletionEvent != null);

      if (_____flt0) {
        
        ___completionEventPreSet = true;

      }
      else {
      }
      
      _____flt1 = !this.___complete;


    trace(@"#line", 0, 623, 4, 623, 36);
    ___X_Routines.___Assert_Boolean(_____flt1);
    trace(@"#line", 0, 625, 4, 625, 72);
    this.___internalTransaction.___State.___BeginCommit_LtmInternalTransaction(this.___internalTransaction);
    atomic {
      trace(@"#line", 0, 613, 9, 630, 29);
      
      ___completionEvent = this.___internalTransaction.___TransactionCompletionEvent;
    }
      
      this.___internalTransaction.____locked = false;

      
      _____flt2 = (___completionEvent != null);


    trace(@"#line", 0, 630, 3, 633, 3);
    if (_____flt2) {
      trace(@"#line", 0, 632, 4, 632, 28);
      ___completionEvent.___WaitOne();
    }
    else {
    }
    trace(@"#line", 0, 635, 3, 643, 3);
    if (!___completionEventPreSet) {
      trace(@"#line", 0, 639, 4, 639, 61);
      
      this.___internalTransaction.___TransactionCompletionEvent = null;

    }
    else {
    }
    atomic {
      select first {
        wait (!this.___internalTransaction.____locked) ->
          
          this.___internalTransaction.____locked = true;

      }
      trace(@"#line", 0, 645, 9, 645, 32);
    }
    trace(@"#line", 0, 647, 4, 647, 71);
    this.___internalTransaction.___State.___EndCommit_LtmInternalTransaction(this.___internalTransaction);
    atomic {
      trace(@"#line", 0, 645, 9, 645, 32);
      
      this.___internalTransaction.____locked = false;

    }
    trace(@"#line", 0, 650, 3, 650, 17);
    ___X_Routines.___skip();
  }
  
  ___X_LightweightTransaction ___Clone() {
    bool _____flt0;
    ___X_LightweightTransaction ___clone;
    trace(@"#line", 0, 655, 3, 655, 17);
    ___X_Routines.___skip();
    atomic {
      trace(@"#line", 0, 657, 20, 657, 33);
      
      _____flt0 = !this.___complete;

    }
    trace(@"#line", 0, 657, 3, 657, 35);
    ___X_Routines.___Assert_Boolean(_____flt0);
    atomic {
      trace(@"#line", 0, 659, 26, 659, 87);
      
      ___clone = new ___X_LightweightTransaction;

      ___clone.___LightweightTransaction_ctor1(this.___internalTransaction);
    }
    trace(@"#line", 0, 661, 3, 661, 17);
    ___X_Routines.___skip();
    atomic {
      trace(@"#line", 0, 663, 3, 663, 15);
      goto _____G_0;
    }
    _____G_0:
 {
    }
    atomic {
      trace(@"#line", 0, 655, 3, 663, 15);
      return ___clone;
    }
  }
  
  ___X_LightweightTransaction ___DependentClone_Boolean(bool ___delayCommit) {
    bool _____flt0;
    ___X_LightweightTransaction ___clone;
    trace(@"#line", 0, 670, 3, 670, 17);
    ___X_Routines.___skip();
    atomic {
      trace(@"#line", 0, 672, 20, 672, 33);
      
      _____flt0 = !this.___complete;

    }
    trace(@"#line", 0, 672, 3, 672, 35);
    ___X_Routines.___Assert_Boolean(_____flt0);
    atomic {
      trace(@"#line", 0, 674, 26, 674, 100);
      
      ___clone = new ___X_LightweightTransaction;

      ___clone.___LightweightTransaction_ctor2(this.___internalTransaction, ___delayCommit);
    }
    trace(@"#line", 0, 676, 3, 676, 17);
    ___X_Routines.___skip();
    atomic {
      trace(@"#line", 0, 678, 3, 678, 15);
      goto _____G_0;
    }
    _____G_0:
 {
    }
    atomic {
      trace(@"#line", 0, 670, 3, 678, 15);
      return ___clone;
    }
  }
};

enum ___X_IsolationLevel {
  ___Serializable,
  ___RepeatableRead,
  ___ReadCommitted,
  ___ReadUncommitted,
  ___Unspecified,
};

enum ___X_TransactionStatus {
  ___Active,
  ___Committed,
  ___Aborted,
  ___InDoubt,
};

class ___X_DurableEnlistment {
  bool ____locked = false;
  
  bool ____signal = false;
  
  int ____waitCount = 0;
  
  ___X_DurableEnlistmentState ___twoPhaseState;
  
  ___X_IDENotification ___notificationInterface;
  
  ___X_LtmInternalTransaction ___tx;
  
  ___X_LightweightTransaction ___lightweightTransaction;
  
  void ___DurableEnlistment_ctor(___X_LtmInternalTransaction ___tx, ___X_IDENotification ___notificationInterface, ___X_LightweightTransaction ___lightweightTransaction) {
    trace(@"#line", 0, 720, 3, 720, 14);
    
    this.___tx = ___tx;

    trace(@"#line", 0, 721, 3, 721, 52);
    
    this.___notificationInterface = ___notificationInterface;

    trace(@"#line", 0, 722, 3, 722, 54);
    
    this.___lightweightTransaction = ___lightweightTransaction;

    trace(@"#line", 0, 722, 3, 722, 54);
    
    this.___tx = ___tx;

    trace(@"#line", 0, 722, 3, 722, 54);
    
    this.___lightweightTransaction = ___lightweightTransaction;

    trace(@"#line", 0, 722, 3, 722, 54);
    
    this.___notificationInterface = ___notificationInterface;

  }
  
  void ___EnlistmentDone() {
    trace(@"#line", 0, 727, 3, 727, 17);
    ___X_Routines.___skip();
    atomic {
      select first {
        wait (!this.___tx.____locked) ->
          
          this.___tx.____locked = true;

      }
      trace(@"#line", 0, 728, 9, 728, 15);
    }
    trace(@"#line", 0, 730, 4, 730, 44);
    this.___twoPhaseState.___EnlistmentDone_DurableEnlistment(this);
    atomic {
      trace(@"#line", 0, 728, 9, 728, 15);
      
      this.___tx.____locked = false;

    }
    trace(@"#line", 0, 732, 3, 732, 17);
    ___X_Routines.___skip();
  }
  
  void ___Aborted() {
    trace(@"#line", 0, 737, 3, 737, 17);
    ___X_Routines.___skip();
    atomic {
      select first {
        wait (!this.___tx.____locked) ->
          
          this.___tx.____locked = true;

      }
      trace(@"#line", 0, 738, 9, 738, 15);
    }
    trace(@"#line", 0, 740, 4, 740, 37);
    this.___twoPhaseState.___Aborted_DurableEnlistment(this);
    atomic {
      trace(@"#line", 0, 738, 9, 738, 15);
      
      this.___tx.____locked = false;

    }
    trace(@"#line", 0, 742, 3, 742, 17);
    ___X_Routines.___skip();
  }
  
  void ___Committed() {
    trace(@"#line", 0, 747, 3, 747, 17);
    ___X_Routines.___skip();
    atomic {
      select first {
        wait (!this.___tx.____locked) ->
          
          this.___tx.____locked = true;

      }
      trace(@"#line", 0, 748, 9, 748, 15);
    }
    trace(@"#line", 0, 750, 4, 750, 39);
    this.___twoPhaseState.___Committed_DurableEnlistment(this);
    atomic {
      trace(@"#line", 0, 748, 9, 748, 15);
      
      this.___tx.____locked = false;

    }
    trace(@"#line", 0, 752, 3, 752, 17);
    ___X_Routines.___skip();
  }
  
  void ___InDoubt() {
    trace(@"#line", 0, 757, 3, 757, 17);
    ___X_Routines.___skip();
    atomic {
      select first {
        wait (!this.___tx.____locked) ->
          
          this.___tx.____locked = true;

      }
      trace(@"#line", 0, 758, 9, 758, 15);
    }
    trace(@"#line", 0, 760, 4, 760, 18);
    ___X_Routines.___skip();
    trace(@"#line", 0, 761, 4, 761, 37);
    this.___twoPhaseState.___InDoubt_DurableEnlistment(this);
    atomic {
      trace(@"#line", 0, 758, 9, 758, 15);
      
      this.___tx.____locked = false;

    }
    trace(@"#line", 0, 763, 3, 763, 17);
    ___X_Routines.___skip();
  }
};

enum ___X_DS {
  ___DurableEnlistmentActive,
  ___DurableEnlistmentAborting,
  ___DurableEnlistmentCommitting,
  ___DurableEnlistmentEnded,
};

class ___X_DurableEnlistmentState {
  bool ____locked = false;
  
  bool ____signal = false;
  
  int ____waitCount = 0;
  
  ___X_DS ___ds;
  
  static ___X_DurableEnlistmentState ____DurableEnlistmentActive;
  
  static ___X_DurableEnlistmentState ____DurableEnlistmentAborting;
  
  static ___X_DurableEnlistmentState ____DurableEnlistmentCommitting;
  
  static ___X_DurableEnlistmentState ____DurableEnlistmentEnded;
  
  void ___DurableEnlistmentState_ctor(___X_DS ___x) {
    trace(@"#line", 0, 777, 33, 777, 38);
    
    this.___ds = ___x;

  }
  
  void ___EnterState_DurableEnlistment(___X_DurableEnlistment ___enlistment) {
    trace(@"#line", 0, 787, 3, 801, 3);
    if ((this.___ds == 0)) {
      trace(@"#line", 0, 790, 5, 790, 50);
      this.___DurableEnlistmentActive_EnterState_DurableEnlistment(___enlistment);
      atomic {
        trace(@"#line", 0, 791, 5, 791, 9);
        goto _____G_1;
      }
    }
    else {
      trace(@"#line", 0, 787, 3, 801, 3);
      if ((this.___ds == 1)) {
        trace(@"#line", 0, 793, 5, 793, 52);
        this.___DurableEnlistmentAborting_EnterState_DurableEnlistment(___enlistment);
        atomic {
          trace(@"#line", 0, 794, 5, 794, 9);
          goto _____G_1;
        }
      }
      else {
        trace(@"#line", 0, 787, 3, 801, 3);
        if ((this.___ds == 2)) {
          trace(@"#line", 0, 796, 5, 796, 54);
          this.___DurableEnlistmentCommitting_EnterState_DurableEnlistment(___enlistment);
          atomic {
            trace(@"#line", 0, 797, 5, 797, 9);
            goto _____G_1;
          }
        }
        else {
          trace(@"#line", 0, 787, 3, 801, 3);
          if ((this.___ds == 3)) {
            trace(@"#line", 0, 799, 5, 799, 49);
            this.___DurableEnlistmentEnded_EnterState_DurableEnlistment(___enlistment);
            atomic {
              trace(@"#line", 0, 800, 5, 800, 9);
              goto _____G_1;
            }
          }
          else {
          }
        }
      }
    }
    _____G_1:
 {
    }
  }
  
  void ___EnlistmentDone_DurableEnlistment(___X_DurableEnlistment ___enlistment) {
    bool _____flt1;
    bool _____flt3;
    bool _____flt5;
    atomic {
      trace(@"#line", 0, 808, 9, 808, 34);
      
      _____flt1 = (this.___ds == 0);

      if (!_____flt1) {
        goto ____L_1;
      }
    }
    trace(@"#line", 0, 809, 5, 809, 54);
    this.___DurableEnlistmentActive_EnlistmentDone_DurableEnlistment(___enlistment);
    atomic {
      trace(@"#line", 0, 808, 4, 810, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_1:
 {
    }
    atomic {
      trace(@"#line", 0, 811, 9, 811, 36);
      
      _____flt3 = (this.___ds == 1);

      if (!_____flt3) {
        goto ____L_2;
      }
    }
    trace(@"#line", 0, 812, 5, 812, 56);
    this.___DurableEnlistmentAborting_EnlistmentDone_DurableEnlistment(___enlistment);
    atomic {
      trace(@"#line", 0, 811, 4, 813, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_2:
 {
    }
    atomic {
      trace(@"#line", 0, 814, 9, 814, 38);
      
      _____flt5 = (this.___ds == 2);

      if (!_____flt5) {
        goto ____L_3;
      }
    }
    trace(@"#line", 0, 815, 5, 815, 58);
    this.___DurableEnlistmentCommitting_EnlistmentDone_DurableEnlistment(___enlistment);
    atomic {
      trace(@"#line", 0, 814, 4, 816, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_3:
 {
    }
    trace(@"#line", 0, 818, 5, 818, 26);
    ___X_Routines.___Assert_Boolean(false);
    atomic {
      trace(@"#line", 0, 817, 4, 819, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_0:
 {
    }
    _____G_1:
 {
    }
  }
  
  void ___Committed_DurableEnlistment(___X_DurableEnlistment ___enlistment) {
    bool _____flt1;
    atomic {
      trace(@"#line", 0, 827, 9, 827, 38);
      
      _____flt1 = (this.___ds == 2);

      if (!_____flt1) {
        goto ____L_1;
      }
    }
    trace(@"#line", 0, 828, 5, 828, 53);
    this.___DurableEnlistmentCommitting_Committed_DurableEnlistment(___enlistment);
    atomic {
      trace(@"#line", 0, 827, 4, 829, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_1:
 {
    }
    trace(@"#line", 0, 831, 5, 831, 26);
    ___X_Routines.___Assert_Boolean(false);
    atomic {
      trace(@"#line", 0, 830, 4, 832, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_0:
 {
    }
    _____G_1:
 {
    }
  }
  
  void ___Aborted_DurableEnlistment(___X_DurableEnlistment ___enlistment) {
    bool _____flt1;
    bool _____flt3;
    atomic {
      trace(@"#line", 0, 840, 9, 840, 36);
      
      _____flt1 = (this.___ds == 1);

      if (!_____flt1) {
        goto ____L_1;
      }
    }
    trace(@"#line", 0, 841, 5, 841, 49);
    this.___DurableEnlistmentAborting_Aborted_DurableEnlistment(___enlistment);
    atomic {
      trace(@"#line", 0, 840, 4, 842, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_1:
 {
    }
    atomic {
      trace(@"#line", 0, 843, 9, 843, 38);
      
      _____flt3 = (this.___ds == 2);

      if (!_____flt3) {
        goto ____L_2;
      }
    }
    trace(@"#line", 0, 844, 5, 844, 51);
    this.___DurableEnlistmentCommitting_Aborted_DurableEnlistment(___enlistment);
    atomic {
      trace(@"#line", 0, 843, 4, 845, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_2:
 {
    }
    trace(@"#line", 0, 847, 5, 847, 26);
    ___X_Routines.___Assert_Boolean(false);
    atomic {
      trace(@"#line", 0, 846, 4, 848, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_0:
 {
    }
    _____G_1:
 {
    }
  }
  
  void ___InDoubt_DurableEnlistment(___X_DurableEnlistment ___enlistment) {
    bool _____flt1;
    atomic {
      trace(@"#line", 0, 856, 9, 856, 38);
      
      _____flt1 = (this.___ds == 2);

      if (!_____flt1) {
        goto ____L_1;
      }
    }
    trace(@"#line", 0, 857, 5, 857, 51);
    this.___DurableEnlistmentCommitting_InDoubt_DurableEnlistment(___enlistment);
    atomic {
      trace(@"#line", 0, 856, 4, 858, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_1:
 {
    }
    trace(@"#line", 0, 860, 5, 860, 26);
    ___X_Routines.___Assert_Boolean(false);
    atomic {
      trace(@"#line", 0, 859, 4, 861, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_0:
 {
    }
    _____G_1:
 {
    }
  }
  
  void ___InternalAborted_DurableEnlistment(___X_DurableEnlistment ___enlistment) {
    bool _____flt1;
    bool _____flt3;
    atomic {
      trace(@"#line", 0, 869, 9, 869, 34);
      
      _____flt1 = (this.___ds == 0);

      if (!_____flt1) {
        goto ____L_1;
      }
    }
    trace(@"#line", 0, 870, 5, 870, 55);
    this.___DurableEnlistmentActive_InternalAborted_DurableEnlistment(___enlistment);
    atomic {
      trace(@"#line", 0, 869, 4, 871, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_1:
 {
    }
    atomic {
      trace(@"#line", 0, 872, 9, 872, 33);
      
      _____flt3 = (this.___ds == 3);

      if (!_____flt3) {
        goto ____L_2;
      }
    }
    trace(@"#line", 0, 873, 5, 873, 54);
    this.___DurableEnlistmentEnded_InternalAborted_DurableEnlistment(___enlistment);
    atomic {
      trace(@"#line", 0, 872, 4, 874, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_2:
 {
    }
    trace(@"#line", 0, 876, 5, 876, 26);
    ___X_Routines.___Assert_Boolean(false);
    atomic {
      trace(@"#line", 0, 875, 4, 877, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_0:
 {
    }
    _____G_1:
 {
    }
  }
  
  void ___ChangeStateCommitting_DurableEnlistment(___X_DurableEnlistment ___enlistment) {
    bool _____flt1;
    atomic {
      trace(@"#line", 0, 885, 9, 885, 34);
      
      _____flt1 = (this.___ds == 0);

      if (!_____flt1) {
        goto ____L_1;
      }
    }
    trace(@"#line", 0, 886, 5, 886, 61);
    this.___DurableEnlistmentActive_ChangeStateCommitting_DurableEnlistment(___enlistment);
    atomic {
      trace(@"#line", 0, 885, 4, 887, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_1:
 {
    }
    trace(@"#line", 0, 889, 5, 889, 26);
    ___X_Routines.___Assert_Boolean(false);
    atomic {
      trace(@"#line", 0, 888, 4, 890, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_0:
 {
    }
    _____G_1:
 {
    }
  }
  
  void ___DurableEnlistmentActive_EnterState_DurableEnlistment(___X_DurableEnlistment ___enlistment) {
    trace(@"#line", 0, 897, 3, 897, 33);
    
    ___enlistment.___twoPhaseState = this;

  }
  
  void ___DurableEnlistmentActive_EnlistmentDone_DurableEnlistment(___X_DurableEnlistment ___enlistment) {
    trace(@"#line", 0, 905, 3, 905, 50);
    ___X_DurableEnlistmentState.____DurableEnlistmentEnded.___EnterState_DurableEnlistment(___enlistment);
  }
  
  void ___DurableEnlistmentActive_InternalAborted_DurableEnlistment(___X_DurableEnlistment ___enlistment) {
    trace(@"#line", 0, 911, 3, 911, 53);
    ___X_DurableEnlistmentState.____DurableEnlistmentAborting.___EnterState_DurableEnlistment(___enlistment);
  }
  
  void ___DurableEnlistmentActive_ChangeStateCommitting_DurableEnlistment(___X_DurableEnlistment ___enlistment) {
    trace(@"#line", 0, 917, 3, 917, 55);
    ___X_DurableEnlistmentState.____DurableEnlistmentCommitting.___EnterState_DurableEnlistment(___enlistment);
  }
  
  void ___DurableEnlistmentAborting_EnterState_DurableEnlistment(___X_DurableEnlistment ___enlistment) {
    trace(@"#line", 0, 922, 3, 922, 33);
    
    ___enlistment.___twoPhaseState = this;

    atomic {
      trace(@"#line", 0, 924, 17, 924, 29);
      
      ___enlistment.___tx.____locked = false;

    }
    trace(@"#line", 0, 925, 3, 925, 17);
    ___X_Routines.___skip();
    trace(@"#line", 0, 927, 3, 927, 57);
    ___enlistment.___notificationInterface.___Rollback_DurableEnlistment(___enlistment);
    atomic {
      select first {
        wait (!___enlistment.___tx.____locked) ->
          
          ___enlistment.___tx.____locked = true;

      }
      trace(@"#line", 0, 928, 18, 928, 30);
    }
  }
  
  void ___DurableEnlistmentAborting_Aborted_DurableEnlistment(___X_DurableEnlistment ___enlistment) {
    trace(@"#line", 0, 933, 3, 933, 17);
    ___X_Routines.___skip();
    trace(@"#line", 0, 936, 3, 936, 50);
    ___X_DurableEnlistmentState.____DurableEnlistmentEnded.___EnterState_DurableEnlistment(___enlistment);
  }
  
  void ___DurableEnlistmentAborting_EnlistmentDone_DurableEnlistment(___X_DurableEnlistment ___enlistment) {
    trace(@"#line", 0, 942, 3, 942, 50);
    ___X_DurableEnlistmentState.____DurableEnlistmentEnded.___EnterState_DurableEnlistment(___enlistment);
  }
  
  void ___DurableEnlistmentCommitting_EnterState_DurableEnlistment(___X_DurableEnlistment ___enlistment) {
    trace(@"#line", 0, 948, 3, 948, 33);
    
    ___enlistment.___twoPhaseState = this;

    atomic {
      trace(@"#line", 0, 950, 17, 950, 29);
      
      ___enlistment.___tx.____locked = false;

    }
    trace(@"#line", 0, 951, 3, 951, 17);
    ___X_Routines.___skip();
    trace(@"#line", 0, 952, 3, 952, 66);
    ___enlistment.___notificationInterface.___SinglePhaseCommit_DurableEnlistment(___enlistment);
    atomic {
      select first {
        wait (!___enlistment.___tx.____locked) ->
          
          ___enlistment.___tx.____locked = true;

      }
      trace(@"#line", 0, 953, 18, 953, 30);
    }
  }
  
  void ___DurableEnlistmentCommitting_EnlistmentDone_DurableEnlistment(___X_DurableEnlistment ___enlistment) {
    trace(@"#line", 0, 962, 3, 962, 50);
    ___X_DurableEnlistmentState.____DurableEnlistmentEnded.___EnterState_DurableEnlistment(___enlistment);
    trace(@"#line", 0, 965, 3, 965, 70);
    ___enlistment.___tx.___State.___ChangeStateTransactionCommitted_LtmInternalTransaction(___enlistment.___tx);
  }
  
  void ___DurableEnlistmentCommitting_Committed_DurableEnlistment(___X_DurableEnlistment ___enlistment) {
    trace(@"#line", 0, 971, 3, 971, 50);
    ___X_DurableEnlistmentState.____DurableEnlistmentEnded.___EnterState_DurableEnlistment(___enlistment);
    trace(@"#line", 0, 974, 3, 974, 70);
    ___enlistment.___tx.___State.___ChangeStateTransactionCommitted_LtmInternalTransaction(___enlistment.___tx);
  }
  
  void ___DurableEnlistmentCommitting_Aborted_DurableEnlistment(___X_DurableEnlistment ___enlistment) {
    trace(@"#line", 0, 980, 3, 980, 50);
    ___X_DurableEnlistmentState.____DurableEnlistmentEnded.___EnterState_DurableEnlistment(___enlistment);
    trace(@"#line", 0, 982, 3, 982, 17);
    ___X_Routines.___skip();
    trace(@"#line", 0, 985, 3, 985, 68);
    ___enlistment.___tx.___State.___ChangeStateTransactionAborted_LtmInternalTransaction(___enlistment.___tx);
  }
  
  void ___DurableEnlistmentCommitting_InDoubt_DurableEnlistment(___X_DurableEnlistment ___enlistment) {
    trace(@"#line", 0, 991, 3, 991, 50);
    ___X_DurableEnlistmentState.____DurableEnlistmentEnded.___EnterState_DurableEnlistment(___enlistment);
    trace(@"#line", 0, 993, 3, 993, 17);
    ___X_Routines.___skip();
    trace(@"#line", 0, 996, 3, 996, 68);
    ___enlistment.___tx.___State.___ChangeStateTransactionInDoubt_LtmInternalTransaction(___enlistment.___tx);
  }
  
  void ___DurableEnlistmentEnded_EnterState_DurableEnlistment(___X_DurableEnlistment ___enlistment) {
    trace(@"#line", 0, 1002, 3, 1002, 33);
    
    ___enlistment.___twoPhaseState = this;

  }
  
  void ___DurableEnlistmentEnded_InternalAborted_DurableEnlistment(___X_DurableEnlistment ___enlistment) {
  }
};

enum ___X_VK {
  ___Phase0,
  ___Phase1,
};

enum ___X_VN {
  ___SP,
  ___TP,
};

class ___X_VolatileEnlistment {
  bool ____locked = false;
  
  bool ____signal = false;
  
  int ____waitCount = 0;
  
  ___X_VolatileEnlistmentState ___twoPhaseState;
  
  ___X_IVENotification ___Notifications;
  
  ___X_LtmInternalTransaction ___tx;
  
  ___X_LightweightTransaction ___lightweightTransaction;
  
  ___X_VK ___vk;
  
  ___X_VN ___vn;
  
  void ___VolatileEnlistment_ctor(___X_LtmInternalTransaction ___tx, ___X_IVENotification ___Notifications, ___X_LightweightTransaction ___lightweightTransaction, ___X_VK ___x, ___X_VN ___y) {
    trace(@"#line", 0, 1040, 3, 1040, 14);
    
    this.___tx = ___tx;

    trace(@"#line", 0, 1041, 3, 1041, 36);
    
    this.___Notifications = ___Notifications;

    trace(@"#line", 0, 1042, 3, 1042, 54);
    
    this.___lightweightTransaction = ___lightweightTransaction;

    trace(@"#line", 0, 1043, 3, 1043, 13);
    
    this.___vk = ___x;

    trace(@"#line", 0, 1044, 3, 1044, 13);
    
    this.___vn = ___y;

    trace(@"#line", 0, 1044, 3, 1044, 13);
    
    this.___Notifications = ___Notifications;

    trace(@"#line", 0, 1044, 3, 1044, 13);
    
    this.___tx = ___tx;

    trace(@"#line", 0, 1044, 3, 1044, 13);
    
    this.___lightweightTransaction = ___lightweightTransaction;

  }
  
  void ___FinishEnlistment() {
    trace(@"#line", 0, 1049, 3, 1061, 3);
    if ((this.___vk == 0)) {
      int _____asp3;
      atomic {
        trace(@"#line", 0, 1053, 5, 1053, 57);
        
        _____asp3 = this.___tx.___phase0Volatiles.___preparedVolatileEnlistments;

      }
      trace(@"#line", 0, 1053, 5, 1053, 57);
      
      this.___tx.___phase0Volatiles.___preparedVolatileEnlistments = (this.___tx.___phase0Volatiles.___preparedVolatileEnlistments + 1);

      trace(@"#line", 0, 1054, 5, 1054, 19);
      this.___CheckComplete();
      atomic {
        trace(@"#line", 0, 1055, 5, 1055, 9);
        goto _____G_1;
      }
    }
    else {
      trace(@"#line", 0, 1049, 3, 1061, 3);
      if ((this.___vk == 1)) {
        int _____asp4;
        atomic {
          trace(@"#line", 0, 1058, 5, 1058, 57);
          
          _____asp4 = this.___tx.___phase1Volatiles.___preparedVolatileEnlistments;

        }
        trace(@"#line", 0, 1058, 5, 1058, 57);
        
        this.___tx.___phase1Volatiles.___preparedVolatileEnlistments = (this.___tx.___phase1Volatiles.___preparedVolatileEnlistments + 1);

        trace(@"#line", 0, 1059, 5, 1059, 19);
        this.___CheckComplete();
        atomic {
          trace(@"#line", 0, 1060, 5, 1060, 9);
          goto _____G_1;
        }
      }
      else {
      }
    }
    _____G_1:
 {
    }
  }
  
  void ___CheckComplete() {
    trace(@"#line", 0, 1066, 3, 1092, 3);
    if ((this.___vk == 1)) {
      bool _____flt0;
      bool _____flt1;
      atomic {
        trace(@"#line", 0, 1070, 22, 1071, 52);
        
        _____flt0 = (this.___tx.___phase1Volatiles.___preparedVolatileEnlistments <= this.___tx.___phase1Volatiles.___volatileEnlistmentCount);

      }
      trace(@"#line", 0, 1070, 5, 1071, 54);
      ___X_Routines.___Assert_Boolean(_____flt0);
      atomic {
        trace(@"#line", 0, 1074, 9, 1075, 52);
        
        _____flt1 = (this.___tx.___phase1Volatiles.___preparedVolatileEnlistments == this.___tx.___phase1Volatiles.___volatileEnlistmentCount);

      }
      trace(@"#line", 0, 1074, 5, 1078, 5);
      if (_____flt1) {
        trace(@"#line", 0, 1077, 6, 1077, 55);
        this.___tx.___State.___Phase1VolatilePrepareDone_LtmInternalTransaction(this.___tx);
      }
      else {
      }
      atomic {
        trace(@"#line", 0, 1079, 5, 1079, 9);
        goto _____G_1;
      }
    }
    else {
      trace(@"#line", 0, 1066, 3, 1092, 3);
      if ((this.___vk == 0)) {
        bool _____flt2;
        bool _____flt3;
        atomic {
          trace(@"#line", 0, 1082, 22, 1083, 52);
          
          _____flt2 = (this.___tx.___phase0Volatiles.___preparedVolatileEnlistments <= this.___tx.___phase0Volatiles.___volatileEnlistmentCount);

        }
        trace(@"#line", 0, 1082, 5, 1083, 54);
        ___X_Routines.___Assert_Boolean(_____flt2);
        atomic {
          trace(@"#line", 0, 1086, 9, 1087, 36);
          
          _____flt3 = (this.___tx.___phase0Volatiles.___preparedVolatileEnlistments == this.___tx.___phase0VolatileWaveCount);

        }
        trace(@"#line", 0, 1086, 5, 1090, 5);
        if (_____flt3) {
          trace(@"#line", 0, 1089, 6, 1089, 55);
          this.___tx.___State.___Phase0VolatilePrepareDone_LtmInternalTransaction(this.___tx);
        }
        else {
        }
        atomic {
          trace(@"#line", 0, 1091, 5, 1091, 9);
          goto _____G_1;
        }
      }
      else {
      }
    }
    _____G_1:
 {
    }
  }
  
  void ___EnlistmentDone() {
    trace(@"#line", 0, 1097, 3, 1097, 17);
    ___X_Routines.___skip();
    atomic {
      select first {
        wait (!this.___tx.____locked) ->
          
          this.___tx.____locked = true;

      }
      trace(@"#line", 0, 1098, 9, 1098, 15);
    }
    trace(@"#line", 0, 1100, 4, 1100, 44);
    this.___twoPhaseState.___EnlistmentDone_VolatileEnlistment(this);
    atomic {
      trace(@"#line", 0, 1098, 9, 1098, 15);
      
      this.___tx.____locked = false;

    }
    trace(@"#line", 0, 1102, 3, 1102, 17);
    ___X_Routines.___skip();
  }
  
  void ___Prepared() {
    trace(@"#line", 0, 1107, 3, 1107, 17);
    ___X_Routines.___skip();
    atomic {
      select first {
        wait (!this.___tx.____locked) ->
          
          this.___tx.____locked = true;

      }
      trace(@"#line", 0, 1108, 9, 1108, 15);
    }
    trace(@"#line", 0, 1110, 4, 1110, 38);
    this.___twoPhaseState.___Prepared_VolatileEnlistment(this);
    atomic {
      trace(@"#line", 0, 1108, 9, 1108, 15);
      
      this.___tx.____locked = false;

    }
    trace(@"#line", 0, 1112, 3, 1112, 17);
    ___X_Routines.___skip();
  }
  
  void ___ForceRollback() {
    trace(@"#line", 0, 1116, 3, 1116, 17);
    ___X_Routines.___skip();
    atomic {
      select first {
        wait (!this.___tx.____locked) ->
          
          this.___tx.____locked = true;

      }
      trace(@"#line", 0, 1117, 9, 1117, 15);
    }
    trace(@"#line", 0, 1119, 4, 1119, 43);
    this.___twoPhaseState.___ForceRollback_VolatileEnlistment(this);
    atomic {
      trace(@"#line", 0, 1117, 9, 1117, 15);
      
      this.___tx.____locked = false;

    }
    trace(@"#line", 0, 1121, 3, 1121, 17);
    ___X_Routines.___skip();
  }
  
  void ___Aborted() {
    trace(@"#line", 0, 1127, 3, 1127, 17);
    ___X_Routines.___skip();
    atomic {
      select first {
        wait (!this.___tx.____locked) ->
          
          this.___tx.____locked = true;

      }
      trace(@"#line", 0, 1128, 9, 1128, 15);
    }
    trace(@"#line", 0, 1130, 4, 1130, 37);
    this.___twoPhaseState.___Aborted_VolatileEnlistment(this);
    atomic {
      trace(@"#line", 0, 1128, 9, 1128, 15);
      
      this.___tx.____locked = false;

    }
    trace(@"#line", 0, 1132, 3, 1132, 17);
    ___X_Routines.___skip();
  }
  
  void ___Committed() {
    trace(@"#line", 0, 1137, 3, 1137, 17);
    ___X_Routines.___skip();
    atomic {
      select first {
        wait (!this.___tx.____locked) ->
          
          this.___tx.____locked = true;

      }
      trace(@"#line", 0, 1138, 9, 1138, 15);
    }
    trace(@"#line", 0, 1140, 4, 1140, 39);
    this.___twoPhaseState.___Committed_VolatileEnlistment(this);
    atomic {
      trace(@"#line", 0, 1138, 9, 1138, 15);
      
      this.___tx.____locked = false;

    }
    trace(@"#line", 0, 1142, 3, 1142, 17);
    ___X_Routines.___skip();
  }
  
  void ___InDoubt() {
    trace(@"#line", 0, 1147, 3, 1147, 17);
    ___X_Routines.___skip();
    atomic {
      select first {
        wait (!this.___tx.____locked) ->
          
          this.___tx.____locked = true;

      }
      trace(@"#line", 0, 1148, 9, 1148, 15);
    }
    trace(@"#line", 0, 1150, 4, 1150, 18);
    ___X_Routines.___skip();
    trace(@"#line", 0, 1151, 4, 1151, 36);
    this.___twoPhaseState.___InDoubt_VolatileEnlistment(this);
    atomic {
      trace(@"#line", 0, 1148, 9, 1148, 15);
      
      this.___tx.____locked = false;

    }
    trace(@"#line", 0, 1153, 3, 1153, 17);
    ___X_Routines.___skip();
  }
};

class ___X_VolatileEnlistmentSet {
  bool ____locked = false;
  
  bool ____signal = false;
  
  int ____waitCount = 0;
  
  ___PrimitiveArray_L_VolatileEnlistment_R ___volatileEnlistments;
  
  int ___volatileEnlistmentCount;
  
  int ___dependentClones;
  
  int ___preparedVolatileEnlistments;
  
  void ___VolatileEnlistmentSet_ctor() {
 {
      trace(@"#line", 0, 1161, 41, 1161, 41);
      
      this.___volatileEnlistmentCount = 0;

      trace(@"#line", 0, 1162, 33, 1162, 33);
      
      this.___dependentClones = 0;

      trace(@"#line", 0, 1165, 45, 1165, 45);
      
      this.___preparedVolatileEnlistments = 0;

    }
    trace(@"#line", 0, 1169, 3, 1169, 49);
    assume((2 <= 32));
    
    this.___volatileEnlistments = new ___PrimitiveArray_L_VolatileEnlistment_R;

    
    this.___volatileEnlistments.repr = new  ______PrimitiveArray_L_VolatileEnlistment_R_zarray;

    
    this.___volatileEnlistments.leng = 1;

  }
};

enum ___X_VS {
  ___VolatileEnlistmentActive,
  ___VolatileEnlistmentPreparing,
  ___VolatileEnlistmentPrepared,
  ___VolatileEnlistmentSPC,
  ___VolatileEnlistmentPreparingAborting,
  ___VolatileEnlistmentAborting,
  ___VolatileEnlistmentCommitting,
  ___VolatileEnlistmentEnded,
  ___VolatileEnlistmentDone,
};

class ___X_VolatileEnlistmentState {
  bool ____locked = false;
  
  bool ____signal = false;
  
  int ____waitCount = 0;
  
  ___X_VS ___vs;
  
  static ___X_VolatileEnlistmentState ____VolatileEnlistmentActive;
  
  static ___X_VolatileEnlistmentState ____VolatileEnlistmentPreparing;
  
  static ___X_VolatileEnlistmentState ____VolatileEnlistmentPrepared;
  
  static ___X_VolatileEnlistmentState ____VolatileEnlistmentSPC;
  
  static ___X_VolatileEnlistmentState ____VolatileEnlistmentPreparingAborting;
  
  static ___X_VolatileEnlistmentState ____VolatileEnlistmentAborting;
  
  static ___X_VolatileEnlistmentState ____VolatileEnlistmentCommitting;
  
  static ___X_VolatileEnlistmentState ____VolatileEnlistmentEnded;
  
  static ___X_VolatileEnlistmentState ____VolatileEnlistmentDone;
  
  void ___VolatileEnlistmentState_ctor(___X_VS ___x) {
    trace(@"#line", 0, 1189, 34, 1189, 39);
    
    this.___vs = ___x;

  }
  
  void ___EnterState_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
    trace(@"#line", 0, 1204, 3, 1233, 3);
    if ((this.___vs == 0)) {
      trace(@"#line", 0, 1207, 5, 1207, 51);
      this.___VolatileEnlistmentActive_EnterState_VolatileEnlistment(___enlistment);
      atomic {
        trace(@"#line", 0, 1208, 5, 1208, 9);
        goto _____G_1;
      }
    }
    else {
      trace(@"#line", 0, 1204, 3, 1233, 3);
      if ((this.___vs == 1)) {
        trace(@"#line", 0, 1210, 5, 1210, 54);
        this.___VolatileEnlistmentPreparing_EnterState_VolatileEnlistment(___enlistment);
        atomic {
          trace(@"#line", 0, 1211, 5, 1211, 9);
          goto _____G_1;
        }
      }
      else {
        trace(@"#line", 0, 1204, 3, 1233, 3);
        if ((this.___vs == 2)) {
          trace(@"#line", 0, 1213, 5, 1213, 53);
          this.___VolatileEnlistmentPrepared_EnterState_VolatileEnlistment(___enlistment);
          atomic {
            trace(@"#line", 0, 1214, 5, 1214, 9);
            goto _____G_1;
          }
        }
        else {
          trace(@"#line", 0, 1204, 3, 1233, 3);
          if ((this.___vs == 3)) {
            trace(@"#line", 0, 1216, 5, 1216, 48);
            this.___VolatileEnlistmentSPC_EnterState_VolatileEnlistment(___enlistment);
            atomic {
              trace(@"#line", 0, 1217, 5, 1217, 9);
              goto _____G_1;
            }
          }
          else {
            trace(@"#line", 0, 1204, 3, 1233, 3);
            if ((this.___vs == 4)) {
              trace(@"#line", 0, 1219, 5, 1219, 62);
              this.___VolatileEnlistmentPreparingAborting_EnterState_VolatileEnlistment(___enlistment);
              atomic {
                trace(@"#line", 0, 1220, 5, 1220, 9);
                goto _____G_1;
              }
            }
            else {
              trace(@"#line", 0, 1204, 3, 1233, 3);
              if ((this.___vs == 5)) {
                trace(@"#line", 0, 1222, 5, 1222, 53);
                this.___VolatileEnlistmentAborting_EnterState_VolatileEnlistment(___enlistment);
                atomic {
                  trace(@"#line", 0, 1223, 5, 1223, 9);
                  goto _____G_1;
                }
              }
              else {
                trace(@"#line", 0, 1204, 3, 1233, 3);
                if ((this.___vs == 6)) {
                  trace(@"#line", 0, 1225, 5, 1225, 55);
                  this.___VolatileEnlistmentCommitting_EnterState_VolatileEnlistment(___enlistment);
                  atomic {
                    trace(@"#line", 0, 1226, 5, 1226, 9);
                    goto _____G_1;
                  }
                }
                else {
                  trace(@"#line", 0, 1204, 3, 1233, 3);
                  if ((this.___vs == 7)) {
                    trace(@"#line", 0, 1228, 5, 1228, 50);
                    this.___VolatileEnlistmentEnded_EnterState_VolatileEnlistment(___enlistment);
                    atomic {
                      trace(@"#line", 0, 1229, 5, 1229, 9);
                      goto _____G_1;
                    }
                  }
                  else {
                    trace(@"#line", 0, 1204, 3, 1233, 3);
                    if ((this.___vs == 8)) {
                      trace(@"#line", 0, 1231, 5, 1231, 49);
                      this.___VolatileEnlistmentDone_EnterState_VolatileEnlistment(___enlistment);
                      atomic {
                        trace(@"#line", 0, 1232, 5, 1232, 9);
                        goto _____G_1;
                      }
                    }
                    else {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    _____G_1:
 {
    }
  }
  
  void ___EnlistmentDone_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
    bool _____flt1;
    bool _____flt3;
    bool _____flt5;
    bool _____flt7;
    bool _____flt9;
    bool _____flt11;
    atomic {
      trace(@"#line", 0, 1240, 9, 1240, 35);
      
      _____flt1 = (this.___vs == 0);

      if (!_____flt1) {
        goto ____L_1;
      }
    }
    trace(@"#line", 0, 1241, 5, 1241, 55);
    this.___VolatileEnlistmentActive_EnlistmentDone_VolatileEnlistment(___enlistment);
    atomic {
      trace(@"#line", 0, 1240, 4, 1242, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_1:
 {
    }
    atomic {
      trace(@"#line", 0, 1243, 9, 1243, 38);
      
      _____flt3 = (this.___vs == 1);

      if (!_____flt3) {
        goto ____L_2;
      }
    }
    trace(@"#line", 0, 1244, 5, 1244, 58);
    this.___VolatileEnlistmentPreparing_EnlistmentDone_VolatileEnlistment(___enlistment);
    atomic {
      trace(@"#line", 0, 1243, 4, 1245, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_2:
 {
    }
    atomic {
      trace(@"#line", 0, 1246, 9, 1246, 32);
      
      _____flt5 = (this.___vs == 3);

      if (!_____flt5) {
        goto ____L_3;
      }
    }
    trace(@"#line", 0, 1247, 5, 1247, 52);
    this.___VolatileEnlistmentSPC_EnlistmentDone_VolatileEnlistment(___enlistment);
    atomic {
      trace(@"#line", 0, 1246, 4, 1248, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_3:
 {
    }
    atomic {
      trace(@"#line", 0, 1249, 9, 1249, 46);
      
      _____flt7 = (this.___vs == 4);

      if (!_____flt7) {
        goto ____L_4;
      }
    }
    trace(@"#line", 0, 1250, 5, 1250, 66);
    this.___VolatileEnlistmentPreparingAborting_EnlistmentDone_VolatileEnlistment(___enlistment);
    atomic {
      trace(@"#line", 0, 1249, 4, 1251, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_4:
 {
    }
    atomic {
      trace(@"#line", 0, 1252, 9, 1252, 37);
      
      _____flt9 = (this.___vs == 5);

      if (!_____flt9) {
        goto ____L_5;
      }
    }
    trace(@"#line", 0, 1253, 5, 1253, 57);
    this.___VolatileEnlistmentAborting_EnlistmentDone_VolatileEnlistment(___enlistment);
    atomic {
      trace(@"#line", 0, 1252, 4, 1254, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_5:
 {
    }
    atomic {
      trace(@"#line", 0, 1255, 9, 1255, 39);
      
      _____flt11 = (this.___vs == 6);

      if (!_____flt11) {
        goto ____L_6;
      }
    }
    trace(@"#line", 0, 1256, 5, 1256, 59);
    this.___VolatileEnlistmentCommitting_EnlistmentDone_VolatileEnlistment(___enlistment);
    atomic {
      trace(@"#line", 0, 1255, 4, 1257, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_6:
 {
    }
    trace(@"#line", 0, 1259, 5, 1259, 26);
    ___X_Routines.___Assert_Boolean(false);
    atomic {
      trace(@"#line", 0, 1258, 4, 1260, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_0:
 {
    }
    _____G_1:
 {
    }
  }
  
  void ___Prepared_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
    bool _____flt1;
    bool _____flt3;
    atomic {
      trace(@"#line", 0, 1268, 9, 1268, 38);
      
      _____flt1 = (this.___vs == 1);

      if (!_____flt1) {
        goto ____L_1;
      }
    }
    trace(@"#line", 0, 1269, 5, 1269, 52);
    this.___VolatileEnlistmentPreparing_Prepared_VolatileEnlistment(___enlistment);
    atomic {
      trace(@"#line", 0, 1268, 4, 1270, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_1:
 {
    }
    atomic {
      trace(@"#line", 0, 1271, 9, 1271, 46);
      
      _____flt3 = (this.___vs == 4);

      if (!_____flt3) {
        goto ____L_2;
      }
    }
    trace(@"#line", 0, 1272, 5, 1272, 60);
    this.___VolatileEnlistmentPreparingAborting_Prepared_VolatileEnlistment(___enlistment);
    atomic {
      trace(@"#line", 0, 1271, 4, 1273, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_2:
 {
    }
    trace(@"#line", 0, 1275, 5, 1275, 26);
    ___X_Routines.___Assert_Boolean(false);
    atomic {
      trace(@"#line", 0, 1274, 4, 1276, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_0:
 {
    }
    _____G_1:
 {
    }
  }
  
  void ___ForceRollback_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
    bool _____flt1;
    bool _____flt3;
    atomic {
      trace(@"#line", 0, 1284, 9, 1284, 38);
      
      _____flt1 = (this.___vs == 1);

      if (!_____flt1) {
        goto ____L_1;
      }
    }
    trace(@"#line", 0, 1285, 5, 1285, 57);
    this.___VolatileEnlistmentPreparing_ForceRollback_VolatileEnlistment(___enlistment);
    atomic {
      trace(@"#line", 0, 1284, 4, 1286, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_1:
 {
    }
    atomic {
      trace(@"#line", 0, 1287, 9, 1287, 46);
      
      _____flt3 = (this.___vs == 4);

      if (!_____flt3) {
        goto ____L_2;
      }
    }
    trace(@"#line", 0, 1288, 5, 1288, 65);
    this.___VolatileEnlistmentPreparingAborting_ForceRollback_VolatileEnlistment(___enlistment);
    atomic {
      trace(@"#line", 0, 1287, 4, 1289, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_2:
 {
    }
    trace(@"#line", 0, 1291, 5, 1291, 26);
    ___X_Routines.___Assert_Boolean(false);
    atomic {
      trace(@"#line", 0, 1290, 4, 1292, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_0:
 {
    }
    _____G_1:
 {
    }
  }
  
  void ___Committed_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
    bool _____flt1;
    atomic {
      trace(@"#line", 0, 1300, 9, 1300, 32);
      
      _____flt1 = (this.___vs == 3);

      if (!_____flt1) {
        goto ____L_1;
      }
    }
    trace(@"#line", 0, 1301, 5, 1301, 47);
    this.___VolatileEnlistmentSPC_Committed_VolatileEnlistment(___enlistment);
    atomic {
      trace(@"#line", 0, 1300, 4, 1302, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_1:
 {
    }
    trace(@"#line", 0, 1304, 5, 1304, 26);
    ___X_Routines.___Assert_Boolean(false);
    atomic {
      trace(@"#line", 0, 1303, 4, 1305, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_0:
 {
    }
    _____G_1:
 {
    }
  }
  
  void ___Aborted_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
    bool _____flt1;
    atomic {
      trace(@"#line", 0, 1313, 9, 1313, 32);
      
      _____flt1 = (this.___vs == 3);

      if (!_____flt1) {
        goto ____L_1;
      }
    }
    trace(@"#line", 0, 1314, 5, 1314, 45);
    this.___VolatileEnlistmentSPC_Aborted_VolatileEnlistment(___enlistment);
    atomic {
      trace(@"#line", 0, 1313, 4, 1315, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_1:
 {
    }
    trace(@"#line", 0, 1317, 5, 1317, 26);
    ___X_Routines.___Assert_Boolean(false);
    atomic {
      trace(@"#line", 0, 1316, 4, 1318, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_0:
 {
    }
    _____G_1:
 {
    }
  }
  
  void ___InDoubt_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
    bool _____flt1;
    atomic {
      trace(@"#line", 0, 1326, 9, 1326, 32);
      
      _____flt1 = (this.___vs == 3);

      if (!_____flt1) {
        goto ____L_1;
      }
    }
    trace(@"#line", 0, 1327, 5, 1327, 45);
    this.___VolatileEnlistmentSPC_InDoubt_VolatileEnlistment(___enlistment);
    atomic {
      trace(@"#line", 0, 1326, 4, 1328, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_1:
 {
    }
    trace(@"#line", 0, 1330, 5, 1330, 26);
    ___X_Routines.___Assert_Boolean(false);
    atomic {
      trace(@"#line", 0, 1329, 4, 1331, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_0:
 {
    }
    _____G_1:
 {
    }
  }
  
  void ___ChangeStatePreparing_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
    bool _____flt1;
    bool _____flt3;
    bool _____flt5;
    bool _____flt7;
    bool _____flt9;
    bool _____flt11;
    atomic {
      trace(@"#line", 0, 1339, 9, 1339, 35);
      
      _____flt1 = (this.___vs == 0);

      if (!_____flt1) {
        goto ____L_1;
      }
    }
    trace(@"#line", 0, 1340, 5, 1340, 61);
    this.___VolatileEnlistmentActive_ChangeStatePreparing_VolatileEnlistment(___enlistment);
    atomic {
      trace(@"#line", 0, 1339, 4, 1341, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_1:
 {
    }
    atomic {
      trace(@"#line", 0, 1342, 9, 1342, 38);
      
      _____flt3 = (this.___vs == 1);

      if (!_____flt3) {
        goto ____L_2;
      }
    }
    trace(@"#line", 0, 1343, 5, 1343, 64);
    this.___VolatileEnlistmentPreparing_ChangeStatePreparing_VolatileEnlistment(___enlistment);
    atomic {
      trace(@"#line", 0, 1342, 4, 1344, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_2:
 {
    }
    atomic {
      trace(@"#line", 0, 1345, 9, 1345, 37);
      
      _____flt5 = (this.___vs == 2);

      if (!_____flt5) {
        goto ____L_3;
      }
    }
    trace(@"#line", 0, 1346, 5, 1346, 63);
    this.___VolatileEnlistmentPrepared_ChangeStatePreparing_VolatileEnlistment(___enlistment);
    atomic {
      trace(@"#line", 0, 1345, 4, 1347, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_3:
 {
    }
    atomic {
      trace(@"#line", 0, 1348, 9, 1348, 37);
      
      _____flt7 = (this.___vs == 5);

      if (!_____flt7) {
        goto ____L_4;
      }
    }
    trace(@"#line", 0, 1349, 5, 1349, 63);
    this.___VolatileEnlistmentAborting_ChangeStatePreparing_VolatileEnlistment(___enlistment);
    atomic {
      trace(@"#line", 0, 1348, 4, 1350, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_4:
 {
    }
    atomic {
      trace(@"#line", 0, 1351, 9, 1351, 34);
      
      _____flt9 = (this.___vs == 7);

      if (!_____flt9) {
        goto ____L_5;
      }
    }
    trace(@"#line", 0, 1352, 5, 1352, 60);
    this.___VolatileEnlistmentEnded_ChangeStatePreparing_VolatileEnlistment(___enlistment);
    atomic {
      trace(@"#line", 0, 1351, 4, 1353, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_5:
 {
    }
    atomic {
      trace(@"#line", 0, 1354, 9, 1354, 33);
      
      _____flt11 = (this.___vs == 8);

      if (!_____flt11) {
        goto ____L_6;
      }
    }
    trace(@"#line", 0, 1355, 5, 1355, 59);
    this.___VolatileEnlistmentDone_ChangeStatePreparing_VolatileEnlistment(___enlistment);
    atomic {
      trace(@"#line", 0, 1354, 4, 1356, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_6:
 {
    }
    trace(@"#line", 0, 1358, 5, 1358, 26);
    ___X_Routines.___Assert_Boolean(false);
    atomic {
      trace(@"#line", 0, 1357, 4, 1359, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_0:
 {
    }
    _____G_1:
 {
    }
  }
  
  void ___ChangeStateSinglePhaseCommit_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
    bool _____flt1;
    atomic {
      trace(@"#line", 0, 1367, 9, 1367, 35);
      
      _____flt1 = (this.___vs == 0);

      if (!_____flt1) {
        goto ____L_1;
      }
    }
    trace(@"#line", 0, 1368, 5, 1368, 69);
    this.___VolatileEnlistmentActive_ChangeStateSinglePhaseCommit_VolatileEnlistment(___enlistment);
    atomic {
      trace(@"#line", 0, 1367, 4, 1369, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_1:
 {
    }
    trace(@"#line", 0, 1371, 5, 1371, 26);
    ___X_Routines.___Assert_Boolean(false);
    atomic {
      trace(@"#line", 0, 1370, 4, 1372, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_0:
 {
    }
    _____G_1:
 {
    }
  }
  
  void ___InternalAborted_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
    bool _____flt1;
    bool _____flt3;
    bool _____flt5;
    bool _____flt7;
    bool _____flt9;
    bool _____flt11;
    bool _____flt13;
    atomic {
      trace(@"#line", 0, 1380, 9, 1380, 35);
      
      _____flt1 = (this.___vs == 0);

      if (!_____flt1) {
        goto ____L_1;
      }
    }
    trace(@"#line", 0, 1381, 5, 1381, 56);
    this.___VolatileEnlistmentActive_InternalAborted_VolatileEnlistment(___enlistment);
    atomic {
      trace(@"#line", 0, 1380, 4, 1382, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_1:
 {
    }
    atomic {
      trace(@"#line", 0, 1383, 9, 1383, 38);
      
      _____flt3 = (this.___vs == 1);

      if (!_____flt3) {
        goto ____L_2;
      }
    }
    trace(@"#line", 0, 1384, 5, 1384, 59);
    this.___VolatileEnlistmentPreparing_InternalAborted_VolatileEnlistment(___enlistment);
    atomic {
      trace(@"#line", 0, 1383, 4, 1385, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_2:
 {
    }
    atomic {
      trace(@"#line", 0, 1386, 9, 1386, 37);
      
      _____flt5 = (this.___vs == 2);

      if (!_____flt5) {
        goto ____L_3;
      }
    }
    trace(@"#line", 0, 1387, 5, 1387, 58);
    this.___VolatileEnlistmentPrepared_InternalAborted_VolatileEnlistment(___enlistment);
    atomic {
      trace(@"#line", 0, 1386, 4, 1388, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_3:
 {
    }
    atomic {
      trace(@"#line", 0, 1389, 9, 1389, 46);
      
      _____flt7 = (this.___vs == 4);

      if (!_____flt7) {
        goto ____L_4;
      }
    }
    trace(@"#line", 0, 1390, 5, 1390, 67);
    this.___VolatileEnlistmentPreparingAborting_InternalAborted_VolatileEnlistment(___enlistment);
    atomic {
      trace(@"#line", 0, 1389, 4, 1391, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_4:
 {
    }
    atomic {
      trace(@"#line", 0, 1392, 9, 1392, 37);
      
      _____flt9 = (this.___vs == 5);

      if (!_____flt9) {
        goto ____L_5;
      }
    }
    trace(@"#line", 0, 1393, 5, 1393, 58);
    this.___VolatileEnlistmentAborting_InternalAborted_VolatileEnlistment(___enlistment);
    atomic {
      trace(@"#line", 0, 1392, 4, 1394, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_5:
 {
    }
    atomic {
      trace(@"#line", 0, 1395, 9, 1395, 34);
      
      _____flt11 = (this.___vs == 7);

      if (!_____flt11) {
        goto ____L_6;
      }
    }
    trace(@"#line", 0, 1396, 5, 1396, 55);
    this.___VolatileEnlistmentEnded_InternalAborted_VolatileEnlistment(___enlistment);
    atomic {
      trace(@"#line", 0, 1395, 4, 1397, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_6:
 {
    }
    atomic {
      trace(@"#line", 0, 1398, 9, 1398, 33);
      
      _____flt13 = (this.___vs == 8);

      if (!_____flt13) {
        goto ____L_7;
      }
    }
    trace(@"#line", 0, 1399, 5, 1399, 55);
    this.___VolatileEnlistmentEnded_InternalAborted_VolatileEnlistment(___enlistment);
    atomic {
      trace(@"#line", 0, 1398, 4, 1400, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_7:
 {
    }
    trace(@"#line", 0, 1402, 5, 1402, 26);
    ___X_Routines.___Assert_Boolean(false);
    atomic {
      trace(@"#line", 0, 1401, 4, 1403, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_0:
 {
    }
    _____G_1:
 {
    }
  }
  
  void ___InternalCommitted_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
    bool _____flt1;
    bool _____flt3;
    bool _____flt5;
    atomic {
      trace(@"#line", 0, 1411, 9, 1411, 37);
      
      _____flt1 = (this.___vs == 2);

      if (!_____flt1) {
        goto ____L_1;
      }
    }
    trace(@"#line", 0, 1412, 5, 1412, 60);
    this.___VolatileEnlistmentPrepared_InternalCommitted_VolatileEnlistment(___enlistment);
    atomic {
      trace(@"#line", 0, 1411, 4, 1413, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_1:
 {
    }
    atomic {
      trace(@"#line", 0, 1414, 9, 1414, 34);
      
      _____flt3 = (this.___vs == 7);

      if (!_____flt3) {
        goto ____L_2;
      }
    }
    trace(@"#line", 0, 1415, 5, 1415, 57);
    this.___VolatileEnlistmentEnded_InternalCommitted_VolatileEnlistment(___enlistment);
    atomic {
      trace(@"#line", 0, 1414, 4, 1416, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_2:
 {
    }
    atomic {
      trace(@"#line", 0, 1417, 9, 1417, 33);
      
      _____flt5 = (this.___vs == 8);

      if (!_____flt5) {
        goto ____L_3;
      }
    }
    trace(@"#line", 0, 1418, 5, 1418, 57);
    this.___VolatileEnlistmentEnded_InternalCommitted_VolatileEnlistment(___enlistment);
    atomic {
      trace(@"#line", 0, 1417, 4, 1419, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_3:
 {
    }
    trace(@"#line", 0, 1421, 5, 1421, 26);
    ___X_Routines.___Assert_Boolean(false);
    atomic {
      trace(@"#line", 0, 1420, 4, 1422, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_0:
 {
    }
    _____G_1:
 {
    }
  }
  
  void ___InternalIndoubt_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
    bool _____flt1;
    bool _____flt3;
    bool _____flt5;
    atomic {
      trace(@"#line", 0, 1430, 9, 1430, 37);
      
      _____flt1 = (this.___vs == 2);

      if (!_____flt1) {
        goto ____L_1;
      }
    }
    trace(@"#line", 0, 1431, 5, 1431, 58);
    this.___VolatileEnlistmentPrepared_InternalIndoubt_VolatileEnlistment(___enlistment);
    atomic {
      trace(@"#line", 0, 1430, 4, 1432, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_1:
 {
    }
    atomic {
      trace(@"#line", 0, 1433, 9, 1433, 34);
      
      _____flt3 = (this.___vs == 7);

      if (!_____flt3) {
        goto ____L_2;
      }
    }
    trace(@"#line", 0, 1434, 5, 1434, 55);
    this.___VolatileEnlistmentEnded_InternalIndoubt_VolatileEnlistment(___enlistment);
    atomic {
      trace(@"#line", 0, 1433, 4, 1435, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_2:
 {
    }
    atomic {
      trace(@"#line", 0, 1436, 9, 1436, 33);
      
      _____flt5 = (this.___vs == 8);

      if (!_____flt5) {
        goto ____L_3;
      }
    }
    trace(@"#line", 0, 1437, 5, 1437, 55);
    this.___VolatileEnlistmentEnded_InternalIndoubt_VolatileEnlistment(___enlistment);
    atomic {
      trace(@"#line", 0, 1436, 4, 1438, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_3:
 {
    }
    trace(@"#line", 0, 1440, 5, 1440, 26);
    ___X_Routines.___Assert_Boolean(false);
    atomic {
      trace(@"#line", 0, 1439, 4, 1441, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_0:
 {
    }
    _____G_1:
 {
    }
  }
  
  void ___VolatileEnlistmentActive_EnterState_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
    trace(@"#line", 0, 1448, 3, 1448, 33);
    
    ___enlistment.___twoPhaseState = this;

  }
  
  void ___VolatileEnlistmentActive_EnlistmentDone_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
    trace(@"#line", 0, 1456, 3, 1456, 50);
    ___X_VolatileEnlistmentState.____VolatileEnlistmentDone.___EnterState_VolatileEnlistment(___enlistment);
    trace(@"#line", 0, 1459, 3, 1459, 31);
    ___enlistment.___FinishEnlistment();
  }
  
  void ___VolatileEnlistmentActive_ChangeStatePreparing_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
    trace(@"#line", 0, 1464, 3, 1464, 55);
    ___X_VolatileEnlistmentState.____VolatileEnlistmentPreparing.___EnterState_VolatileEnlistment(___enlistment);
  }
  
  void ___VolatileEnlistmentActive_ChangeStateSinglePhaseCommit_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
    trace(@"#line", 0, 1469, 3, 1469, 49);
    ___X_VolatileEnlistmentState.____VolatileEnlistmentSPC.___EnterState_VolatileEnlistment(___enlistment);
  }
  
  void ___VolatileEnlistmentActive_InternalAborted_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
    trace(@"#line", 0, 1475, 3, 1475, 54);
    ___X_VolatileEnlistmentState.____VolatileEnlistmentAborting.___EnterState_VolatileEnlistment(___enlistment);
  }
  
  void ___VolatileEnlistmentPreparing_EnterState_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
    trace(@"#line", 0, 1481, 3, 1481, 33);
    
    ___enlistment.___twoPhaseState = this;

    atomic {
      trace(@"#line", 0, 1483, 17, 1483, 29);
      
      ___enlistment.___tx.____locked = false;

    }
    trace(@"#line", 0, 1484, 3, 1484, 17);
    ___X_Routines.___skip();
    trace(@"#line", 0, 1485, 3, 1485, 48);
    ___enlistment.___Notifications.___Prepare_VolatileEnlistment(___enlistment);
    atomic {
      select first {
        wait (!___enlistment.___tx.____locked) ->
          
          ___enlistment.___tx.____locked = true;

      }
      trace(@"#line", 0, 1486, 18, 1486, 30);
    }
  }
  
  void ___VolatileEnlistmentPreparing_EnlistmentDone_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
    trace(@"#line", 0, 1491, 3, 1491, 50);
    ___X_VolatileEnlistmentState.____VolatileEnlistmentDone.___EnterState_VolatileEnlistment(___enlistment);
    trace(@"#line", 0, 1494, 3, 1494, 31);
    ___enlistment.___FinishEnlistment();
  }
  
  void ___VolatileEnlistmentPreparing_Prepared_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
    trace(@"#line", 0, 1500, 3, 1500, 54);
    ___X_VolatileEnlistmentState.____VolatileEnlistmentPrepared.___EnterState_VolatileEnlistment(___enlistment);
    trace(@"#line", 0, 1503, 3, 1503, 31);
    ___enlistment.___FinishEnlistment();
  }
  
  void ___VolatileEnlistmentPreparing_ForceRollback_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
    trace(@"#line", 0, 1510, 3, 1510, 51);
    ___X_VolatileEnlistmentState.____VolatileEnlistmentEnded.___EnterState_VolatileEnlistment(___enlistment);
    trace(@"#line", 0, 1512, 3, 1512, 17);
    ___X_Routines.___skip();
    trace(@"#line", 0, 1515, 3, 1515, 68);
    ___enlistment.___tx.___State.___ChangeStateTransactionAborted_LtmInternalTransaction(___enlistment.___tx);
    trace(@"#line", 0, 1518, 3, 1518, 31);
    ___enlistment.___FinishEnlistment();
  }
  
  void ___VolatileEnlistmentPreparing_ChangeStatePreparing_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
  }
  
  void ___VolatileEnlistmentPreparing_InternalAborted_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
    trace(@"#line", 0, 1531, 3, 1531, 63);
    ___X_VolatileEnlistmentState.____VolatileEnlistmentPreparingAborting.___EnterState_VolatileEnlistment(___enlistment);
  }
  
  void ___VolatileEnlistmentSPC_EnterState_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
    trace(@"#line", 0, 1537, 3, 1537, 33);
    
    ___enlistment.___twoPhaseState = this;

    trace(@"#line", 0, 1540, 3, 1540, 17);
    ___X_Routines.___skip();
    atomic {
      trace(@"#line", 0, 1541, 17, 1541, 29);
      
      ___enlistment.___tx.____locked = false;

    }
    trace(@"#line", 0, 1542, 3, 1542, 58);
    ___enlistment.___Notifications.___SinglePhaseCommit_VolatileEnlistment(___enlistment);
    atomic {
      select first {
        wait (!___enlistment.___tx.____locked) ->
          
          ___enlistment.___tx.____locked = true;

      }
      trace(@"#line", 0, 1543, 18, 1543, 30);
    }
  }
  
  void ___VolatileEnlistmentSPC_EnlistmentDone_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
    trace(@"#line", 0, 1548, 3, 1548, 51);
    ___X_VolatileEnlistmentState.____VolatileEnlistmentEnded.___EnterState_VolatileEnlistment(___enlistment);
    trace(@"#line", 0, 1549, 3, 1549, 70);
    ___enlistment.___tx.___State.___ChangeStateTransactionCommitted_LtmInternalTransaction(___enlistment.___tx);
  }
  
  void ___VolatileEnlistmentSPC_Committed_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
    trace(@"#line", 0, 1554, 3, 1554, 51);
    ___X_VolatileEnlistmentState.____VolatileEnlistmentEnded.___EnterState_VolatileEnlistment(___enlistment);
    trace(@"#line", 0, 1555, 3, 1555, 70);
    ___enlistment.___tx.___State.___ChangeStateTransactionCommitted_LtmInternalTransaction(___enlistment.___tx);
  }
  
  void ___VolatileEnlistmentSPC_Aborted_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
    trace(@"#line", 0, 1560, 3, 1560, 51);
    ___X_VolatileEnlistmentState.____VolatileEnlistmentEnded.___EnterState_VolatileEnlistment(___enlistment);
    trace(@"#line", 0, 1562, 3, 1562, 17);
    ___X_Routines.___skip();
    trace(@"#line", 0, 1564, 3, 1564, 68);
    ___enlistment.___tx.___State.___ChangeStateTransactionAborted_LtmInternalTransaction(___enlistment.___tx);
  }
  
  void ___VolatileEnlistmentSPC_InDoubt_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
    trace(@"#line", 0, 1569, 3, 1569, 51);
    ___X_VolatileEnlistmentState.____VolatileEnlistmentEnded.___EnterState_VolatileEnlistment(___enlistment);
    trace(@"#line", 0, 1571, 3, 1571, 17);
    ___X_Routines.___skip();
    trace(@"#line", 0, 1573, 3, 1573, 68);
    ___enlistment.___tx.___State.___ChangeStateTransactionInDoubt_LtmInternalTransaction(___enlistment.___tx);
  }
  
  void ___VolatileEnlistmentPrepared_EnterState_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
    trace(@"#line", 0, 1579, 3, 1579, 33);
    
    ___enlistment.___twoPhaseState = this;

  }
  
  void ___VolatileEnlistmentPrepared_InternalAborted_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
    trace(@"#line", 0, 1586, 3, 1586, 54);
    ___X_VolatileEnlistmentState.____VolatileEnlistmentAborting.___EnterState_VolatileEnlistment(___enlistment);
  }
  
  void ___VolatileEnlistmentPrepared_InternalCommitted_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
    trace(@"#line", 0, 1591, 3, 1591, 56);
    ___X_VolatileEnlistmentState.____VolatileEnlistmentCommitting.___EnterState_VolatileEnlistment(___enlistment);
  }
  
  void ___VolatileEnlistmentPrepared_InternalIndoubt_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
    atomic {
      trace(@"#line", 0, 1596, 17, 1596, 29);
      
      ___enlistment.___tx.____locked = false;

    }
    trace(@"#line", 0, 1597, 3, 1597, 17);
    ___X_Routines.___skip();
    trace(@"#line", 0, 1599, 3, 1599, 36);
    ___enlistment.___Notifications.___InDoubt();
    atomic {
      select first {
        wait (!___enlistment.___tx.____locked) ->
          
          ___enlistment.___tx.____locked = true;

      }
      trace(@"#line", 0, 1600, 18, 1600, 30);
    }
    trace(@"#line", 0, 1603, 3, 1603, 51);
    ___X_VolatileEnlistmentState.____VolatileEnlistmentEnded.___EnterState_VolatileEnlistment(___enlistment);
  }
  
  void ___VolatileEnlistmentPrepared_ChangeStatePreparing_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
  }
  
  void ___VolatileEnlistmentPreparingAborting_EnterState_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
    trace(@"#line", 0, 1614, 3, 1614, 33);
    
    ___enlistment.___twoPhaseState = this;

  }
  
  void ___VolatileEnlistmentPreparingAborting_EnlistmentDone_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
    trace(@"#line", 0, 1620, 3, 1620, 51);
    ___X_VolatileEnlistmentState.____VolatileEnlistmentEnded.___EnterState_VolatileEnlistment(___enlistment);
  }
  
  void ___VolatileEnlistmentPreparingAborting_Prepared_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
    trace(@"#line", 0, 1626, 3, 1626, 54);
    ___X_VolatileEnlistmentState.____VolatileEnlistmentAborting.___EnterState_VolatileEnlistment(___enlistment);
    trace(@"#line", 0, 1629, 3, 1629, 31);
    ___enlistment.___FinishEnlistment();
  }
  
  void ___VolatileEnlistmentPreparingAborting_ForceRollback_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
    trace(@"#line", 0, 1636, 3, 1636, 51);
    ___X_VolatileEnlistmentState.____VolatileEnlistmentEnded.___EnterState_VolatileEnlistment(___enlistment);
    trace(@"#line", 0, 1638, 3, 1638, 17);
    ___X_Routines.___skip();
    trace(@"#line", 0, 1641, 3, 1641, 31);
    ___enlistment.___FinishEnlistment();
  }
  
  void ___VolatileEnlistmentPreparingAborting_InternalAborted_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
  }
  
  void ___VolatileEnlistmentAborting_EnterState_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
    trace(@"#line", 0, 1653, 3, 1653, 33);
    
    ___enlistment.___twoPhaseState = this;

    atomic {
      trace(@"#line", 0, 1655, 17, 1655, 29);
      
      ___enlistment.___tx.____locked = false;

    }
    trace(@"#line", 0, 1656, 3, 1656, 17);
    ___X_Routines.___skip();
    trace(@"#line", 0, 1657, 3, 1657, 49);
    ___enlistment.___Notifications.___Rollback_VolatileEnlistment(___enlistment);
    atomic {
      select first {
        wait (!___enlistment.___tx.____locked) ->
          
          ___enlistment.___tx.____locked = true;

      }
      trace(@"#line", 0, 1658, 18, 1658, 30);
    }
  }
  
  void ___VolatileEnlistmentAborting_ChangeStatePreparing_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
  }
  
  void ___VolatileEnlistmentAborting_EnlistmentDone_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
    trace(@"#line", 0, 1669, 3, 1669, 51);
    ___X_VolatileEnlistmentState.____VolatileEnlistmentEnded.___EnterState_VolatileEnlistment(___enlistment);
  }
  
  void ___VolatileEnlistmentAborting_InternalAborted_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
  }
  
  void ___VolatileEnlistmentCommitting_EnterState_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
    trace(@"#line", 0, 1680, 3, 1680, 33);
    
    ___enlistment.___twoPhaseState = this;

    atomic {
      trace(@"#line", 0, 1682, 17, 1682, 29);
      
      ___enlistment.___tx.____locked = false;

    }
    trace(@"#line", 0, 1684, 3, 1684, 17);
    ___X_Routines.___skip();
    trace(@"#line", 0, 1685, 3, 1685, 47);
    ___enlistment.___Notifications.___Commit_VolatileEnlistment(___enlistment);
    atomic {
      select first {
        wait (!___enlistment.___tx.____locked) ->
          
          ___enlistment.___tx.____locked = true;

      }
      trace(@"#line", 0, 1686, 18, 1686, 30);
    }
  }
  
  void ___VolatileEnlistmentCommitting_EnlistmentDone_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
    trace(@"#line", 0, 1692, 3, 1692, 51);
    ___X_VolatileEnlistmentState.____VolatileEnlistmentEnded.___EnterState_VolatileEnlistment(___enlistment);
  }
  
  void ___VolatileEnlistmentEnded_EnterState_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
    trace(@"#line", 0, 1698, 3, 1698, 33);
    
    ___enlistment.___twoPhaseState = this;

  }
  
  void ___VolatileEnlistmentEnded_ChangeStatePreparing_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
  }
  
  void ___VolatileEnlistmentEnded_InternalAborted_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
  }
  
  void ___VolatileEnlistmentEnded_InternalCommitted_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
  }
  
  void ___VolatileEnlistmentEnded_InternalIndoubt_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
  }
  
  void ___VolatileEnlistmentDone_EnterState_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
    trace(@"#line", 0, 1729, 3, 1729, 33);
    
    ___enlistment.___twoPhaseState = this;

  }
  
  void ___VolatileEnlistmentDone_ChangeStatePreparing_VolatileEnlistment(___X_VolatileEnlistment ___enlistment) {
    trace(@"#line", 0, 1736, 3, 1736, 28);
    ___enlistment.___CheckComplete();
  }
};

enum ___X_TS {
  ___TransactionStateActive,
  ___TransactionStatePhase0,
  ___TransactionStateVolatilePhase1,
  ___TransactionStateVolatileSPC,
  ___TransactionStateSPC,
  ___TransactionStateAborted,
  ___TransactionStateCommitted,
  ___TransactionStateInDoubt,
};

class ___X_TransactionState {
  bool ____locked = false;
  
  bool ____signal = false;
  
  int ____waitCount = 0;
  
  ___X_TS ___ts;
  
  static ___X_TransactionState ____TransactionStateActive;
  
  static ___X_TransactionState ____TransactionStatePhase0;
  
  static ___X_TransactionState ____TransactionStateVolatilePhase1;
  
  static ___X_TransactionState ____TransactionStateVolatileSPC;
  
  static ___X_TransactionState ____TransactionStateSPC;
  
  static ___X_TransactionState ____TransactionStateAborted;
  
  static ___X_TransactionState ____TransactionStateCommitted;
  
  static ___X_TransactionState ____TransactionStateInDoubt;
  
  void ___TransactionState_ctor(___X_TS ___x) {
    trace(@"#line", 0, 1760, 27, 1760, 32);
    
    this.___ts = ___x;

  }
  
  void ___CommonEnterState_LtmInternalTransaction_TransactionState(___X_LtmInternalTransaction ___tx, ___X_TransactionState ___ts) {
    bool _____flt0;
    atomic {
      trace(@"#line", 0, 1774, 20, 1774, 33);
      
      _____flt0 = (___tx.___State != ___ts);

    }
    trace(@"#line", 0, 1774, 3, 1774, 35);
    ___X_Routines.___Assert_Boolean(_____flt0);
    trace(@"#line", 0, 1775, 3, 1775, 15);
    
    ___tx.___State = ___ts;

  }
  
  void ___AddVolatileEnlistment_VolatileEnlistmentSet_VolatileEnlistment(___X_VolatileEnlistmentSet ___enlistments, ___X_VolatileEnlistment ___enlistment) {
    bool _____flt0;
    int _____asp5;
    int _____flt2;
    ___X_VolatileEnlistment _____flt1;
    atomic {
      trace(@"#line", 0, 1781, 20, 1781, 58);
      
      _____flt0 = (___enlistments.___volatileEnlistmentCount < 2);

    }
    trace(@"#line", 0, 1781, 3, 1781, 60);
    ___X_Routines.___Assert_Boolean(_____flt0);
    atomic {
      trace(@"#line", 0, 1784, 3, 1784, 71);
      assert(((___enlistments.___volatileEnlistmentCount >= 0) && (___enlistments.___volatileEnlistmentCount < ___enlistments.___volatileEnlistments.leng)), @"array index out of bound");
    }
    trace(@"#line", 0, 1784, 3, 1784, 84);
    
    ___enlistments.___volatileEnlistments.repr[___enlistments.___volatileEnlistmentCount] = ___enlistment;

    atomic {
      trace(@"#line", 0, 1785, 3, 1785, 39);
      
      _____asp5 = ___enlistments.___volatileEnlistmentCount;

    }
    trace(@"#line", 0, 1785, 3, 1785, 39);
    
    ___enlistments.___volatileEnlistmentCount = (___enlistments.___volatileEnlistmentCount + 1);

    atomic {
      trace(@"#line", 0, 1789, 4, 1789, 74);
      
      _____flt2 = (___enlistments.___volatileEnlistmentCount - 1);

      assert(((_____flt2 >= 0) && (_____flt2 < ___enlistments.___volatileEnlistments.leng)), @"array index out of bound");
      
      _____flt1 = ___enlistments.___volatileEnlistments.repr[_____flt2];

    }
    trace(@"#line", 0, 1788, 3, 1789, 76);
    ___X_VolatileEnlistmentState.____VolatileEnlistmentActive.___EnterState_VolatileEnlistment(_____flt1);
  }
  
  void ___EnterState_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    bool _____flt1;
    bool _____flt3;
    bool _____flt5;
    bool _____flt7;
    bool _____flt9;
    bool _____flt11;
    bool _____flt13;
    bool _____flt15;
    atomic {
      trace(@"#line", 0, 1796, 9, 1796, 33);
      
      _____flt1 = (this.___ts == 0);

      if (!_____flt1) {
        goto ____L_1;
      }
    }
    trace(@"#line", 0, 1797, 5, 1797, 41);
    this.___TransactionStateActive_EnterState_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 1796, 4, 1798, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_1:
 {
    }
    atomic {
      trace(@"#line", 0, 1799, 9, 1799, 33);
      
      _____flt3 = (this.___ts == 1);

      if (!_____flt3) {
        goto ____L_2;
      }
    }
    trace(@"#line", 0, 1800, 5, 1800, 41);
    this.___TransactionStatePhase0_EnterState_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 1799, 4, 1801, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_2:
 {
    }
    atomic {
      trace(@"#line", 0, 1802, 9, 1802, 41);
      
      _____flt5 = (this.___ts == 2);

      if (!_____flt5) {
        goto ____L_3;
      }
    }
    trace(@"#line", 0, 1803, 5, 1803, 49);
    this.___TransactionStateVolatilePhase1_EnterState_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 1802, 4, 1804, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_3:
 {
    }
    atomic {
      trace(@"#line", 0, 1805, 9, 1805, 38);
      
      _____flt7 = (this.___ts == 3);

      if (!_____flt7) {
        goto ____L_4;
      }
    }
    trace(@"#line", 0, 1806, 5, 1806, 46);
    this.___TransactionStateVolatileSPC_EnterState_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 1805, 4, 1807, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_4:
 {
    }
    atomic {
      trace(@"#line", 0, 1808, 9, 1808, 30);
      
      _____flt9 = (this.___ts == 4);

      if (!_____flt9) {
        goto ____L_5;
      }
    }
    trace(@"#line", 0, 1809, 5, 1809, 38);
    this.___TransactionStateSPC_EnterState_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 1808, 4, 1810, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_5:
 {
    }
    atomic {
      trace(@"#line", 0, 1811, 9, 1811, 34);
      
      _____flt11 = (this.___ts == 5);

      if (!_____flt11) {
        goto ____L_6;
      }
    }
    trace(@"#line", 0, 1812, 5, 1812, 42);
    this.___TransactionStateAborted_EnterState_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 1811, 4, 1813, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_6:
 {
    }
    atomic {
      trace(@"#line", 0, 1814, 9, 1814, 36);
      
      _____flt13 = (this.___ts == 6);

      if (!_____flt13) {
        goto ____L_7;
      }
    }
    trace(@"#line", 0, 1815, 5, 1815, 44);
    this.___TransactionStateCommitted_EnterState_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 1814, 4, 1816, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_7:
 {
    }
    atomic {
      trace(@"#line", 0, 1817, 9, 1817, 34);
      
      _____flt15 = (this.___ts == 7);

      if (!_____flt15) {
        goto ____L_8;
      }
    }
    trace(@"#line", 0, 1818, 5, 1818, 42);
    this.___TransactionStateInDoubt_EnterState_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 1817, 4, 1819, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_8:
 {
    }
    trace(@"#line", 0, 1821, 5, 1821, 26);
    ___X_Routines.___Assert_Boolean(false);
    atomic {
      trace(@"#line", 0, 1820, 4, 1822, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_0:
 {
    }
    _____G_1:
 {
    }
  }
  
  void ___BeginCommit_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    bool _____flt1;
    bool _____flt3;
    atomic {
      trace(@"#line", 0, 1830, 9, 1830, 33);
      
      _____flt1 = (this.___ts == 0);

      if (!_____flt1) {
        goto ____L_1;
      }
    }
    trace(@"#line", 0, 1831, 5, 1831, 42);
    this.___TransactionStateActive_BeginCommit_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 1830, 4, 1832, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_1:
 {
    }
    atomic {
      trace(@"#line", 0, 1833, 9, 1833, 34);
      
      _____flt3 = (this.___ts == 5);

      if (!_____flt3) {
        goto ____L_2;
      }
    }
    trace(@"#line", 0, 1834, 5, 1834, 43);
    this.___TransactionStateAborted_BeginCommit_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 1833, 4, 1835, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_2:
 {
    }
    trace(@"#line", 0, 1837, 5, 1837, 26);
    ___X_Routines.___Assume_Boolean(false);
    atomic {
      trace(@"#line", 0, 1836, 4, 1838, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_0:
 {
    }
    _____G_1:
 {
    }
  }
  
  void ___EndCommit_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    bool _____flt1;
    bool _____flt3;
    bool _____flt5;
    atomic {
      trace(@"#line", 0, 1846, 9, 1846, 34);
      
      _____flt1 = (this.___ts == 5);

      if (!_____flt1) {
        goto ____L_1;
      }
    }
    trace(@"#line", 0, 1847, 5, 1847, 41);
    this.___TransactionStateAborted_EndCommit_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 1846, 4, 1848, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_1:
 {
    }
    atomic {
      trace(@"#line", 0, 1849, 9, 1849, 36);
      
      _____flt3 = (this.___ts == 6);

      if (!_____flt3) {
        goto ____L_2;
      }
    }
    trace(@"#line", 0, 1850, 5, 1850, 43);
    this.___TransactionStateCommitted_EndCommit_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 1849, 4, 1851, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_2:
 {
    }
    atomic {
      trace(@"#line", 0, 1852, 9, 1852, 34);
      
      _____flt5 = (this.___ts == 7);

      if (!_____flt5) {
        goto ____L_3;
      }
    }
    trace(@"#line", 0, 1853, 5, 1853, 41);
    this.___TransactionStateInDoubt_EndCommit_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 1852, 4, 1854, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_3:
 {
    }
    trace(@"#line", 0, 1856, 5, 1856, 26);
    ___X_Routines.___Assume_Boolean(false);
    atomic {
      trace(@"#line", 0, 1855, 4, 1857, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_0:
 {
    }
    _____G_1:
 {
    }
  }
  
  void ___CheckSynchronousOutcome_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    bool _____flt1;
    bool _____flt3;
    bool _____flt5;
    atomic {
      trace(@"#line", 0, 1865, 9, 1865, 34);
      
      _____flt1 = (this.___ts == 5);

      if (!_____flt1) {
        goto ____L_1;
      }
    }
    trace(@"#line", 0, 1866, 5, 1866, 55);
    this.___TransactionStateAborted_CheckSynchronousOutcome_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 1865, 4, 1867, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_1:
 {
    }
    atomic {
      trace(@"#line", 0, 1868, 9, 1868, 36);
      
      _____flt3 = (this.___ts == 6);

      if (!_____flt3) {
        goto ____L_2;
      }
    }
    trace(@"#line", 0, 1869, 5, 1869, 57);
    this.___TransactionStateCommitted_CheckSynchronousOutcome_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 1868, 4, 1870, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_2:
 {
    }
    atomic {
      trace(@"#line", 0, 1871, 9, 1871, 34);
      
      _____flt5 = (this.___ts == 7);

      if (!_____flt5) {
        goto ____L_3;
      }
    }
    trace(@"#line", 0, 1872, 5, 1872, 55);
    this.___TransactionStateInDoubt_CheckSynchronousOutcome_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 1871, 4, 1873, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_3:
 {
    }
    atomic {
      trace(@"#line", 0, 1874, 4, 1876, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_0:
 {
    }
    _____G_1:
 {
    }
  }
  
  void ___Rollback_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    bool _____flt1;
    bool _____flt3;
    bool _____flt5;
    bool _____flt7;
    bool _____flt9;
    bool _____flt11;
    atomic {
      trace(@"#line", 0, 1884, 9, 1884, 33);
      
      _____flt1 = (this.___ts == 0);

      if (!_____flt1) {
        goto ____L_1;
      }
    }
    trace(@"#line", 0, 1885, 5, 1885, 39);
    this.___TransactionStateActive_Rollback_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 1884, 4, 1886, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_1:
 {
    }
    atomic {
      trace(@"#line", 0, 1887, 9, 1887, 33);
      
      _____flt3 = (this.___ts == 1);

      if (!_____flt3) {
        goto ____L_2;
      }
    }
    trace(@"#line", 0, 1888, 5, 1888, 39);
    this.___TransactionStatePhase0_Rollback_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 1887, 4, 1889, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_2:
 {
    }
    atomic {
      trace(@"#line", 0, 1890, 9, 1890, 41);
      
      _____flt5 = (this.___ts == 2);

      if (!_____flt5) {
        goto ____L_3;
      }
    }
    trace(@"#line", 0, 1891, 5, 1891, 47);
    this.___TransactionStateVolatilePhase1_Rollback_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 1890, 4, 1892, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_3:
 {
    }
    atomic {
      trace(@"#line", 0, 1893, 9, 1893, 34);
      
      _____flt7 = (this.___ts == 5);

      if (!_____flt7) {
        goto ____L_4;
      }
    }
    trace(@"#line", 0, 1894, 5, 1894, 40);
    this.___TransactionStateAborted_Rollback_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 1893, 4, 1895, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_4:
 {
    }
    atomic {
      trace(@"#line", 0, 1896, 9, 1896, 36);
      
      _____flt9 = (this.___ts == 6);

      if (!_____flt9) {
        goto ____L_5;
      }
    }
    trace(@"#line", 0, 1897, 5, 1897, 42);
    this.___TransactionStateCommitted_Rollback_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 1896, 4, 1898, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_5:
 {
    }
    atomic {
      trace(@"#line", 0, 1899, 9, 1899, 34);
      
      _____flt11 = (this.___ts == 7);

      if (!_____flt11) {
        goto ____L_6;
      }
    }
    trace(@"#line", 0, 1900, 5, 1900, 40);
    this.___TransactionStateInDoubt_Rollback_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 1899, 4, 1901, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_6:
 {
    }
    trace(@"#line", 0, 1903, 5, 1903, 26);
    ___X_Routines.___Assert_Boolean(false);
    atomic {
      trace(@"#line", 0, 1902, 4, 1904, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_0:
 {
    }
    _____G_1:
 {
    }
  }
  
  ___X_DurableEnlistment ___DurableEnlist_LtmInternalTransaction_IDENotification_LightweightTransaction(___X_LtmInternalTransaction ___tx, ___X_IDENotification ___enlistmentNotification, ___X_LightweightTransaction ___lightweightTransaction) {
    ___X_DurableEnlistment _____result__;
    bool _____flt1;
    bool _____flt3;
    atomic {
      trace(@"#line", 0, 1916, 9, 1916, 33);
      
      _____flt1 = (this.___ts == 0);

      if (!_____flt1) {
        goto ____L_1;
      }
    }
    trace(@"#line", 0, 1917, 5, 1917, 94);
    
    _____result__ = this.___EnlistableStates_DurableEnlist_LtmInternalTransaction_IDENotification_LightweightTransaction(___tx, ___enlistmentNotification, ___lightweightTransaction);

    atomic {
      trace(@"#line", 0, 1916, 4, 1917, 94);
      goto _____G_0;
      goto ____L_0;
    }
    ____L_1:
 {
    }
    atomic {
      trace(@"#line", 0, 1918, 9, 1918, 33);
      
      _____flt3 = (this.___ts == 1);

      if (!_____flt3) {
        goto ____L_2;
      }
    }
    trace(@"#line", 0, 1919, 5, 1919, 100);
    
    _____result__ = this.___TransactionStatePhase0_DurableEnlist_LtmInternalTransaction_IDENotification_LightweightTransaction(___tx, ___enlistmentNotification, ___lightweightTransaction);

    atomic {
      trace(@"#line", 0, 1918, 4, 1919, 100);
      goto _____G_0;
      goto ____L_0;
    }
    ____L_2:
 {
    }
    trace(@"#line", 0, 1921, 5, 1921, 26);
    ___X_Routines.___Assume_Boolean(false);
    atomic {
      trace(@"#line", 0, 1920, 4, 1921, 27);
      goto ____L_0;
    }
    ____L_0:
 {
    }
    _____G_0:
 {
    }
    atomic {
      trace(@"#line", 0, 1914, 3, 1922, 3);
      return _____result__;
    }
  }
  
  ___X_VolatileEnlistment ___VolatileEnlist_LtmInternalTransaction_IVENotification_Boolean_VN_LightweightTransaction(___X_LtmInternalTransaction ___tx, ___X_IVENotification ___enlistmentNotification, bool ___enlistDuringPrepareRequired, ___X_VN ___vn, ___X_LightweightTransaction ___lightweightTransaction) {
    ___X_VolatileEnlistment _____result__;
    bool _____flt1;
    bool _____flt3;
    atomic {
      trace(@"#line", 0, 1935, 9, 1935, 33);
      
      _____flt1 = (this.___ts == 0);

      if (!_____flt1) {
        goto ____L_1;
      }
    }
    trace(@"#line", 0, 1936, 5, 1936, 134);
    
    _____result__ = this.___TransactionStateActive_VolatileEnlist_LtmInternalTransaction_IVENotification_Boolean_VN_LightweightTransaction(___tx, ___enlistmentNotification, ___enlistDuringPrepareRequired, ___vn, ___lightweightTransaction);

    atomic {
      trace(@"#line", 0, 1935, 4, 1936, 134);
      goto _____G_0;
      goto ____L_0;
    }
    ____L_1:
 {
    }
    atomic {
      trace(@"#line", 0, 1937, 9, 1937, 33);
      
      _____flt3 = (this.___ts == 1);

      if (!_____flt3) {
        goto ____L_2;
      }
    }
    trace(@"#line", 0, 1938, 5, 1938, 134);
    
    _____result__ = this.___TransactionStatePhase0_VolatileEnlist_LtmInternalTransaction_IVENotification_Boolean_VN_LightweightTransaction(___tx, ___enlistmentNotification, ___enlistDuringPrepareRequired, ___vn, ___lightweightTransaction);

    atomic {
      trace(@"#line", 0, 1937, 4, 1938, 134);
      goto _____G_0;
      goto ____L_0;
    }
    ____L_2:
 {
    }
    trace(@"#line", 0, 1940, 5, 1940, 26);
    ___X_Routines.___Assume_Boolean(false);
    atomic {
      trace(@"#line", 0, 1939, 4, 1940, 27);
      goto ____L_0;
    }
    ____L_0:
 {
    }
    _____G_0:
 {
    }
    atomic {
      trace(@"#line", 0, 1933, 3, 1941, 3);
      return _____result__;
    }
  }
  
  ___X_TransactionStatus ___get_Status_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    ___X_TransactionStatus _____result__;
    bool _____flt1;
    bool _____flt3;
    bool _____flt5;
    bool _____flt7;
    bool _____flt9;
    bool _____flt11;
    bool _____flt13;
    bool _____flt15;
    atomic {
      trace(@"#line", 0, 1947, 9, 1947, 33);
      
      _____flt1 = (this.___ts == 0);

      if (!_____flt1) {
        goto ____L_1;
      }
    }
    trace(@"#line", 0, 1948, 5, 1948, 39);
    
    _____result__ = this.___ActiveStates_get_Status_LtmInternalTransaction(___tx);

    atomic {
      trace(@"#line", 0, 1947, 4, 1948, 39);
      goto _____G_0;
      goto ____L_0;
    }
    ____L_1:
 {
    }
    atomic {
      trace(@"#line", 0, 1949, 9, 1949, 33);
      
      _____flt3 = (this.___ts == 1);

      if (!_____flt3) {
        goto ____L_2;
      }
    }
    trace(@"#line", 0, 1950, 5, 1950, 39);
    
    _____result__ = this.___ActiveStates_get_Status_LtmInternalTransaction(___tx);

    atomic {
      trace(@"#line", 0, 1949, 4, 1950, 39);
      goto _____G_0;
      goto ____L_0;
    }
    ____L_2:
 {
    }
    atomic {
      trace(@"#line", 0, 1951, 9, 1951, 41);
      
      _____flt5 = (this.___ts == 2);

      if (!_____flt5) {
        goto ____L_3;
      }
    }
    trace(@"#line", 0, 1952, 5, 1952, 39);
    
    _____result__ = this.___ActiveStates_get_Status_LtmInternalTransaction(___tx);

    atomic {
      trace(@"#line", 0, 1951, 4, 1952, 39);
      goto _____G_0;
      goto ____L_0;
    }
    ____L_3:
 {
    }
    atomic {
      trace(@"#line", 0, 1953, 9, 1953, 38);
      
      _____flt7 = (this.___ts == 3);

      if (!_____flt7) {
        goto ____L_4;
      }
    }
    trace(@"#line", 0, 1954, 5, 1954, 39);
    
    _____result__ = this.___ActiveStates_get_Status_LtmInternalTransaction(___tx);

    atomic {
      trace(@"#line", 0, 1953, 4, 1954, 39);
      goto _____G_0;
      goto ____L_0;
    }
    ____L_4:
 {
    }
    atomic {
      trace(@"#line", 0, 1955, 9, 1955, 30);
      
      _____flt9 = (this.___ts == 4);

      if (!_____flt9) {
        goto ____L_5;
      }
    }
    trace(@"#line", 0, 1956, 5, 1956, 39);
    
    _____result__ = this.___ActiveStates_get_Status_LtmInternalTransaction(___tx);

    atomic {
      trace(@"#line", 0, 1955, 4, 1956, 39);
      goto _____G_0;
      goto ____L_0;
    }
    ____L_5:
 {
    }
    atomic {
      trace(@"#line", 0, 1957, 9, 1957, 34);
      
      _____flt11 = (this.___ts == 5);

      if (!_____flt11) {
        goto ____L_6;
      }
    }
    trace(@"#line", 0, 1958, 5, 1958, 50);
    
    _____result__ = this.___TransactionStateAborted_get_Status_LtmInternalTransaction(___tx);

    atomic {
      trace(@"#line", 0, 1957, 4, 1958, 50);
      goto _____G_0;
      goto ____L_0;
    }
    ____L_6:
 {
    }
    atomic {
      trace(@"#line", 0, 1959, 9, 1959, 36);
      
      _____flt13 = (this.___ts == 6);

      if (!_____flt13) {
        goto ____L_7;
      }
    }
    trace(@"#line", 0, 1960, 5, 1960, 52);
    
    _____result__ = this.___TransactionStateCommitted_get_Status_LtmInternalTransaction(___tx);

    atomic {
      trace(@"#line", 0, 1959, 4, 1960, 52);
      goto _____G_0;
      goto ____L_0;
    }
    ____L_7:
 {
    }
    atomic {
      trace(@"#line", 0, 1961, 9, 1961, 34);
      
      _____flt15 = (this.___ts == 7);

      if (!_____flt15) {
        goto ____L_8;
      }
    }
    trace(@"#line", 0, 1962, 5, 1962, 50);
    
    _____result__ = this.___TransactionStateInDoubt_get_Status_LtmInternalTransaction(___tx);

    atomic {
      trace(@"#line", 0, 1961, 4, 1962, 50);
      goto _____G_0;
      goto ____L_0;
    }
    ____L_8:
 {
    }
    atomic {
      trace(@"#line", 0, 1963, 4, 1964, 26);
      assert(false, @"exception thrown: new Exception()");
      goto ____L_0;
    }
    ____L_0:
 {
    }
    _____G_0:
 {
    }
    atomic {
      trace(@"#line", 0, 1945, 3, 1965, 3);
      return _____result__;
    }
  }
  
  void ___CompleteBlockingClone_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    bool _____flt1;
    bool _____flt3;
    atomic {
      trace(@"#line", 0, 1972, 9, 1972, 33);
      
      _____flt1 = (this.___ts == 0);

      if (!_____flt1) {
        goto ____L_1;
      }
    }
    trace(@"#line", 0, 1973, 5, 1973, 46);
    this.___EnlistableStates_CompleteBlockingClone_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 1972, 4, 1974, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_1:
 {
    }
    atomic {
      trace(@"#line", 0, 1975, 9, 1975, 33);
      
      _____flt3 = (this.___ts == 1);

      if (!_____flt3) {
        goto ____L_2;
      }
    }
    trace(@"#line", 0, 1976, 5, 1976, 46);
    this.___EnlistableStates_CompleteBlockingClone_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 1975, 4, 1977, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_2:
 {
    }
    atomic {
      trace(@"#line", 0, 1978, 4, 1979, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_0:
 {
    }
    _____G_1:
 {
    }
  }
  
  void ___CompleteAbortingClone_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    bool _____flt1;
    bool _____flt3;
    atomic {
      trace(@"#line", 0, 1987, 9, 1987, 33);
      
      _____flt1 = (this.___ts == 0);

      if (!_____flt1) {
        goto ____L_1;
      }
    }
    trace(@"#line", 0, 1988, 5, 1988, 46);
    this.___EnlistableStates_CompleteAbortingClone_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 1987, 4, 1989, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_1:
 {
    }
    atomic {
      trace(@"#line", 0, 1990, 9, 1990, 33);
      
      _____flt3 = (this.___ts == 1);

      if (!_____flt3) {
        goto ____L_2;
      }
    }
    trace(@"#line", 0, 1991, 5, 1991, 46);
    this.___EnlistableStates_CompleteAbortingClone_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 1990, 4, 1992, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_2:
 {
    }
    atomic {
      trace(@"#line", 0, 1993, 4, 1994, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_0:
 {
    }
    _____G_1:
 {
    }
  }
  
  void ___CreateBlockingClone_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    bool _____flt1;
    bool _____flt3;
    bool _____flt5;
    atomic {
      trace(@"#line", 0, 2002, 9, 2002, 33);
      
      _____flt1 = (this.___ts == 0);

      if (!_____flt1) {
        goto ____L_1;
      }
    }
    trace(@"#line", 0, 2003, 5, 2003, 44);
    this.___EnlistableStates_CreateBlockingClone_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 2002, 4, 2004, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_1:
 {
    }
    atomic {
      trace(@"#line", 0, 2005, 9, 2005, 33);
      
      _____flt3 = (this.___ts == 1);

      if (!_____flt3) {
        goto ____L_2;
      }
    }
    trace(@"#line", 0, 2006, 5, 2006, 44);
    this.___EnlistableStates_CreateBlockingClone_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 2005, 4, 2007, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_2:
 {
    }
    atomic {
      trace(@"#line", 0, 2008, 9, 2008, 34);
      
      _____flt5 = (this.___ts == 5);

      if (!_____flt5) {
        goto ____L_3;
      }
    }
    trace(@"#line", 0, 2009, 5, 2009, 51);
    this.___TransactionStateAborted_CreateBlockingClone_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 2008, 4, 2010, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_3:
 {
    }
    trace(@"#line", 0, 2012, 5, 2012, 26);
    ___X_Routines.___Assert_Boolean(false);
    atomic {
      trace(@"#line", 0, 2011, 4, 2013, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_0:
 {
    }
    _____G_1:
 {
    }
  }
  
  void ___CreateAbortingClone_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    bool _____flt1;
    bool _____flt3;
    bool _____flt5;
    atomic {
      trace(@"#line", 0, 2021, 9, 2021, 33);
      
      _____flt1 = (this.___ts == 0);

      if (!_____flt1) {
        goto ____L_1;
      }
    }
    trace(@"#line", 0, 2022, 5, 2022, 44);
    this.___EnlistableStates_CreateAbortingClone_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 2021, 4, 2023, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_1:
 {
    }
    atomic {
      trace(@"#line", 0, 2024, 9, 2024, 33);
      
      _____flt3 = (this.___ts == 1);

      if (!_____flt3) {
        goto ____L_2;
      }
    }
    trace(@"#line", 0, 2025, 5, 2025, 44);
    this.___EnlistableStates_CreateAbortingClone_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 2024, 4, 2026, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_2:
 {
    }
    atomic {
      trace(@"#line", 0, 2027, 9, 2027, 34);
      
      _____flt5 = (this.___ts == 5);

      if (!_____flt5) {
        goto ____L_3;
      }
    }
    trace(@"#line", 0, 2028, 5, 2028, 51);
    this.___TransactionStateAborted_CreateAbortingClone_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 2027, 4, 2029, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_3:
 {
    }
    trace(@"#line", 0, 2031, 5, 2031, 26);
    ___X_Routines.___Assert_Boolean(false);
    atomic {
      trace(@"#line", 0, 2030, 4, 2032, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_0:
 {
    }
    _____G_1:
 {
    }
  }
  
  void ___ChangeStateTransactionAborted_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    bool _____flt1;
    bool _____flt3;
    bool _____flt5;
    bool _____flt7;
    bool _____flt9;
    atomic {
      trace(@"#line", 0, 2040, 9, 2040, 33);
      
      _____flt1 = (this.___ts == 1);

      if (!_____flt1) {
        goto ____L_1;
      }
    }
    trace(@"#line", 0, 2041, 5, 2041, 60);
    this.___TransactionStatePhase0_ChangeStateTransactionAborted_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 2040, 4, 2042, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_1:
 {
    }
    atomic {
      trace(@"#line", 0, 2043, 9, 2043, 41);
      
      _____flt3 = (this.___ts == 2);

      if (!_____flt3) {
        goto ____L_2;
      }
    }
    trace(@"#line", 0, 2044, 5, 2044, 68);
    this.___TransactionStateVolatilePhase1_ChangeStateTransactionAborted_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 2043, 4, 2045, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_2:
 {
    }
    atomic {
      trace(@"#line", 0, 2046, 9, 2046, 38);
      
      _____flt5 = (this.___ts == 3);

      if (!_____flt5) {
        goto ____L_3;
      }
    }
    trace(@"#line", 0, 2047, 5, 2047, 65);
    this.___TransactionStateVolatileSPC_ChangeStateTransactionAborted_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 2046, 4, 2048, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_3:
 {
    }
    atomic {
      trace(@"#line", 0, 2049, 9, 2049, 30);
      
      _____flt7 = (this.___ts == 4);

      if (!_____flt7) {
        goto ____L_4;
      }
    }
    trace(@"#line", 0, 2050, 5, 2050, 57);
    this.___TransactionStateSPC_ChangeStateTransactionAborted_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 2049, 4, 2051, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_4:
 {
    }
    atomic {
      trace(@"#line", 0, 2052, 9, 2052, 34);
      
      _____flt9 = (this.___ts == 5);

      if (!_____flt9) {
        goto ____L_5;
      }
    }
    trace(@"#line", 0, 2053, 5, 2053, 61);
    this.___TransactionStateAborted_ChangeStateTransactionAborted_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 2052, 4, 2054, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_5:
 {
    }
    trace(@"#line", 0, 2056, 5, 2056, 26);
    ___X_Routines.___Assert_Boolean(false);
    atomic {
      trace(@"#line", 0, 2055, 4, 2057, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_0:
 {
    }
    _____G_1:
 {
    }
  }
  
  void ___ChangeStateTransactionCommitted_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    bool _____flt1;
    bool _____flt3;
    atomic {
      trace(@"#line", 0, 2065, 9, 2065, 38);
      
      _____flt1 = (this.___ts == 3);

      if (!_____flt1) {
        goto ____L_1;
      }
    }
    trace(@"#line", 0, 2066, 5, 2066, 67);
    this.___TransactionStateVolatileSPC_ChangeStateTransactionCommitted_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 2065, 4, 2067, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_1:
 {
    }
    atomic {
      trace(@"#line", 0, 2068, 9, 2068, 30);
      
      _____flt3 = (this.___ts == 4);

      if (!_____flt3) {
        goto ____L_2;
      }
    }
    trace(@"#line", 0, 2069, 5, 2069, 59);
    this.___TransactionStateSPC_ChangeStateTransactionCommitted_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 2068, 4, 2070, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_2:
 {
    }
    trace(@"#line", 0, 2072, 5, 2072, 26);
    ___X_Routines.___Assert_Boolean(false);
    atomic {
      trace(@"#line", 0, 2071, 4, 2073, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_0:
 {
    }
    _____G_1:
 {
    }
  }
  
  void ___ChangeStateTransactionInDoubt_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    bool _____flt1;
    bool _____flt3;
    atomic {
      trace(@"#line", 0, 2081, 9, 2081, 38);
      
      _____flt1 = (this.___ts == 3);

      if (!_____flt1) {
        goto ____L_1;
      }
    }
    trace(@"#line", 0, 2082, 5, 2082, 65);
    this.___TransactionStateVolatileSPC_ChangeStateTransactionInDoubt_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 2081, 4, 2083, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_1:
 {
    }
    atomic {
      trace(@"#line", 0, 2084, 9, 2084, 30);
      
      _____flt3 = (this.___ts == 4);

      if (!_____flt3) {
        goto ____L_2;
      }
    }
    trace(@"#line", 0, 2085, 5, 2085, 57);
    this.___TransactionStateSPC_ChangeStateTransactionInDoubt_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 2084, 4, 2086, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_2:
 {
    }
    trace(@"#line", 0, 2088, 5, 2088, 26);
    ___X_Routines.___Assert_Boolean(false);
    atomic {
      trace(@"#line", 0, 2087, 4, 2089, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_0:
 {
    }
    _____G_1:
 {
    }
  }
  
  void ___Timeout_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    bool _____flt1;
    bool _____flt3;
    bool _____flt5;
    bool _____flt7;
    atomic {
      trace(@"#line", 0, 2097, 9, 2097, 33);
      
      _____flt1 = (this.___ts == 0);

      if (!_____flt1) {
        goto ____L_1;
      }
    }
    trace(@"#line", 0, 2098, 5, 2098, 32);
    this.___EnlistableStates_Timeout_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 2097, 4, 2099, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_1:
 {
    }
    atomic {
      trace(@"#line", 0, 2100, 9, 2100, 33);
      
      _____flt3 = (this.___ts == 1);

      if (!_____flt3) {
        goto ____L_2;
      }
    }
    trace(@"#line", 0, 2101, 5, 2101, 32);
    this.___EnlistableStates_Timeout_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 2100, 4, 2102, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_2:
 {
    }
    atomic {
      trace(@"#line", 0, 2103, 9, 2103, 41);
      
      _____flt5 = (this.___ts == 2);

      if (!_____flt5) {
        goto ____L_3;
      }
    }
    trace(@"#line", 0, 2104, 5, 2104, 46);
    this.___TransactionStateVolatilePhase1_Timeout_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 2103, 4, 2105, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_3:
 {
    }
    atomic {
      trace(@"#line", 0, 2106, 9, 2106, 34);
      
      _____flt7 = (this.___ts == 5);

      if (!_____flt7) {
        goto ____L_4;
      }
    }
    trace(@"#line", 0, 2107, 5, 2107, 39);
    this.___TransactionStateAborted_Timeout_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 2106, 4, 2108, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_4:
 {
    }
    atomic {
      trace(@"#line", 0, 2109, 4, 2110, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_0:
 {
    }
    _____G_1:
 {
    }
  }
  
  void ___Phase0VolatilePrepareDone_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    bool _____flt1;
    bool _____flt3;
    bool _____flt5;
    atomic {
      trace(@"#line", 0, 2118, 9, 2118, 33);
      
      _____flt1 = (this.___ts == 0);

      if (!_____flt1) {
        goto ____L_1;
      }
    }
    trace(@"#line", 0, 2119, 5, 2119, 56);
    this.___TransactionStateActive_Phase0VolatilePrepareDone_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 2118, 4, 2120, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_1:
 {
    }
    atomic {
      trace(@"#line", 0, 2121, 9, 2121, 33);
      
      _____flt3 = (this.___ts == 1);

      if (!_____flt3) {
        goto ____L_2;
      }
    }
    trace(@"#line", 0, 2122, 5, 2122, 56);
    this.___TransactionStatePhase0_Phase0VolatilePrepareDone_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 2121, 4, 2123, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_2:
 {
    }
    atomic {
      trace(@"#line", 0, 2124, 9, 2124, 34);
      
      _____flt5 = (this.___ts == 5);

      if (!_____flt5) {
        goto ____L_3;
      }
    }
    trace(@"#line", 0, 2125, 5, 2125, 57);
    this.___TransactionStateAborted_Phase0VolatilePrepareDone_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 2124, 4, 2126, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_3:
 {
    }
    trace(@"#line", 0, 2128, 5, 2128, 26);
    ___X_Routines.___Assert_Boolean(false);
    atomic {
      trace(@"#line", 0, 2127, 4, 2129, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_0:
 {
    }
    _____G_1:
 {
    }
  }
  
  void ___Phase1VolatilePrepareDone_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    bool _____flt1;
    bool _____flt3;
    bool _____flt5;
    bool _____flt7;
    atomic {
      trace(@"#line", 0, 2137, 9, 2137, 33);
      
      _____flt1 = (this.___ts == 0);

      if (!_____flt1) {
        goto ____L_1;
      }
    }
    trace(@"#line", 0, 2138, 5, 2138, 56);
    this.___TransactionStateActive_Phase1VolatilePrepareDone_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 2137, 4, 2139, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_1:
 {
    }
    atomic {
      trace(@"#line", 0, 2140, 9, 2140, 33);
      
      _____flt3 = (this.___ts == 1);

      if (!_____flt3) {
        goto ____L_2;
      }
    }
    trace(@"#line", 0, 2141, 5, 2141, 56);
    this.___TransactionStatePhase0_Phase1VolatilePrepareDone_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 2140, 4, 2142, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_2:
 {
    }
    atomic {
      trace(@"#line", 0, 2143, 9, 2143, 41);
      
      _____flt5 = (this.___ts == 2);

      if (!_____flt5) {
        goto ____L_3;
      }
    }
    trace(@"#line", 0, 2144, 5, 2144, 64);
    this.___TransactionStateVolatilePhase1_Phase1VolatilePrepareDone_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 2143, 4, 2145, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_3:
 {
    }
    atomic {
      trace(@"#line", 0, 2146, 9, 2146, 34);
      
      _____flt7 = (this.___ts == 5);

      if (!_____flt7) {
        goto ____L_4;
      }
    }
    trace(@"#line", 0, 2147, 5, 2147, 57);
    this.___TransactionStateAborted_Phase1VolatilePrepareDone_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 2146, 4, 2148, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_4:
 {
    }
    trace(@"#line", 0, 2150, 5, 2150, 26);
    ___X_Routines.___Assert_Boolean(false);
    atomic {
      trace(@"#line", 0, 2149, 4, 2151, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_0:
 {
    }
    _____G_1:
 {
    }
  }
  
  void ___RestartCommitIfNeeded_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    bool _____flt1;
    bool _____flt3;
    atomic {
      trace(@"#line", 0, 2159, 9, 2159, 33);
      
      _____flt1 = (this.___ts == 1);

      if (!_____flt1) {
        goto ____L_1;
      }
    }
    trace(@"#line", 0, 2160, 5, 2160, 52);
    this.___TransactionStatePhase0_RestartCommitIfNeeded_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 2159, 4, 2161, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_1:
 {
    }
    atomic {
      trace(@"#line", 0, 2163, 9, 2163, 34);
      
      _____flt3 = (this.___ts == 5);

      if (!_____flt3) {
        goto ____L_2;
      }
    }
    trace(@"#line", 0, 2164, 5, 2164, 53);
    this.___TransactionStateAborted_RestartCommitIfNeeded_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 2163, 4, 2165, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_2:
 {
    }
    trace(@"#line", 0, 2167, 5, 2167, 26);
    ___X_Routines.___Assert_Boolean(false);
    atomic {
      trace(@"#line", 0, 2166, 4, 2168, 9);
      goto _____G_1;
      goto ____L_0;
    }
    ____L_0:
 {
    }
    _____G_1:
 {
    }
  }
  
  bool ___ContinuePhase0Prepares() {
    bool _____result__;
    bool _____flt1;
    atomic {
      trace(@"#line", 0, 2176, 9, 2176, 33);
      
      _____flt1 = (this.___ts == 1);

      if (!_____flt1) {
        goto ____L_1;
      }
    }
    trace(@"#line", 0, 2177, 5, 2177, 59);
    
    _____result__ = this.___TransactionStatePhase0_ContinuePhase0Prepares();

    atomic {
      trace(@"#line", 0, 2176, 4, 2177, 59);
      goto _____G_0;
      goto ____L_0;
    }
    ____L_1:
 {
    }
    atomic {
      trace(@"#line", 0, 2178, 4, 2179, 17);
      
      _____result__ = false;

      goto _____G_0;
      goto ____L_0;
    }
    ____L_0:
 {
    }
    _____G_0:
 {
    }
    atomic {
      trace(@"#line", 0, 2174, 3, 2180, 3);
      return _____result__;
    }
  }
  
  bool ___ContinuePhase1Prepares() {
    bool _____result__;
    bool _____flt1;
    atomic {
      trace(@"#line", 0, 2187, 9, 2187, 41);
      
      _____flt1 = (this.___ts == 2);

      if (!_____flt1) {
        goto ____L_1;
      }
    }
    trace(@"#line", 0, 2188, 5, 2188, 67);
    
    _____result__ = this.___TransactionStateVolatilePhase1_ContinuePhase1Prepares();

    atomic {
      trace(@"#line", 0, 2187, 4, 2188, 67);
      goto _____G_0;
      goto ____L_0;
    }
    ____L_1:
 {
    }
    atomic {
      trace(@"#line", 0, 2189, 4, 2190, 17);
      
      _____result__ = false;

      goto _____G_0;
      goto ____L_0;
    }
    ____L_0:
 {
    }
    _____G_0:
 {
    }
    atomic {
      trace(@"#line", 0, 2185, 3, 2191, 3);
      return _____result__;
    }
  }
  
  ___X_TransactionStatus ___ActiveStates_get_Status_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    ___X_TransactionStatus _____result__;
    atomic {
      trace(@"#line", 0, 2196, 3, 2196, 34);
      
      _____result__ = ___X_TransactionStatus.___Active;

      goto _____G_0;
    }
    _____G_0:
 {
    }
    atomic {
      trace(@"#line", 0, 2196, 3, 2196, 34);
      return _____result__;
    }
  }
  
  ___X_DurableEnlistment ___EnlistableStates_DurableEnlist_LtmInternalTransaction_IDENotification_LightweightTransaction(___X_LtmInternalTransaction ___tx, ___X_IDENotification ___enlistmentNotification, ___X_LightweightTransaction ___lightweightTransaction) {
    ___X_DurableEnlistment _____result__;
    bool _____flt0;
    atomic {
      trace(@"#line", 0, 2205, 20, 2205, 47);
      
      _____flt0 = (___tx.___durableEnlistment == null);

    }
    trace(@"#line", 0, 2205, 3, 2205, 49);
    ___X_Routines.___Assert_Boolean(_____flt0);
    atomic {
      trace(@"#line", 0, 2208, 3, 2208, 100);
      
      ___tx.___durableEnlistment = new ___X_DurableEnlistment;

      ___tx.___durableEnlistment.___DurableEnlistment_ctor(___tx, ___enlistmentNotification, ___lightweightTransaction);
    }
    trace(@"#line", 0, 2209, 3, 2209, 84);
    ___X_DurableEnlistmentState.____DurableEnlistmentActive.___EnterState_DurableEnlistment(___tx.___durableEnlistment);
    trace(@"#line", 0, 2211, 3, 2211, 17);
    ___X_Routines.___skip();
    atomic {
      trace(@"#line", 0, 2213, 3, 2213, 30);
      
      _____result__ = ___tx.___durableEnlistment;

      goto _____G_0;
    }
    _____G_0:
 {
    }
    atomic {
      trace(@"#line", 0, 2205, 3, 2213, 30);
      return _____result__;
    }
  }
  
  void ___EnlistableStates_Timeout_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    trace(@"#line", 0, 2218, 3, 2218, 21);
    this.___Rollback_LtmInternalTransaction(___tx);
  }
  
  void ___EnlistableStates_CompleteBlockingClone_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    int _____asp6;
    bool _____flt0;
    int _____flt2;
    bool _____flt1;
    int _____flt4;
    bool _____flt3;
    atomic {
      trace(@"#line", 0, 2226, 3, 2226, 38);
      
      _____asp6 = ___tx.___phase0Volatiles.___dependentClones;

    }
    trace(@"#line", 0, 2226, 3, 2226, 38);
    
    ___tx.___phase0Volatiles.___dependentClones = (___tx.___phase0Volatiles.___dependentClones - 1);

    atomic {
      trace(@"#line", 0, 2227, 20, 2227, 58);
      
      _____flt0 = (___tx.___phase0Volatiles.___dependentClones >= 0);

    }
    trace(@"#line", 0, 2227, 3, 2227, 60);
    ___X_Routines.___Assert_Boolean(_____flt0);
    atomic {
      trace(@"#line", 0, 2230, 20, 2231, 82);
      
      _____flt2 = (___tx.___phase0Volatiles.___volatileEnlistmentCount + ___tx.___phase0Volatiles.___dependentClones);

      
      _____flt1 = (___tx.___phase0Volatiles.___preparedVolatileEnlistments <= _____flt2);

    }
    trace(@"#line", 0, 2230, 3, 2231, 84);
    ___X_Routines.___Assert_Boolean(_____flt1);
    atomic {
      trace(@"#line", 0, 2234, 7, 2235, 66);
      
      _____flt4 = (___tx.___phase0VolatileWaveCount + ___tx.___phase0Volatiles.___dependentClones);

      
      _____flt3 = (___tx.___phase0Volatiles.___preparedVolatileEnlistments == _____flt4);

    }
    trace(@"#line", 0, 2234, 3, 2238, 3);
    if (_____flt3) {
      trace(@"#line", 0, 2237, 4, 2237, 43);
      ___tx.___State.___Phase0VolatilePrepareDone_LtmInternalTransaction(___tx);
    }
    else {
    }
  }
  
  void ___EnlistableStates_CompleteAbortingClone_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    int _____asp7;
    bool _____flt0;
    atomic {
      trace(@"#line", 0, 2247, 3, 2247, 38);
      
      _____asp7 = ___tx.___phase1Volatiles.___dependentClones;

    }
    trace(@"#line", 0, 2247, 3, 2247, 38);
    
    ___tx.___phase1Volatiles.___dependentClones = (___tx.___phase1Volatiles.___dependentClones - 1);

    atomic {
      trace(@"#line", 0, 2248, 20, 2248, 58);
      
      _____flt0 = (___tx.___phase1Volatiles.___dependentClones >= 0);

    }
    trace(@"#line", 0, 2248, 3, 2248, 60);
    ___X_Routines.___Assert_Boolean(_____flt0);
  }
  
  void ___EnlistableStates_CreateBlockingClone_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    int _____asp8;
    atomic {
      trace(@"#line", 0, 2254, 3, 2254, 38);
      
      _____asp8 = ___tx.___phase0Volatiles.___dependentClones;

    }
    trace(@"#line", 0, 2254, 3, 2254, 38);
    
    ___tx.___phase0Volatiles.___dependentClones = (___tx.___phase0Volatiles.___dependentClones + 1);

  }
  
  void ___EnlistableStates_CreateAbortingClone_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    int _____asp9;
    atomic {
      trace(@"#line", 0, 2260, 3, 2260, 38);
      
      _____asp9 = ___tx.___phase1Volatiles.___dependentClones;

    }
    trace(@"#line", 0, 2260, 3, 2260, 38);
    
    ___tx.___phase1Volatiles.___dependentClones = (___tx.___phase1Volatiles.___dependentClones + 1);

  }
  
  void ___TransactionStateActive_EnterState_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    trace(@"#line", 0, 2266, 3, 2266, 49);
    this.___CommonEnterState_LtmInternalTransaction_TransactionState(___tx, ___X_TransactionState.____TransactionStateActive);
  }
  
  void ___TransactionStateActive_BeginCommit_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    trace(@"#line", 0, 2274, 3, 2274, 42);
    ___X_TransactionState.____TransactionStatePhase0.___EnterState_LtmInternalTransaction(___tx);
    trace(@"#line", 0, 2278, 3, 2278, 40);
    ___tx.___State.___CheckSynchronousOutcome_LtmInternalTransaction(___tx);
  }
  
  void ___TransactionStateActive_Rollback_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    trace(@"#line", 0, 2285, 3, 2285, 43);
    ___X_TransactionState.____TransactionStateAborted.___EnterState_LtmInternalTransaction(___tx);
  }
  
  ___X_VolatileEnlistment ___TransactionStateActive_VolatileEnlist_LtmInternalTransaction_IVENotification_Boolean_VN_LightweightTransaction(___X_LtmInternalTransaction ___tx, ___X_IVENotification ___enlistmentNotification, bool ___enlistDuringPrepareRequired, ___X_VN ___vn, ___X_LightweightTransaction ___lightweightTransaction) {
    ___X_VolatileEnlistment ___enlistment;
    atomic {
      trace(@"#line", 0, 2296, 22, 2296, 38);
      
      ___enlistment = null;

    }
    trace(@"#line", 0, 2298, 3, 2307, 3);
    if (___enlistDuringPrepareRequired) {
      atomic {
        trace(@"#line", 0, 2300, 4, 2300, 106);
        
        ___enlistment = new ___X_VolatileEnlistment;

        ___enlistment.___VolatileEnlistment_ctor(___tx, ___enlistmentNotification, ___lightweightTransaction, ___X_VK.___Phase0, ___vn);
      }
      trace(@"#line", 0, 2301, 4, 2301, 57);
      this.___AddVolatileEnlistment_VolatileEnlistmentSet_VolatileEnlistment(___tx.___phase0Volatiles, ___enlistment);
    }
    else {
      atomic {
        trace(@"#line", 0, 2305, 4, 2305, 106);
        
        ___enlistment = new ___X_VolatileEnlistment;

        ___enlistment.___VolatileEnlistment_ctor(___tx, ___enlistmentNotification, ___lightweightTransaction, ___X_VK.___Phase1, ___vn);
      }
      trace(@"#line", 0, 2306, 4, 2306, 57);
      this.___AddVolatileEnlistment_VolatileEnlistmentSet_VolatileEnlistment(___tx.___phase1Volatiles, ___enlistment);
    }
    trace(@"#line", 0, 2309, 3, 2309, 17);
    ___X_Routines.___skip();
    atomic {
      trace(@"#line", 0, 2311, 3, 2311, 20);
      goto _____G_0;
    }
    _____G_0:
 {
    }
    atomic {
      trace(@"#line", 0, 2296, 22, 2311, 20);
      return ___enlistment;
    }
  }
  
  void ___TransactionStateActive_Phase0VolatilePrepareDone_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
  }
  
  void ___TransactionStateActive_Phase1VolatilePrepareDone_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
  }
  
  void ___TransactionStatePhase0_EnterState_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    int ___volatileCount;
    int ___dependentCount;
    int _____flt6;
    bool _____flt0;
    trace(@"#line", 0, 2328, 3, 2328, 49);
    this.___CommonEnterState_LtmInternalTransaction_TransactionState(___tx, ___X_TransactionState.____TransactionStatePhase0);
    atomic {
      trace(@"#line", 0, 2332, 8, 2333, 66);
      
      ___volatileCount = ___tx.___phase0Volatiles.___volatileEnlistmentCount;

      
      ___dependentCount = ___tx.___phase0Volatiles.___dependentClones;

    }
    trace(@"#line", 0, 2336, 3, 2336, 44);
    
    ___tx.___phase0VolatileWaveCount = ___volatileCount;

    atomic {
      trace(@"#line", 0, 2339, 7, 2339, 85);
      
      _____flt6 = (___volatileCount + ___dependentCount);

      
      _____flt0 = (___tx.___phase0Volatiles.___preparedVolatileEnlistments < _____flt6);

    }
    trace(@"#line", 0, 2339, 3, 2358, 3);
    if (_____flt0) {
      int ___i;
      bool _____flt1;
      trace(@"#line", 0, 2342, 4, 2342, 23);
      ___tx.___WaitForOutcome();
      atomic {
        trace(@"#line", 0, 2345, 13, 2345, 36);
        
        ___i = 0;

        
        _____flt1 = (___i < ___volatileCount);

      }
      trace(@"#line", 0, 2345, 4, 2352, 4);
      while (_____flt1) {
        ___X_VolatileEnlistment _____flt2;
        ___X_VolatileEnlistment _____flt3;
        bool _____flt5;
        atomic {
          trace(@"#line", 0, 2347, 5, 2347, 125);
          assert(((___i >= 0) && (___i < ___tx.___phase0Volatiles.___volatileEnlistments.leng)), @"array index out of bound");
          
          _____flt2 = ___tx.___phase0Volatiles.___volatileEnlistments.repr[___i];

          assert(((___i >= 0) && (___i < ___tx.___phase0Volatiles.___volatileEnlistments.leng)), @"array index out of bound");
          
          _____flt3 = ___tx.___phase0Volatiles.___volatileEnlistments.repr[___i];

        }
        trace(@"#line", 0, 2347, 5, 2347, 127);
        _____flt2.___twoPhaseState.___ChangeStatePreparing_VolatileEnlistment(_____flt3);
        trace(@"#line", 0, 2348, 10, 2348, 42);
        
        _____flt5 = ___tx.___State.___ContinuePhase0Prepares();

        atomic {
          trace(@"#line", 0, 2345, 20, 2351, 5);
          if (!_____flt5) {
            goto ___break_4;
          }
          else {
          }
          
          ___i = (___i + 1);

          
          _____flt1 = (___i < ___volatileCount);

        }
      }
      ___break_4:
      ;
    }
    else {
      trace(@"#line", 0, 2357, 4, 2357, 51);
      ___X_TransactionState.____TransactionStateVolatilePhase1.___EnterState_LtmInternalTransaction(___tx);
    }
  }
  
  ___X_DurableEnlistment ___TransactionStatePhase0_DurableEnlist_LtmInternalTransaction_IDENotification_LightweightTransaction(___X_LtmInternalTransaction ___tx, ___X_IDENotification ___enlistmentNotification, ___X_LightweightTransaction ___lightweightTransaction) {
    ___X_DurableEnlistment ___en;
    trace(@"#line", 0, 2366, 21, 2366, 109);
    
    ___en = this.___EnlistableStates_DurableEnlist_LtmInternalTransaction_IDENotification_LightweightTransaction(___tx, ___enlistmentNotification, ___lightweightTransaction);

    trace(@"#line", 0, 2369, 3, 2369, 38);
    ___tx.___State.___RestartCommitIfNeeded_LtmInternalTransaction(___tx);
    atomic {
      trace(@"#line", 0, 2370, 3, 2370, 12);
      goto _____G_0;
    }
    _____G_0:
 {
    }
    atomic {
      trace(@"#line", 0, 2366, 21, 2370, 12);
      return ___en;
    }
  }
  
  ___X_VolatileEnlistment ___TransactionStatePhase0_VolatileEnlist_LtmInternalTransaction_IVENotification_Boolean_VN_LightweightTransaction(___X_LtmInternalTransaction ___tx, ___X_IVENotification ___enlistmentNotification, bool ___enlistDuringPrepareRequired, ___X_VN ___vn, ___X_LightweightTransaction ___lightweightTransaction) {
    ___X_VolatileEnlistment ___enlistment;
    atomic {
      trace(@"#line", 0, 2381, 22, 2381, 38);
      
      ___enlistment = null;

    }
    trace(@"#line", 0, 2383, 3, 2392, 3);
    if (___enlistDuringPrepareRequired) {
      atomic {
        trace(@"#line", 0, 2385, 4, 2385, 107);
        
        ___enlistment = new ___X_VolatileEnlistment;

        ___enlistment.___VolatileEnlistment_ctor(___tx, ___enlistmentNotification, ___lightweightTransaction, ___X_VK.___Phase0, ___vn);
      }
      trace(@"#line", 0, 2386, 4, 2386, 57);
      this.___AddVolatileEnlistment_VolatileEnlistmentSet_VolatileEnlistment(___tx.___phase0Volatiles, ___enlistment);
    }
    else {
      atomic {
        trace(@"#line", 0, 2390, 4, 2390, 107);
        
        ___enlistment = new ___X_VolatileEnlistment;

        ___enlistment.___VolatileEnlistment_ctor(___tx, ___enlistmentNotification, ___lightweightTransaction, ___X_VK.___Phase1, ___vn);
      }
      trace(@"#line", 0, 2391, 4, 2391, 57);
      this.___AddVolatileEnlistment_VolatileEnlistmentSet_VolatileEnlistment(___tx.___phase1Volatiles, ___enlistment);
    }
    trace(@"#line", 0, 2394, 3, 2394, 17);
    ___X_Routines.___skip();
    atomic {
      trace(@"#line", 0, 2396, 3, 2396, 20);
      goto _____G_0;
    }
    _____G_0:
 {
    }
    atomic {
      trace(@"#line", 0, 2381, 22, 2396, 20);
      return ___enlistment;
    }
  }
  
  void ___TransactionStatePhase0_Rollback_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    trace(@"#line", 0, 2401, 3, 2401, 37);
    this.___ChangeStateTransactionAborted_LtmInternalTransaction(___tx);
  }
  
  void ___TransactionStatePhase0_Phase0VolatilePrepareDone_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    int ___volatileCount;
    int ___dependentCount;
    int _____flt6;
    bool _____flt0;
    atomic {
      trace(@"#line", 0, 2412, 8, 2413, 57);
      
      ___volatileCount = ___tx.___phase0Volatiles.___volatileEnlistmentCount;

      
      ___dependentCount = ___tx.___phase0Volatiles.___dependentClones;

    }
    trace(@"#line", 0, 2416, 3, 2416, 44);
    
    ___tx.___phase0VolatileWaveCount = ___volatileCount;

    atomic {
      trace(@"#line", 0, 2419, 7, 2419, 85);
      
      _____flt6 = (___volatileCount + ___dependentCount);

      
      _____flt0 = (___tx.___phase0Volatiles.___preparedVolatileEnlistments < _____flt6);

    }
    trace(@"#line", 0, 2419, 3, 2435, 3);
    if (_____flt0) {
      int ___i;
      bool _____flt1;
      atomic {
        trace(@"#line", 0, 2422, 13, 2422, 36);
        
        ___i = 0;

        
        _____flt1 = (___i < ___volatileCount);

      }
      trace(@"#line", 0, 2422, 4, 2429, 4);
      while (_____flt1) {
        ___X_VolatileEnlistment _____flt2;
        ___X_VolatileEnlistment _____flt3;
        bool _____flt5;
        atomic {
          trace(@"#line", 0, 2424, 5, 2424, 125);
          assert(((___i >= 0) && (___i < ___tx.___phase0Volatiles.___volatileEnlistments.leng)), @"array index out of bound");
          
          _____flt2 = ___tx.___phase0Volatiles.___volatileEnlistments.repr[___i];

          assert(((___i >= 0) && (___i < ___tx.___phase0Volatiles.___volatileEnlistments.leng)), @"array index out of bound");
          
          _____flt3 = ___tx.___phase0Volatiles.___volatileEnlistments.repr[___i];

        }
        trace(@"#line", 0, 2424, 5, 2424, 127);
        _____flt2.___twoPhaseState.___ChangeStatePreparing_VolatileEnlistment(_____flt3);
        trace(@"#line", 0, 2425, 10, 2425, 42);
        
        _____flt5 = ___tx.___State.___ContinuePhase0Prepares();

        atomic {
          trace(@"#line", 0, 2422, 20, 2428, 5);
          if (!_____flt5) {
            goto ___break_5;
          }
          else {
          }
          
          ___i = (___i + 1);

          
          _____flt1 = (___i < ___volatileCount);

        }
      }
      ___break_5:
      ;
    }
    else {
      trace(@"#line", 0, 2434, 4, 2434, 51);
      ___X_TransactionState.____TransactionStateVolatilePhase1.___EnterState_LtmInternalTransaction(___tx);
    }
  }
  
  void ___TransactionStatePhase0_Phase1VolatilePrepareDone_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
  }
  
  void ___TransactionStatePhase0_RestartCommitIfNeeded_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
  }
  
  bool ___TransactionStatePhase0_ContinuePhase0Prepares() {
    atomic {
      trace(@"#line", 0, 2450, 3, 2450, 14);
      goto _____G_0;
    }
    _____G_0:
 {
    }
    atomic {
      trace(@"#line", 0, 2450, 3, 2450, 14);
      return true;
    }
  }
  
  void ___TransactionStatePhase0_ChangeStateTransactionAborted_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    trace(@"#line", 0, 2455, 3, 2455, 43);
    ___X_TransactionState.____TransactionStateAborted.___EnterState_LtmInternalTransaction(___tx);
  }
  
  void ___TransactionStateVolatilePhase1_EnterState_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    bool _____flt0;
    bool _____flt11;
    bool _____flt8;
    bool _____flt1;
    trace(@"#line", 0, 2461, 3, 2461, 57);
    this.___CommonEnterState_LtmInternalTransaction_TransactionState(___tx, ___X_TransactionState.____TransactionStateVolatilePhase1);
    trace(@"#line", 0, 2464, 3, 2464, 43);
    
    ___tx.___committableTransaction.___complete = true;

    atomic {
      trace(@"#line", 0, 2467, 7, 2467, 45);
      
      _____flt0 = (___tx.___phase1Volatiles.___dependentClones != 0);

    }
    trace(@"#line", 0, 2467, 3, 2471, 3);
    if (_____flt0) {
      trace(@"#line", 0, 2469, 4, 2469, 44);
      ___X_TransactionState.____TransactionStateAborted.___EnterState_LtmInternalTransaction(___tx);
      atomic {
        trace(@"#line", 0, 2470, 4, 2470, 10);
        goto _____G_0;
      }
    }
    else {
    }
    atomic {
      trace(@"#line", 0, 2473, 7, 2474, 60);
      
      _____flt11 = (___tx.___phase1Volatiles.___volatileEnlistmentCount == 1);

      if (_____flt11) {
        bool _____flt12;
        
        _____flt12 = (___tx.___durableEnlistment == null);

        
        _____flt8 = _____flt12;

      }
      else {
        
        _____flt8 = false;

      }
      if (_____flt8) {
        ___X_VolatileEnlistment _____flt9;
        bool _____flt10;
        assert(((0 >= 0) && (0 < ___tx.___phase1Volatiles.___volatileEnlistments.leng)), @"array index out of bound");
        
        _____flt9 = ___tx.___phase1Volatiles.___volatileEnlistments.repr[0];

        
        _____flt10 = (_____flt9.___vn == ___X_VN.___SP);

        
        _____flt1 = _____flt10;

      }
      else {
        
        _____flt1 = false;

      }
    }
    trace(@"#line", 0, 2473, 3, 2498, 3);
    if (_____flt1) {
      trace(@"#line", 0, 2477, 4, 2477, 48);
      ___X_TransactionState.____TransactionStateVolatileSPC.___EnterState_LtmInternalTransaction(___tx);
    }
    else {
      bool _____flt2;
      atomic {
        trace(@"#line", 0, 2479, 12, 2479, 57);
        
        _____flt2 = (___tx.___phase1Volatiles.___volatileEnlistmentCount > 0);

      }
      trace(@"#line", 0, 2479, 8, 2498, 3);
      if (_____flt2) {
        int ___i;
        bool _____flt3;
        trace(@"#line", 0, 2482, 4, 2482, 23);
        ___tx.___WaitForOutcome();
        atomic {
          trace(@"#line", 0, 2485, 13, 2485, 65);
          
          ___i = 0;

          
          _____flt3 = (___i < ___tx.___phase1Volatiles.___volatileEnlistmentCount);

        }
        trace(@"#line", 0, 2485, 4, 2492, 4);
        while (_____flt3) {
          ___X_VolatileEnlistment _____flt4;
          ___X_VolatileEnlistment _____flt5;
          bool _____flt7;
          atomic {
            trace(@"#line", 0, 2487, 5, 2487, 125);
            assert(((___i >= 0) && (___i < ___tx.___phase1Volatiles.___volatileEnlistments.leng)), @"array index out of bound");
            
            _____flt4 = ___tx.___phase1Volatiles.___volatileEnlistments.repr[___i];

            assert(((___i >= 0) && (___i < ___tx.___phase1Volatiles.___volatileEnlistments.leng)), @"array index out of bound");
            
            _____flt5 = ___tx.___phase1Volatiles.___volatileEnlistments.repr[___i];

          }
          trace(@"#line", 0, 2487, 5, 2487, 127);
          _____flt4.___twoPhaseState.___ChangeStatePreparing_VolatileEnlistment(_____flt5);
          trace(@"#line", 0, 2488, 10, 2488, 42);
          
          _____flt7 = ___tx.___State.___ContinuePhase1Prepares();

          atomic {
            trace(@"#line", 0, 2485, 20, 2491, 5);
            if (!_____flt7) {
              goto ___break_6;
            }
            else {
            }
            
            ___i = (___i + 1);

            
            _____flt3 = (___i < ___tx.___phase1Volatiles.___volatileEnlistmentCount);

          }
        }
        ___break_6:
        ;
      }
      else {
        trace(@"#line", 0, 2497, 4, 2497, 39);
        this.___TransactionStateSPC_EnterState_LtmInternalTransaction(___tx);
      }
    }
    _____G_0:
 {
    }
  }
  
  void ___TransactionStateVolatilePhase1_Rollback_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    trace(@"#line", 0, 2503, 3, 2503, 37);
    this.___ChangeStateTransactionAborted_LtmInternalTransaction(___tx);
  }
  
  void ___TransactionStateVolatilePhase1_ChangeStateTransactionAborted_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    trace(@"#line", 0, 2508, 3, 2508, 43);
    ___X_TransactionState.____TransactionStateAborted.___EnterState_LtmInternalTransaction(___tx);
  }
  
  void ___TransactionStateVolatilePhase1_Phase1VolatilePrepareDone_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    trace(@"#line", 0, 2514, 3, 2514, 39);
    ___X_TransactionState.____TransactionStateSPC.___EnterState_LtmInternalTransaction(___tx);
  }
  
  bool ___TransactionStateVolatilePhase1_ContinuePhase1Prepares() {
    atomic {
      trace(@"#line", 0, 2519, 3, 2519, 14);
      goto _____G_0;
    }
    _____G_0:
 {
    }
    atomic {
      trace(@"#line", 0, 2519, 3, 2519, 14);
      return true;
    }
  }
  
  void ___TransactionStateVolatilePhase1_Timeout_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    trace(@"#line", 0, 2524, 3, 2524, 21);
    this.___Rollback_LtmInternalTransaction(___tx);
  }
  
  void ___TransactionStateVolatileSPC_EnterState_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    bool _____flt0;
    ___X_VolatileEnlistment _____flt1;
    ___X_VolatileEnlistment _____flt2;
    trace(@"#line", 0, 2530, 3, 2530, 54);
    this.___CommonEnterState_LtmInternalTransaction_TransactionState(___tx, ___X_TransactionState.____TransactionStateVolatileSPC);
    atomic {
      trace(@"#line", 0, 2532, 20, 2532, 66);
      
      _____flt0 = (___tx.___phase1Volatiles.___volatileEnlistmentCount == 1);

    }
    trace(@"#line", 0, 2532, 3, 2532, 68);
    ___X_Routines.___Assert_Boolean(_____flt0);
    trace(@"#line", 0, 2535, 3, 2535, 22);
    ___tx.___WaitForOutcome();
    atomic {
      trace(@"#line", 0, 2537, 3, 2538, 45);
      assert(((0 >= 0) && (0 < ___tx.___phase1Volatiles.___volatileEnlistments.leng)), @"array index out of bound");
      
      _____flt1 = ___tx.___phase1Volatiles.___volatileEnlistments.repr[0];

      assert(((0 >= 0) && (0 < ___tx.___phase1Volatiles.___volatileEnlistments.leng)), @"array index out of bound");
      
      _____flt2 = ___tx.___phase1Volatiles.___volatileEnlistments.repr[0];

    }
    trace(@"#line", 0, 2537, 3, 2538, 47);
    _____flt1.___twoPhaseState.___ChangeStateSinglePhaseCommit_VolatileEnlistment(_____flt2);
  }
  
  void ___TransactionStateVolatileSPC_ChangeStateTransactionCommitted_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    trace(@"#line", 0, 2544, 3, 2544, 45);
    ___X_TransactionState.____TransactionStateCommitted.___EnterState_LtmInternalTransaction(___tx);
  }
  
  void ___TransactionStateVolatileSPC_ChangeStateTransactionInDoubt_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    trace(@"#line", 0, 2550, 3, 2550, 43);
    ___X_TransactionState.____TransactionStateInDoubt.___EnterState_LtmInternalTransaction(___tx);
  }
  
  void ___TransactionStateVolatileSPC_ChangeStateTransactionAborted_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    trace(@"#line", 0, 2556, 3, 2556, 43);
    ___X_TransactionState.____TransactionStateAborted.___EnterState_LtmInternalTransaction(___tx);
  }
  
  void ___TransactionStateSPC_EnterState_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    bool _____flt0;
    trace(@"#line", 0, 2562, 3, 2562, 46);
    this.___CommonEnterState_LtmInternalTransaction_TransactionState(___tx, ___X_TransactionState.____TransactionStateSPC);
    atomic {
      trace(@"#line", 0, 2565, 7, 2565, 34);
      
      _____flt0 = (___tx.___durableEnlistment != null);

    }
    trace(@"#line", 0, 2565, 3, 2577, 3);
    if (_____flt0) {
      trace(@"#line", 0, 2568, 4, 2568, 23);
      ___tx.___WaitForOutcome();
      trace(@"#line", 0, 2571, 4, 2571, 83);
      ___tx.___durableEnlistment.___twoPhaseState.___ChangeStateCommitting_DurableEnlistment(___tx.___durableEnlistment);
    }
    else {
      trace(@"#line", 0, 2576, 4, 2576, 45);
      this.___TransactionStateCommitted_EnterState_LtmInternalTransaction(___tx);
    }
  }
  
  void ___TransactionStateSPC_ChangeStateTransactionCommitted_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    trace(@"#line", 0, 2583, 3, 2583, 44);
    this.___TransactionStateCommitted_EnterState_LtmInternalTransaction(___tx);
  }
  
  void ___TransactionStateSPC_ChangeStateTransactionInDoubt_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    trace(@"#line", 0, 2589, 3, 2589, 42);
    this.___TransactionStateInDoubt_EnterState_LtmInternalTransaction(___tx);
  }
  
  void ___TransactionStateSPC_ChangeStateTransactionAborted_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    trace(@"#line", 0, 2595, 3, 2595, 42);
    this.___TransactionStateAborted_EnterState_LtmInternalTransaction(___tx);
  }
  
  void ___TransactionStateAborted_EnterState_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    int ___i;
    bool _____flt0;
    int ___i__1;
    bool _____flt3;
    bool _____flt5;
    trace(@"#line", 0, 2602, 3, 2602, 50);
    this.___CommonEnterState_LtmInternalTransaction_TransactionState(___tx, ___X_TransactionState.____TransactionStateAborted);
    atomic {
      trace(@"#line", 0, 2607, 12, 2607, 64);
      
      ___i = 0;

      
      _____flt0 = (___i < ___tx.___phase0Volatiles.___volatileEnlistmentCount);

    }
    trace(@"#line", 0, 2607, 3, 2610, 3);
    while (_____flt0) {
      ___X_VolatileEnlistment _____flt1;
      ___X_VolatileEnlistment _____flt2;
      atomic {
        trace(@"#line", 0, 2609, 4, 2609, 119);
        assert(((___i >= 0) && (___i < ___tx.___phase0Volatiles.___volatileEnlistments.leng)), @"array index out of bound");
        
        _____flt1 = ___tx.___phase0Volatiles.___volatileEnlistments.repr[___i];

        assert(((___i >= 0) && (___i < ___tx.___phase0Volatiles.___volatileEnlistments.leng)), @"array index out of bound");
        
        _____flt2 = ___tx.___phase0Volatiles.___volatileEnlistments.repr[___i];

      }
      trace(@"#line", 0, 2609, 4, 2609, 121);
      _____flt1.___twoPhaseState.___InternalAborted_VolatileEnlistment(_____flt2);
      atomic {
        trace(@"#line", 0, 2607, 19, 2607, 69);
        
        ___i = (___i + 1);

        
        _____flt0 = (___i < ___tx.___phase0Volatiles.___volatileEnlistmentCount);

      }
    }
    atomic {
      trace(@"#line", 0, 2612, 12, 2612, 64);
      
      ___i__1 = 0;

      
      _____flt3 = (___i__1 < ___tx.___phase1Volatiles.___volatileEnlistmentCount);

    }
    trace(@"#line", 0, 2612, 3, 2616, 3);
    while (_____flt3) {
      ___X_VolatileEnlistment ___ve;
      ___X_VolatileEnlistment _____flt4;
      atomic {
        trace(@"#line", 0, 2614, 23, 2615, 79);
        assert(((___i__1 >= 0) && (___i__1 < ___tx.___phase1Volatiles.___volatileEnlistments.leng)), @"array index out of bound");
        
        ___ve = ___tx.___phase1Volatiles.___volatileEnlistments.repr[___i__1];

        assert(((___i__1 >= 0) && (___i__1 < ___tx.___phase1Volatiles.___volatileEnlistments.leng)), @"array index out of bound");
        
        _____flt4 = ___tx.___phase1Volatiles.___volatileEnlistments.repr[___i__1];

      }
      trace(@"#line", 0, 2615, 4, 2615, 81);
      ___ve.___twoPhaseState.___InternalAborted_VolatileEnlistment(_____flt4);
      atomic {
        trace(@"#line", 0, 2612, 19, 2612, 69);
        
        ___i__1 = (___i__1 + 1);

        
        _____flt3 = (___i__1 < ___tx.___phase1Volatiles.___volatileEnlistmentCount);

      }
    }
    atomic {
      trace(@"#line", 0, 2619, 7, 2619, 34);
      
      _____flt5 = (___tx.___durableEnlistment != null);

    }
    trace(@"#line", 0, 2619, 3, 2622, 3);
    if (_____flt5) {
      trace(@"#line", 0, 2621, 4, 2621, 77);
      ___tx.___durableEnlistment.___twoPhaseState.___InternalAborted_DurableEnlistment(___tx.___durableEnlistment);
    }
    else {
    }
    trace(@"#line", 0, 2625, 3, 2625, 26);
    ___X_Init.___tx_table.___Remove_LtmInternalTransaction(___tx);
    trace(@"#line", 0, 2627, 3, 2627, 17);
    ___X_Routines.___skip();
    trace(@"#line", 0, 2630, 3, 2630, 23);
    ___tx.___SignalCompletion();
  }
  
  ___X_TransactionStatus ___TransactionStateAborted_get_Status_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    ___X_TransactionStatus _____result__;
    atomic {
      trace(@"#line", 0, 2635, 3, 2635, 35);
      
      _____result__ = ___X_TransactionStatus.___Aborted;

      goto _____G_0;
    }
    _____G_0:
 {
    }
    atomic {
      trace(@"#line", 0, 2635, 3, 2635, 35);
      return _____result__;
    }
  }
  
  void ___TransactionStateAborted_Rollback_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
  }
  
  void ___TransactionStateAborted_BeginCommit_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    trace(@"#line", 0, 2646, 3, 2646, 24);
    ___X_Routines.___Assume_Boolean(false);
  }
  
  void ___TransactionStateAborted_EndCommit_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    trace(@"#line", 0, 2652, 3, 2652, 24);
    ___X_Routines.___Assume_Boolean(false);
  }
  
  void ___TransactionStateAborted_CheckSynchronousOutcome_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    trace(@"#line", 0, 2658, 3, 2658, 25);
    ___tx.___SynchronousOutcome();
  }
  
  void ___TransactionStateAborted_RestartCommitIfNeeded_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
  }
  
  void ___TransactionStateAborted_Timeout_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
  }
  
  void ___TransactionStateAborted_Phase0VolatilePrepareDone_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
  }
  
  void ___TransactionStateAborted_Phase1VolatilePrepareDone_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
  }
  
  void ___TransactionStateAborted_ChangeStateTransactionAborted_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
  }
  
  void ___TransactionStateAborted_CreateBlockingClone_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    trace(@"#line", 0, 2689, 3, 2689, 24);
    ___X_Routines.___Assert_Boolean(false);
  }
  
  void ___TransactionStateAborted_CreateAbortingClone_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    trace(@"#line", 0, 2694, 3, 2694, 24);
    ___X_Routines.___Assert_Boolean(false);
  }
  
  void ___TransactionStateCommitted_EnterState_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    int ___i;
    bool _____flt0;
    int ___i__1;
    bool _____flt3;
    trace(@"#line", 0, 2701, 3, 2701, 52);
    this.___CommonEnterState_LtmInternalTransaction_TransactionState(___tx, ___X_TransactionState.____TransactionStateCommitted);
    atomic {
      trace(@"#line", 0, 2704, 12, 2704, 64);
      
      ___i = 0;

      
      _____flt0 = (___i < ___tx.___phase0Volatiles.___volatileEnlistmentCount);

    }
    trace(@"#line", 0, 2704, 3, 2707, 3);
    while (_____flt0) {
      ___X_VolatileEnlistment _____flt1;
      ___X_VolatileEnlistment _____flt2;
      atomic {
        trace(@"#line", 0, 2706, 4, 2706, 121);
        assert(((___i >= 0) && (___i < ___tx.___phase0Volatiles.___volatileEnlistments.leng)), @"array index out of bound");
        
        _____flt1 = ___tx.___phase0Volatiles.___volatileEnlistments.repr[___i];

        assert(((___i >= 0) && (___i < ___tx.___phase0Volatiles.___volatileEnlistments.leng)), @"array index out of bound");
        
        _____flt2 = ___tx.___phase0Volatiles.___volatileEnlistments.repr[___i];

      }
      trace(@"#line", 0, 2706, 4, 2706, 123);
      _____flt1.___twoPhaseState.___InternalCommitted_VolatileEnlistment(_____flt2);
      atomic {
        trace(@"#line", 0, 2704, 19, 2704, 69);
        
        ___i = (___i + 1);

        
        _____flt0 = (___i < ___tx.___phase0Volatiles.___volatileEnlistmentCount);

      }
    }
    atomic {
      trace(@"#line", 0, 2710, 12, 2710, 64);
      
      ___i__1 = 0;

      
      _____flt3 = (___i__1 < ___tx.___phase1Volatiles.___volatileEnlistmentCount);

    }
    trace(@"#line", 0, 2710, 3, 2713, 3);
    while (_____flt3) {
      ___X_VolatileEnlistment _____flt4;
      ___X_VolatileEnlistment _____flt5;
      atomic {
        trace(@"#line", 0, 2712, 4, 2712, 121);
        assert(((___i__1 >= 0) && (___i__1 < ___tx.___phase1Volatiles.___volatileEnlistments.leng)), @"array index out of bound");
        
        _____flt4 = ___tx.___phase1Volatiles.___volatileEnlistments.repr[___i__1];

        assert(((___i__1 >= 0) && (___i__1 < ___tx.___phase1Volatiles.___volatileEnlistments.leng)), @"array index out of bound");
        
        _____flt5 = ___tx.___phase1Volatiles.___volatileEnlistments.repr[___i__1];

      }
      trace(@"#line", 0, 2712, 4, 2712, 123);
      _____flt4.___twoPhaseState.___InternalCommitted_VolatileEnlistment(_____flt5);
      atomic {
        trace(@"#line", 0, 2710, 19, 2710, 69);
        
        ___i__1 = (___i__1 + 1);

        
        _____flt3 = (___i__1 < ___tx.___phase1Volatiles.___volatileEnlistmentCount);

      }
    }
    trace(@"#line", 0, 2716, 3, 2716, 26);
    ___X_Init.___tx_table.___Remove_LtmInternalTransaction(___tx);
    trace(@"#line", 0, 2718, 3, 2718, 17);
    ___X_Routines.___skip();
    trace(@"#line", 0, 2720, 3, 2720, 23);
    ___tx.___SignalCompletion();
  }
  
  ___X_TransactionStatus ___TransactionStateCommitted_get_Status_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    ___X_TransactionStatus _____result__;
    atomic {
      trace(@"#line", 0, 2725, 3, 2725, 37);
      
      _____result__ = ___X_TransactionStatus.___Committed;

      goto _____G_0;
    }
    _____G_0:
 {
    }
    atomic {
      trace(@"#line", 0, 2725, 3, 2725, 37);
      return _____result__;
    }
  }
  
  void ___TransactionStateCommitted_Rollback_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    trace(@"#line", 0, 2730, 3, 2730, 24);
    ___X_Routines.___Assert_Boolean(false);
  }
  
  void ___TransactionStateCommitted_EndCommit_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
  }
  
  void ___TransactionStateCommitted_CheckSynchronousOutcome_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    trace(@"#line", 0, 2741, 3, 2741, 25);
    ___tx.___SynchronousOutcome();
  }
  
  void ___TransactionStateInDoubt_EnterState_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    int ___i;
    bool _____flt0;
    int ___i__1;
    bool _____flt3;
    trace(@"#line", 0, 2747, 3, 2747, 50);
    this.___CommonEnterState_LtmInternalTransaction_TransactionState(___tx, ___X_TransactionState.____TransactionStateInDoubt);
    atomic {
      trace(@"#line", 0, 2750, 12, 2750, 64);
      
      ___i = 0;

      
      _____flt0 = (___i < ___tx.___phase0Volatiles.___volatileEnlistmentCount);

    }
    trace(@"#line", 0, 2750, 3, 2753, 3);
    while (_____flt0) {
      ___X_VolatileEnlistment _____flt1;
      ___X_VolatileEnlistment _____flt2;
      atomic {
        trace(@"#line", 0, 2752, 4, 2752, 119);
        assert(((___i >= 0) && (___i < ___tx.___phase0Volatiles.___volatileEnlistments.leng)), @"array index out of bound");
        
        _____flt1 = ___tx.___phase0Volatiles.___volatileEnlistments.repr[___i];

        assert(((___i >= 0) && (___i < ___tx.___phase0Volatiles.___volatileEnlistments.leng)), @"array index out of bound");
        
        _____flt2 = ___tx.___phase0Volatiles.___volatileEnlistments.repr[___i];

      }
      trace(@"#line", 0, 2752, 4, 2752, 121);
      _____flt1.___twoPhaseState.___InternalIndoubt_VolatileEnlistment(_____flt2);
      atomic {
        trace(@"#line", 0, 2750, 19, 2750, 69);
        
        ___i = (___i + 1);

        
        _____flt0 = (___i < ___tx.___phase0Volatiles.___volatileEnlistmentCount);

      }
    }
    atomic {
      trace(@"#line", 0, 2756, 12, 2756, 64);
      
      ___i__1 = 0;

      
      _____flt3 = (___i__1 < ___tx.___phase1Volatiles.___volatileEnlistmentCount);

    }
    trace(@"#line", 0, 2756, 3, 2759, 3);
    while (_____flt3) {
      ___X_VolatileEnlistment _____flt4;
      ___X_VolatileEnlistment _____flt5;
      atomic {
        trace(@"#line", 0, 2758, 4, 2758, 119);
        assert(((___i__1 >= 0) && (___i__1 < ___tx.___phase1Volatiles.___volatileEnlistments.leng)), @"array index out of bound");
        
        _____flt4 = ___tx.___phase1Volatiles.___volatileEnlistments.repr[___i__1];

        assert(((___i__1 >= 0) && (___i__1 < ___tx.___phase1Volatiles.___volatileEnlistments.leng)), @"array index out of bound");
        
        _____flt5 = ___tx.___phase1Volatiles.___volatileEnlistments.repr[___i__1];

      }
      trace(@"#line", 0, 2758, 4, 2758, 121);
      _____flt4.___twoPhaseState.___InternalIndoubt_VolatileEnlistment(_____flt5);
      atomic {
        trace(@"#line", 0, 2756, 19, 2756, 69);
        
        ___i__1 = (___i__1 + 1);

        
        _____flt3 = (___i__1 < ___tx.___phase1Volatiles.___volatileEnlistmentCount);

      }
    }
    trace(@"#line", 0, 2762, 3, 2762, 26);
    ___X_Init.___tx_table.___Remove_LtmInternalTransaction(___tx);
    trace(@"#line", 0, 2764, 3, 2764, 17);
    ___X_Routines.___skip();
    trace(@"#line", 0, 2766, 3, 2766, 23);
    ___tx.___SignalCompletion();
  }
  
  ___X_TransactionStatus ___TransactionStateInDoubt_get_Status_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    ___X_TransactionStatus _____result__;
    atomic {
      trace(@"#line", 0, 2771, 3, 2771, 35);
      
      _____result__ = ___X_TransactionStatus.___InDoubt;

      goto _____G_0;
    }
    _____G_0:
 {
    }
    atomic {
      trace(@"#line", 0, 2771, 3, 2771, 35);
      return _____result__;
    }
  }
  
  void ___TransactionStateInDoubt_Rollback_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    trace(@"#line", 0, 2776, 3, 2776, 24);
    ___X_Routines.___Assert_Boolean(false);
  }
  
  void ___TransactionStateInDoubt_EndCommit_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    trace(@"#line", 0, 2780, 3, 2780, 24);
    ___X_Routines.___Assume_Boolean(false);
  }
  
  void ___TransactionStateInDoubt_CheckSynchronousOutcome_LtmInternalTransaction(___X_LtmInternalTransaction ___tx) {
    trace(@"#line", 0, 2786, 3, 2786, 25);
    ___tx.___SynchronousOutcome();
  }
};

array ______PrimitiveArray_L_TransactionList_R_zarray[2] ___X_TransactionList;

class ___PrimitiveArray_L_TransactionList_R {
  ______PrimitiveArray_L_TransactionList_R_zarray repr;
  
  int leng;
};

array ______PrimitiveArray_L_VolatileEnlistment_R_zarray[1] ___X_VolatileEnlistment;

class ___PrimitiveArray_L_VolatileEnlistment_R {
   ______PrimitiveArray_L_VolatileEnlistment_R_zarray repr;
  
  int leng;
};

class ____namespace {
  static atomic void ____InitStatics() {
    trace(@"#line", 0, 74, 44, 1770, 109);
    ___X_Init.count = 0;
    ___X_Init.___tx_table = new ___X_TransactionTable;

    ___X_Init.___tx_table.___TransactionTable_ctor();
    
    ___X_LtmInternalTransaction.___ThreadTransactionCompletionEvent = new ___X_MyAutoResetEvent;

    ___X_LtmInternalTransaction.___ThreadTransactionCompletionEvent.___MyAutoResetEvent_ctor(false);
    
    ___X_DurableEnlistmentState.____DurableEnlistmentActive = new ___X_DurableEnlistmentState;

    ___X_DurableEnlistmentState.____DurableEnlistmentActive.___DurableEnlistmentState_ctor(___X_DS.___DurableEnlistmentActive);
    
    ___X_DurableEnlistmentState.____DurableEnlistmentAborting = new ___X_DurableEnlistmentState;

    ___X_DurableEnlistmentState.____DurableEnlistmentAborting.___DurableEnlistmentState_ctor(___X_DS.___DurableEnlistmentAborting);
    
    ___X_DurableEnlistmentState.____DurableEnlistmentCommitting = new ___X_DurableEnlistmentState;

    ___X_DurableEnlistmentState.____DurableEnlistmentCommitting.___DurableEnlistmentState_ctor(___X_DS.___DurableEnlistmentCommitting);
    
    ___X_DurableEnlistmentState.____DurableEnlistmentEnded = new ___X_DurableEnlistmentState;

    ___X_DurableEnlistmentState.____DurableEnlistmentEnded.___DurableEnlistmentState_ctor(___X_DS.___DurableEnlistmentEnded);
    
    ___X_VolatileEnlistmentState.____VolatileEnlistmentActive = new ___X_VolatileEnlistmentState;

    ___X_VolatileEnlistmentState.____VolatileEnlistmentActive.___VolatileEnlistmentState_ctor(___X_VS.___VolatileEnlistmentActive);
    
    ___X_VolatileEnlistmentState.____VolatileEnlistmentPreparing = new ___X_VolatileEnlistmentState;

    ___X_VolatileEnlistmentState.____VolatileEnlistmentPreparing.___VolatileEnlistmentState_ctor(___X_VS.___VolatileEnlistmentPreparing);
    
    ___X_VolatileEnlistmentState.____VolatileEnlistmentPrepared = new ___X_VolatileEnlistmentState;

    ___X_VolatileEnlistmentState.____VolatileEnlistmentPrepared.___VolatileEnlistmentState_ctor(___X_VS.___VolatileEnlistmentPrepared);
    
    ___X_VolatileEnlistmentState.____VolatileEnlistmentSPC = new ___X_VolatileEnlistmentState;

    ___X_VolatileEnlistmentState.____VolatileEnlistmentSPC.___VolatileEnlistmentState_ctor(___X_VS.___VolatileEnlistmentSPC);
    
    ___X_VolatileEnlistmentState.____VolatileEnlistmentPreparingAborting = new ___X_VolatileEnlistmentState;

    ___X_VolatileEnlistmentState.____VolatileEnlistmentPreparingAborting.___VolatileEnlistmentState_ctor(___X_VS.___VolatileEnlistmentPreparingAborting);
    
    ___X_VolatileEnlistmentState.____VolatileEnlistmentAborting = new ___X_VolatileEnlistmentState;

    ___X_VolatileEnlistmentState.____VolatileEnlistmentAborting.___VolatileEnlistmentState_ctor(___X_VS.___VolatileEnlistmentAborting);
    
    ___X_VolatileEnlistmentState.____VolatileEnlistmentCommitting = new ___X_VolatileEnlistmentState;

    ___X_VolatileEnlistmentState.____VolatileEnlistmentCommitting.___VolatileEnlistmentState_ctor(___X_VS.___VolatileEnlistmentCommitting);
    
    ___X_VolatileEnlistmentState.____VolatileEnlistmentEnded = new ___X_VolatileEnlistmentState;

    ___X_VolatileEnlistmentState.____VolatileEnlistmentEnded.___VolatileEnlistmentState_ctor(___X_VS.___VolatileEnlistmentEnded);
    
    ___X_VolatileEnlistmentState.____VolatileEnlistmentDone = new ___X_VolatileEnlistmentState;

    ___X_VolatileEnlistmentState.____VolatileEnlistmentDone.___VolatileEnlistmentState_ctor(___X_VS.___VolatileEnlistmentDone);
    
    ___X_TransactionState.____TransactionStateActive = new ___X_TransactionState;

    ___X_TransactionState.____TransactionStateActive.___TransactionState_ctor(___X_TS.___TransactionStateActive);
    
    ___X_TransactionState.____TransactionStatePhase0 = new ___X_TransactionState;

    ___X_TransactionState.____TransactionStatePhase0.___TransactionState_ctor(___X_TS.___TransactionStatePhase0);
    
    ___X_TransactionState.____TransactionStateVolatilePhase1 = new ___X_TransactionState;

    ___X_TransactionState.____TransactionStateVolatilePhase1.___TransactionState_ctor(___X_TS.___TransactionStateVolatilePhase1);
    
    ___X_TransactionState.____TransactionStateVolatileSPC = new ___X_TransactionState;

    ___X_TransactionState.____TransactionStateVolatileSPC.___TransactionState_ctor(___X_TS.___TransactionStateVolatileSPC);
    
    ___X_TransactionState.____TransactionStateSPC = new ___X_TransactionState;

    ___X_TransactionState.____TransactionStateSPC.___TransactionState_ctor(___X_TS.___TransactionStateSPC);
    
    ___X_TransactionState.____TransactionStateAborted = new ___X_TransactionState;

    ___X_TransactionState.____TransactionStateAborted.___TransactionState_ctor(___X_TS.___TransactionStateAborted);
    
    ___X_TransactionState.____TransactionStateCommitted = new ___X_TransactionState;

    ___X_TransactionState.____TransactionStateCommitted.___TransactionState_ctor(___X_TS.___TransactionStateCommitted);
    
    ___X_TransactionState.____TransactionStateInDoubt = new ___X_TransactionState;

    ___X_TransactionState.____TransactionStateInDoubt.___TransactionState_ctor(___X_TS.___TransactionStateInDoubt);
  }
};
